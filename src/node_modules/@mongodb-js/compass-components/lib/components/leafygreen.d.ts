import type React from 'react';
import { default as Badge } from '@leafygreen-ui/badge';
import { default as Banner } from '@leafygreen-ui/banner';
import { default as LeafyGreenCheckbox } from '@leafygreen-ui/checkbox';
import { default as LeafyGreenCard } from '@leafygreen-ui/card';
import { default as LeafyGreenConfirmationModal } from '@leafygreen-ui/confirmation-modal';
import { default as Icon } from '@leafygreen-ui/icon';
import { default as LeafyGreenIconButton } from '@leafygreen-ui/icon-button';
import { AtlasLogoMark, MongoDBLogoMark, MongoDBLogo } from '@leafygreen-ui/logo';
import { Menu, MenuSeparator, MenuItem } from '@leafygreen-ui/menu';
import { default as LeafyGreenModal, Footer as LeafyGreenModalFooter } from '@leafygreen-ui/modal';
import { RadioBox, RadioBoxGroup } from '@leafygreen-ui/radio-box-group';
import { Radio, RadioGroup as LeafyGreenRadioGroup } from '@leafygreen-ui/radio-group';
import { SegmentedControlOption } from '@leafygreen-ui/segmented-control';
import { Select as LeafyGreenSelect, Option, OptionGroup } from '@leafygreen-ui/select';
import { Table as LeafyGreenTable, TableHeader, Row, Cell } from '@leafygreen-ui/table';
import { Tabs as LeafyGreenTabs, Tab } from '@leafygreen-ui/tabs';
import { default as LeafyGreenTextArea } from '@leafygreen-ui/text-area';
import { default as LeafyGreenTextInput } from '@leafygreen-ui/text-input';
import { default as Toast } from '@leafygreen-ui/toast';
import { default as LeafyGreenToggle } from '@leafygreen-ui/toggle';
import { default as LeafyGreenTooltip } from '@leafygreen-ui/tooltip';
import { H1, H2, H3, Subtitle, Body, InlineCode, InlineKeyCode, Disclaimer, Overline, Link } from '@leafygreen-ui/typography';
declare const Button: import("@leafygreen-ui/box").ExtendableBox<import("@leafygreen-ui/button/dist/types").ButtonProps & {
    ref?: React.Ref<any> | undefined;
}, "button">;
declare const Card: typeof LeafyGreenCard;
declare const Checkbox: typeof LeafyGreenCheckbox;
declare const ConfirmationModal: typeof LeafyGreenConfirmationModal;
declare const IconButton: typeof LeafyGreenIconButton;
declare const ModalFooter: typeof LeafyGreenModalFooter;
declare const Modal: typeof LeafyGreenModal;
declare const RadioGroup: typeof LeafyGreenRadioGroup;
declare const SegmentedControl: React.ForwardRefExoticComponent<import("@leafygreen-ui/segmented-control/dist/SegmentedControl").SegmentedControlProps & React.RefAttributes<HTMLDivElement>>;
declare const Select: typeof LeafyGreenSelect;
declare const Table: typeof LeafyGreenTable;
declare const Tabs: typeof LeafyGreenTabs;
declare const TextArea: typeof LeafyGreenTextArea;
declare const TextInput: typeof LeafyGreenTextInput;
declare const Toggle: typeof LeafyGreenToggle;
declare const Tooltip: typeof LeafyGreenTooltip;
declare const Label: {
    ({ darkMode, className, children, disabled, ...rest }: Omit<React.DetailedHTMLProps<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, "ref"> & {
        ref?: undefined;
        key?: React.Key | null | undefined;
    } & {
        darkMode?: boolean | undefined;
        htmlFor: string;
        disabled?: boolean | undefined;
    }): JSX.Element;
    displayName: string;
};
declare const Description: {
    ({ darkMode, children, className, ...rest }: Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, "ref"> & {
        ref?: undefined;
        key?: React.Key | null | undefined;
    } & {
        darkMode?: boolean | undefined;
    }): JSX.Element;
    displayName: string;
};
export { AtlasLogoMark, Badge, Banner, Button, Card, Checkbox, ConfirmationModal, Icon, IconButton, Menu, MenuItem, MenuSeparator, Modal, ModalFooter, MongoDBLogoMark, MongoDBLogo, RadioBox, RadioBoxGroup, Radio, RadioGroup, SegmentedControl, SegmentedControlOption, Select, Option, OptionGroup, Table, TableHeader, Row, Cell, Tab, Tabs, TextArea, TextInput, Toast, Toggle, Tooltip, H1, H2, H3, Subtitle, Body, InlineCode, InlineKeyCode, Disclaimer, Overline, Label, Link, Description, };
//# sourceMappingURL=leafygreen.d.ts.map