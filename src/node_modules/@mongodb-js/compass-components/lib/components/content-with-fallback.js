"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FadeInPlaceholder = exports.ContentWithFallback = void 0;
const react_1 = __importStar(require("react"));
const emotion_1 = require("@leafygreen-ui/emotion");
var RenderStatus;
(function (RenderStatus) {
    RenderStatus["Nothing"] = "Nothing";
    RenderStatus["Fallback"] = "Fallback";
    RenderStatus["Content"] = "Content";
    RenderStatus["ContentAnimated"] = "ContentAnimated";
})(RenderStatus || (RenderStatus = {}));
function isContent(status) {
    return [RenderStatus.ContentAnimated, RenderStatus.Content].includes(status);
}
function useRenderWithFallback(isContentReady, { contentAfterFallbackTimeout = 200, fallbackTimeout = 30 } = {}) {
    const [renderStatus, setRenderStatus] = (0, react_1.useState)(isContentReady ? RenderStatus.Content : RenderStatus.Nothing);
    (0, react_1.useEffect)(() => {
        if (isContent(renderStatus)) {
            return;
        }
        if (isContentReady && renderStatus === RenderStatus.Nothing) {
            setRenderStatus(RenderStatus.Content);
            return;
        }
        if (isContentReady && renderStatus === RenderStatus.Fallback) {
            const timeout = setTimeout(() => {
                setRenderStatus(RenderStatus.ContentAnimated);
            }, contentAfterFallbackTimeout);
            return () => {
                clearTimeout(timeout);
            };
        }
        if (!isContentReady && renderStatus === RenderStatus.Nothing) {
            const timeout = setTimeout(() => {
                setRenderStatus(RenderStatus.Fallback);
            }, fallbackTimeout);
            return () => {
                clearTimeout(timeout);
            };
        }
    }, [
        renderStatus,
        isContentReady,
        contentAfterFallbackTimeout,
        fallbackTimeout,
    ]);
    return renderStatus;
}
const ContentWithFallback = ({ content, fallback, isContentReady, contentAfterFallbackTimeout, fallbackTimeout, }) => {
    const renderStatus = useRenderWithFallback(isContentReady, {
        contentAfterFallbackTimeout,
        fallbackTimeout,
    });
    return (react_1.default.createElement(react_1.default.Fragment, null,
        content(isContent(renderStatus), renderStatus === RenderStatus.ContentAnimated),
        fallback(renderStatus === RenderStatus.Fallback)));
};
exports.ContentWithFallback = ContentWithFallback;
const contentWithFallbackContainer = (0, emotion_1.css)({
    position: 'relative',
});
const fadeInAnimation = (0, emotion_1.keyframes)({
    from: {
        opacity: 0,
    },
    to: {
        opacity: 1,
    },
});
const contentContainer = (0, emotion_1.css)({
    position: 'relative',
});
const contentContainerFadeIn = (0, emotion_1.css)({
    animation: `${fadeInAnimation} .16s ease-out`,
});
const fallbackContainer = (0, emotion_1.css)({
    position: 'absolute',
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    opacity: 0,
    transition: 'opacity .16s ease-out',
    pointerEvents: 'none',
});
const fallbackContainerVisible = (0, emotion_1.css)({
    opacity: 1,
    transitionTimingFunction: 'ease-in',
});
const FadeInPlaceholder = ({ content, fallback, isContentReady, contentContainerProps = {}, fallbackContainerProps = {}, className, ...props }) => {
    return (react_1.default.createElement("div", { className: (0, emotion_1.cx)(contentWithFallbackContainer, className), ...props },
        react_1.default.createElement(exports.ContentWithFallback, { isContentReady: isContentReady, content: (shouldRender, shouldAnimate) => {
                return (shouldRender && (react_1.default.createElement("div", { ...contentContainerProps, className: (0, emotion_1.cx)(contentContainer, shouldAnimate && contentContainerFadeIn, contentContainerProps.className) }, content())));
            }, fallback: (shouldRender) => {
                return (react_1.default.createElement("div", { ...fallbackContainerProps, className: (0, emotion_1.cx)(fallbackContainer, shouldRender && fallbackContainerVisible, fallbackContainerProps.className) }, fallback()));
            } })));
};
exports.FadeInPlaceholder = FadeInPlaceholder;
//# sourceMappingURL=content-with-fallback.js.map