"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withTheme = exports.useTheme = exports.ThemeProvider = exports.Theme = void 0;
const react_1 = __importStar(require("react"));
var Theme;
(function (Theme) {
    Theme["Light"] = "Light";
    Theme["Dark"] = "Dark";
})(Theme || (Theme = {}));
exports.Theme = Theme;
const ThemeContext = (0, react_1.createContext)({
    theme: Theme.Light,
});
const ThemeProvider = ({ children, theme, }) => {
    return (react_1.default.createElement(ThemeContext.Provider, { value: theme }, children));
};
exports.ThemeProvider = ThemeProvider;
function useTheme() {
    return (0, react_1.useContext)(ThemeContext);
}
exports.useTheme = useTheme;
const withTheme = function (WrappedComponent) {
    const ComponentWithTheme = (props, ref) => {
        var _a, _b;
        const theme = useTheme();
        const applyTheme = ((_b = (_a = global === null || global === void 0 ? void 0 : global.process) === null || _a === void 0 ? void 0 : _a.env) === null || _b === void 0 ? void 0 : _b.COMPASS_LG_DARKMODE) === 'true';
        return (react_1.default.createElement(WrappedComponent, { darkMode: applyTheme ? (theme === null || theme === void 0 ? void 0 : theme.theme) === Theme.Dark : undefined, ref: ref, ...props }));
    };
    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    ComponentWithTheme.displayName = `withTheme(${displayName})`;
    return react_1.default.forwardRef(ComponentWithTheme);
};
exports.withTheme = withTheme;
//# sourceMappingURL=use-theme.js.map