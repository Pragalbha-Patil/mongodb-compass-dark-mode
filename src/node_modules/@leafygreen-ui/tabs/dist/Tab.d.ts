import React from 'react';
import PropTypes from 'prop-types';
export interface TabProps {
    /**
     * Content that will appear as the title in the Tab list.
     */
    name: React.ReactNode;
    /**
     * Content that will appear inside of Tab panel.
     */
    children?: React.ReactNode;
    /**
     * Boolean that determines if the Tab is disabled.
     */
    disabled?: boolean;
    /**
     * If Tabs component is uncontrolled, this determines what Tab will be selected on first render.
     */
    default?: boolean;
    /**
     * Adds a className to the root element.
     */
    className?: string;
    /**
     * Destination when name is rendered as `a` tag.
     */
    href?: string;
    /**
     * Destination when name is rendered as `Link` tag.
     */
    to?: string;
    selected?: boolean;
    ariaControl?: string;
    [key: string]: any;
}
/**
 * # Tab
 *
 * Tab panel component
 *
 * ```
  <Tab name='First Tab'>Tab 1</Tab>
```
 * @param props.children Content that will appear inside of Tab panel.
 * @param props.disabled Boolean that determines if the Tab is disabled.
 * @param props.name Name that will appear in Tab List.
 * @param props.className Adds a className to the root element.
 * @param props.default If Tabs component is uncontrolled, this determines what Tab will be selected on first render.
 * @param props.href Destination when name is rendered as `a` tag.
 * @param props.to Destination when name is rendered as `Link` tag.
 *
 */
declare function Tab({ selected, children, ...rest }: TabProps): JSX.Element;
declare namespace Tab {
    var displayName: string;
    var propTypes: {
        selected: PropTypes.Requireable<boolean>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        name: PropTypes.Requireable<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
        content: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        disabled: PropTypes.Requireable<boolean>;
        ariaControl: PropTypes.Requireable<string>;
    };
}
export default Tab;
//# sourceMappingURL=Tab.d.ts.map