import React from 'react';
import { ExtendableBox } from '@leafygreen-ui/box';
import { Either } from '@leafygreen-ui/lib';
declare const Size: {
    readonly Default: "default";
    readonly Large: "large";
    readonly XLarge: "xlarge";
};
declare type Size = typeof Size[keyof typeof Size];
export { Size };
interface BaseIconButtonProps extends React.HTMLAttributes<HTMLButtonElement | HTMLAnchorElement> {
    className?: string;
    children?: React.ReactNode;
    disabled?: boolean;
    size?: Size;
    darkMode?: boolean;
    active?: boolean;
    href?: string;
    'aria-label'?: string;
    'aria-labelledby'?: string;
    onClick?: React.MouseEventHandler<HTMLButtonElement | HTMLAnchorElement>;
}
declare type AriaLabels = 'aria-label' | 'aria-labelledby';
declare type AccessibleIconButtonProps = Either<BaseIconButtonProps, AriaLabels>;
declare const IconButton: ExtendableBox<AccessibleIconButtonProps & {
    ref?: React.Ref<any>;
}, 'button'>;
export default IconButton;
//# sourceMappingURL=IconButton.d.ts.map