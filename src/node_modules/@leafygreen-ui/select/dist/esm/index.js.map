{"version":3,"file":"index.js","sources":["../../src/styleSets.ts","../../src/Option.tsx","../../src/SelectContext.tsx","../../src/OptionGroup.tsx","../../src/utils.tsx","../../src/ListMenu.tsx","../../src/MenuButton.tsx","../../src/Select.tsx"],"sourcesContent":["import { transparentize } from 'polished';\nimport { uiColors } from '@leafygreen-ui/palette';\n\nexport const Mode = {\n  Dark: 'dark',\n  Light: 'light',\n} as const;\n\nexport type Mode = typeof Mode[keyof typeof Mode];\n\ninterface ColorSet {\n  label: {\n    base: string;\n    disabled: string;\n  };\n  description: string;\n  border: {\n    base: string;\n    open: string;\n  };\n  text: {\n    base: string;\n    deselected: string;\n    disabled: string;\n  };\n  menu: {\n    shadow: string;\n  };\n  option: {\n    group: {\n      label: string;\n      border: string;\n    };\n    background: {\n      base: string;\n      hovered: string;\n      focused: string;\n    };\n    text: {\n      base: string;\n      selected: string;\n      disabled: string;\n      focused: string;\n    };\n    icon: {\n      base: string;\n      selected: string;\n      disabled: string;\n    };\n    indicator: {\n      focused: string;\n    };\n  };\n}\n\nexport const colorSets: Record<Mode, ColorSet> = {\n  [Mode.Light]: {\n    label: {\n      base: uiColors.gray.dark3,\n      disabled: uiColors.gray.dark1,\n    },\n    description: uiColors.gray.dark1,\n    border: {\n      base: uiColors.gray.light1,\n      open: uiColors.gray.dark1,\n    },\n    text: {\n      base: uiColors.gray.dark3,\n      deselected: uiColors.gray.dark1,\n      disabled: uiColors.gray.base,\n    },\n    menu: {\n      shadow: transparentize(0.78, uiColors.black),\n    },\n    option: {\n      group: {\n        label: uiColors.gray.dark1,\n        border: uiColors.gray.light2,\n      },\n      background: {\n        base: uiColors.white,\n        hovered: uiColors.gray.light2,\n        focused: uiColors.blue.light3,\n      },\n      text: {\n        base: uiColors.gray.dark3,\n        selected: uiColors.blue.base,\n        disabled: uiColors.gray.base,\n        focused: uiColors.blue.dark2,\n      },\n      icon: {\n        base: uiColors.gray.dark1,\n        selected: uiColors.blue.base,\n        disabled: uiColors.gray.base,\n      },\n      indicator: {\n        focused: uiColors.blue.base,\n      },\n    },\n  },\n\n  [Mode.Dark]: {\n    label: {\n      base: uiColors.white,\n      disabled: uiColors.gray.light1,\n    },\n    description: uiColors.gray.light1,\n    border: {\n      base: uiColors.gray.dark2,\n      open: uiColors.gray.dark2,\n    },\n    text: {\n      base: uiColors.white,\n      deselected: uiColors.gray.light1,\n      disabled: uiColors.gray.dark1,\n    },\n    menu: {\n      shadow: transparentize(0.2, uiColors.black),\n    },\n    option: {\n      group: {\n        label: uiColors.gray.light1,\n        border: uiColors.gray.dark1,\n      },\n      background: {\n        base: uiColors.gray.dark2,\n        hovered: uiColors.gray.dark1,\n        focused: uiColors.blue.base,\n      },\n      text: {\n        base: uiColors.white,\n        selected: '#9DD0E7',\n        disabled: uiColors.gray.base,\n        focused: uiColors.white,\n      },\n      icon: {\n        base: uiColors.gray.light1,\n        selected: '#9DD0E7',\n        disabled: uiColors.gray.base,\n      },\n      indicator: {\n        focused: uiColors.white,\n      },\n    },\n  },\n};\n\nexport const Size = {\n  XSmall: 'xsmall',\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n} as const;\n\nexport type Size = typeof Size[keyof typeof Size];\n\ninterface SizeSet {\n  height: number;\n  text: number;\n  label: {\n    text: number;\n    lineHeight: number;\n  };\n  description: {\n    text: number;\n    lineHeight: number;\n  };\n  option: {\n    text: number;\n  };\n  warningIcon: number;\n}\n\nexport const sizeSets: Record<Size, SizeSet> = {\n  [Size.XSmall]: {\n    height: 22,\n    text: 12,\n    label: {\n      text: 14,\n      lineHeight: 16,\n    },\n    description: {\n      text: 14,\n      lineHeight: 16,\n    },\n    option: {\n      text: 14,\n    },\n    warningIcon: 12,\n  },\n  [Size.Small]: {\n    height: 28,\n    text: 14,\n    label: {\n      text: 14,\n      lineHeight: 16,\n    },\n    description: {\n      text: 14,\n      lineHeight: 16,\n    },\n    option: {\n      text: 14,\n    },\n    warningIcon: 14,\n  },\n  [Size.Default]: {\n    height: 36,\n    text: 14,\n    label: {\n      text: 14,\n      lineHeight: 16,\n    },\n    description: {\n      text: 14,\n      lineHeight: 20,\n    },\n    option: {\n      text: 14,\n    },\n    warningIcon: 14,\n  },\n  [Size.Large]: {\n    height: 48,\n    text: 18,\n    label: {\n      text: 18,\n      lineHeight: 21,\n    },\n    description: {\n      text: 18,\n      lineHeight: 24,\n    },\n    option: {\n      text: 16,\n    },\n    warningIcon: 17.5,\n  },\n};\n\nexport const mobileSizeSet: SizeSet = {\n  height: 36,\n  text: 16,\n  label: {\n    text: 16,\n    lineHeight: 19,\n  },\n  description: {\n    text: 16,\n    lineHeight: 22,\n  },\n  option: {\n    text: 16,\n  },\n  warningIcon: 14,\n};\n\nexport const State = {\n  None: 'none',\n  Error: 'error',\n} as const;\n\nexport type State = typeof State[keyof typeof State];\n","import React, { useCallback, useContext, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUsingKeyboardContext } from '@leafygreen-ui/leafygreen-provider';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { usePrevious } from '@leafygreen-ui/hooks';\nimport { createDataProp } from '@leafygreen-ui/lib';\nimport CheckmarkIcon from '@leafygreen-ui/icon/dist/Checkmark';\nimport { LGGlyph } from '@leafygreen-ui/icon/src/types';\nimport { colorSets } from './styleSets';\nimport SelectContext from './SelectContext';\n\nconst option = createDataProp('option');\n\ntype GlyphElement = React.ReactElement<LGGlyph.ComponentProps> & {\n  type?: { isGlyph?: boolean };\n};\n\nexport type ReactEmpty = null | undefined | false | '';\n\nconst optionStyle = css`\n  display: flex;\n  width: 100%;\n  padding: 10px 12px;\n  outline: none;\n  overflow-wrap: anywhere;\n  transition: background-color 150ms ease-in-out;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    transform: scaleY(0.3);\n    top: 7px;\n    bottom: 7px;\n    left: 0;\n    right: 0;\n    width: 4px;\n    border-radius: 0px 4px 4px 0px;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n`;\n\nconst optionTextStyle = css`\n  display: flex;\n  align-items: center;\n`;\n\nconst iconStyle = css`\n  min-width: 16px;\n  margin-right: 6px;\n`;\n\nconst glyphFocusStyle = css`\n  ${option.selector}:focus & {\n    color: currentColor;\n  }\n`;\n\nexport interface InternalProps {\n  children: React.ReactNode;\n  className: string | undefined;\n  glyph: GlyphElement | undefined;\n  selected: boolean;\n  focused: boolean;\n  disabled: boolean;\n  onClick: React.MouseEventHandler;\n  onFocus: React.FocusEventHandler;\n  isDeselection: boolean;\n  hasGlyphs: boolean;\n  triggerScrollIntoView: boolean;\n}\n\nexport function InternalOption({\n  children,\n  className,\n  glyph,\n  selected,\n  focused,\n  disabled,\n  onClick,\n  onFocus,\n  isDeselection,\n  triggerScrollIntoView,\n  hasGlyphs,\n}: InternalProps) {\n  const { mode } = useContext(SelectContext);\n  const { usingKeyboard: showFocus } = useUsingKeyboardContext();\n\n  const { option: colorSet } = colorSets[mode];\n\n  const ref = useRef<HTMLLIElement>(null);\n\n  const scrollIntoView = useCallback(() => {\n    if (ref.current == null) {\n      return null;\n    }\n\n    const element = ref.current;\n    const parent = element?.offsetParent;\n\n    if (!parent) {\n      return null;\n    }\n\n    // Can't use Element.scrollIntoView because it might\n    // cause scrolling outside the immediate parent.\n    parent.scrollTop =\n      element.offsetTop + (element.clientHeight - parent.clientHeight) / 2;\n  }, [ref]);\n\n  const alreadyScrolledIntoView = usePrevious(triggerScrollIntoView);\n  const shouldScrollIntoView =\n    triggerScrollIntoView && !alreadyScrolledIntoView;\n\n  useEffect(() => {\n    if (shouldScrollIntoView) {\n      scrollIntoView();\n    }\n  }, [scrollIntoView, shouldScrollIntoView]);\n\n  const wasFocused = usePrevious(focused);\n  const shouldFocus = focused && !wasFocused;\n\n  useEffect(() => {\n    if (shouldFocus) {\n      ref.current!.focus();\n    }\n  }, [shouldFocus]);\n\n  const styledChildren: React.ReactNode = (\n    <span\n      className={cx(optionTextStyle, {\n        [css`\n          font-weight: bold;\n        `]: selected && !isDeselection,\n      })}\n    >\n      {children}\n    </span>\n  );\n\n  const iconPlaceholder = (\n    <span\n      className={cx(\n        iconStyle,\n        css`\n          height: 100%;\n        `,\n      )}\n    />\n  );\n\n  let styledGlyph = iconPlaceholder;\n\n  if (glyph) {\n    if (!glyph.type.isGlyph) {\n      console.error(\n        '`Option` instance did not render icon because it is not a known glyph element.',\n      );\n    } else {\n      styledGlyph = React.cloneElement(glyph, {\n        key: 'glyph',\n        className: cx(\n          iconStyle,\n          css`\n            color: ${colorSet.icon.base};\n          `,\n          {\n            [glyphFocusStyle]: showFocus,\n            [css`\n              color: ${colorSet.icon.disabled};\n            `]: disabled,\n          },\n          glyph.props.className,\n        ),\n      });\n    }\n  }\n\n  const checkmark =\n    selected && !isDeselection ? (\n      <CheckmarkIcon\n        key=\"checkmark\"\n        className={cx(\n          iconStyle,\n          css`\n            color: ${colorSet.icon.selected};\n          `,\n          {\n            [glyphFocusStyle]: showFocus,\n            [css`\n              color: ${colorSet.icon.disabled};\n            `]: disabled,\n          },\n        )}\n      />\n    ) : (\n      iconPlaceholder\n    );\n\n  let renderedChildren: React.ReactNode;\n\n  if (hasGlyphs) {\n    renderedChildren = (\n      <span\n        className={css`\n          display: flex;\n          justify-content: space-between;\n          width: 100%;\n        `}\n      >\n        <span\n          className={css`\n            display: flex;\n          `}\n        >\n          {styledGlyph}\n          {styledChildren}\n        </span>\n        {checkmark}\n      </span>\n    );\n  } else {\n    renderedChildren = (\n      <>\n        {checkmark}\n        {styledChildren}\n      </>\n    );\n  }\n\n  return (\n    <li\n      {...option.prop}\n      role=\"option\"\n      aria-selected={selected}\n      tabIndex={-1}\n      ref={ref}\n      className={cx(\n        optionStyle,\n        css`\n          cursor: pointer;\n          color: ${colorSet.text.base};\n        `,\n        {\n          [css`\n            &:hover {\n              background-color: ${colorSet.background.hovered};\n            }\n          `]: !disabled,\n          [css`\n            &:focus {\n              color: ${colorSet.text.focused};\n              background-color: ${colorSet.background.focused};\n\n              &:before {\n                opacity: 1;\n                transform: scaleY(1);\n                background-color: ${colorSet.indicator.focused};\n              }\n            }\n          `]: showFocus && !disabled,\n          [css`\n            cursor: not-allowed;\n            color: ${colorSet.text.disabled};\n          `]: disabled,\n        },\n        className,\n      )}\n      onClick={onClick}\n      onFocus={onFocus}\n      onKeyDown={undefined}\n    >\n      {renderedChildren}\n    </li>\n  );\n}\n\nInternalOption.displayName = 'Option';\n\ninterface Props {\n  className?: string;\n  glyph?: GlyphElement;\n  disabled?: boolean;\n  value?: string;\n  children: React.ReactText | Array<React.ReactText | ReactEmpty>;\n}\n\nexport default function Option(_: Props): JSX.Element {\n  throw Error('`Option` must be a child of a `Select` instance');\n}\n\nOption.displayName = 'Option';\n\nconst textPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\n\nOption.propTypes = {\n  children: PropTypes.oneOfType([\n    textPropType,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        textPropType,\n        PropTypes.oneOf([false, null, undefined, '']),\n      ]),\n    ),\n  ]).isRequired,\n  className: PropTypes.string,\n  glyph: PropTypes.element,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\n// React.ReactComponentElement messes up the original\n// typing of props, so it is fixed up by overriding it.\nexport type OptionElement = Omit<\n  React.ReactComponentElement<typeof Option>,\n  'props'\n> & { props: Props };\n","import { createContext } from 'react';\nimport { Mode, Size } from './styleSets';\n\ninterface SelectData {\n  mode: Mode;\n  size: Size;\n  open: boolean;\n  disabled: boolean;\n}\n\nexport const SelectContext = createContext<SelectData>({\n  mode: Mode.Light,\n  size: Size.Default,\n  open: false,\n  disabled: false,\n});\n\nexport default SelectContext;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { useIdAllocator } from '@leafygreen-ui/hooks';\nimport Option from './Option';\nimport SelectContext from './SelectContext';\nimport { colorSets } from './styleSets';\n\nconst optionGroupStyle = css`\n  padding-top: 8px;\n`;\n\nconst optionGroupLabelStyle = css`\n  cursor: default;\n  width: 100%;\n  padding: 0 12px 2px;\n  outline: none;\n  overflow-wrap: anywhere;\n  font-size: 12px;\n  line-height: 16px;\n  font-weight: bold;\n  text-transform: uppercase;\n  letter-spacing: 0.4px;\n`;\n\nexport type ReactEmpty = null | undefined | false | '';\n\nexport interface InternalProps {\n  className: string | undefined;\n  label: string;\n  children: React.ReactNode;\n}\n\nexport function InternalOptionGroup({\n  className,\n  label,\n  children,\n}: InternalProps) {\n  const { mode } = useContext(SelectContext);\n  const colorSet = colorSets[mode].option;\n\n  const groupId = useIdAllocator({ prefix: 'select-option-group' });\n\n  return (\n    <div\n      className={cx(\n        optionGroupStyle,\n        css`\n          border-bottom: 1px solid ${colorSet.group.border};\n        `,\n        className,\n      )}\n    >\n      <div\n        id={groupId}\n        className={cx(\n          optionGroupLabelStyle,\n          css`\n            color: ${colorSet.group.label};\n          `,\n        )}\n      >\n        {label}\n      </div>\n      <div role=\"group\" aria-labelledby={groupId}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nInternalOptionGroup.displayName = 'OptionGroup';\n\ninterface Props {\n  className?: string;\n  label: string;\n  disabled?: boolean;\n  children:\n    | React.ReactFragment\n    | React.ReactComponentElement<typeof Option>\n    | Array<\n        | React.ReactComponentElement<typeof Option>\n        | React.ReactFragment\n        | ReactEmpty\n      >;\n}\n\nexport default function OptionGroup(_: Props): JSX.Element {\n  throw Error('`OptionGroup` must be a child of a `Select` instance');\n}\n\nOptionGroup.displayName = 'OptionGroup';\n\nOptionGroup.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.oneOf([false, null, undefined, '']),\n        PropTypes.element,\n      ]),\n    ),\n  ]).isRequired,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n};\n\nexport type OptionGroupElement = React.ReactComponentElement<\n  typeof OptionGroup\n>;\n","import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { isComponentType } from '@leafygreen-ui/lib';\nimport {\n  InternalOption,\n  InternalProps as InternalOptionProps,\n  OptionElement,\n  ReactEmpty,\n} from './Option';\nimport { InternalOptionGroup, OptionGroupElement } from './OptionGroup';\nimport { isFragment } from 'react-is';\n\nfunction isReactEmpty(value: React.ReactNode): value is ReactEmpty {\n  return (\n    value === undefined || value === null || value === false || value === ''\n  );\n}\n\nexport function traverseSelectChildren(\n  children: React.ReactNode,\n  optionFn: (child: OptionElement, group?: OptionGroupElement) => void,\n): void {\n  React.Children.forEach(children, child => {\n    if (isComponentType<OptionElement>(child, 'Option')) {\n      optionFn(child);\n    } else if (isComponentType<OptionGroupElement>(child, 'OptionGroup')) {\n      traverseSelectChildren(child.props.children, option =>\n        optionFn(option, child),\n      );\n    } else if (isFragment(child)) {\n      traverseSelectChildren(child.props.children, optionFn);\n    }\n  });\n}\n\nexport function convertToInternalElements(\n  children: React.ReactNode,\n  optionFn: (\n    child: OptionElement,\n    group?: OptionGroupElement,\n  ) => InternalOptionProps,\n  fallbackFn?: (child: React.ReactNode) => void,\n): React.ReactNode {\n  return React.Children.map(children, child => {\n    if (isComponentType<OptionElement>(child, 'Option')) {\n      return <InternalOption {...optionFn(child)} />;\n    } else if (isComponentType<OptionGroupElement>(child, 'OptionGroup')) {\n      const { children: options, ...rest } = child.props;\n      return (\n        <InternalOptionGroup className={undefined} {...rest}>\n          {convertToInternalElements(\n            options,\n            option => optionFn(option, child),\n            fallbackFn,\n          )}\n        </InternalOptionGroup>\n      );\n    } else if (isFragment(child)) {\n      return convertToInternalElements(\n        child.props.children,\n        optionFn,\n        fallbackFn,\n      );\n    } else if (!isReactEmpty(child)) {\n      fallbackFn?.(child);\n    }\n\n    return null;\n  });\n}\n\nexport function getOptionValue(option: OptionElement | null): string {\n  if (option === null) {\n    return '';\n  }\n\n  if (option.props.value !== undefined) {\n    return option.props.value;\n  }\n\n  if (Array.isArray(option.props.children)) {\n    return option.props.children.filter(child => !isReactEmpty(child)).join('');\n  }\n\n  return option.props.children.toString();\n}\n\nexport function isOptionDisabled(\n  option: OptionElement,\n  group: OptionGroupElement | undefined,\n): boolean {\n  return (option.props.disabled ?? false) || (group?.props?.disabled ?? false);\n}\n\nexport function isOptionSelectable(\n  option: OptionElement,\n  group: OptionGroupElement | undefined,\n  value: string,\n): boolean {\n  return getOptionValue(option) === value && !isOptionDisabled(option, group);\n}\n\n/**\n * Given the selected option from a previous render, attempts to find a\n * match among the options of the next render to become the next selected\n * option, so that the state of the component doesn't need to be lost.\n */\nexport function reconcileOption(\n  children: React.ReactNode,\n  previousOption: OptionElement,\n): OptionElement | null {\n  // we disregard `key`s because they should only be compared in\n  // the context of the same parent element, which we don't know\n  // and would be complex to track. we disregard which option\n  // group the previous option was in as well for simplicity.\n  let sameInstance: OptionElement | undefined;\n  let sameChildrenAndValue: OptionElement | undefined;\n  let sameExplicitValue: OptionElement | undefined;\n  let sameValue: OptionElement | undefined;\n\n  traverseSelectChildren(children, option => {\n    if (option === previousOption) {\n      sameInstance = previousOption;\n    } else if (\n      option.props.children === previousOption.props.children &&\n      option.props.value === previousOption.props.value\n    ) {\n      sameChildrenAndValue ??= option;\n    } else if (\n      option.props.value !== undefined &&\n      option.props.value === previousOption.props.value\n    ) {\n      sameExplicitValue ??= option;\n    } else if (getOptionValue(option) === getOptionValue(previousOption)) {\n      sameValue ??= option;\n    }\n  });\n\n  return (\n    sameInstance ??\n    sameChildrenAndValue ??\n    sameExplicitValue ??\n    sameValue ??\n    null\n  );\n}\n\nexport function useObservedRef<T>(\n  callback: (value: T) => void,\n  initialValue: T,\n  options: { initialValue: T; deps?: React.DependencyList },\n): React.MutableRefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T) => void,\n  options?: { initialValue: T | null; deps?: React.DependencyList },\n): React.RefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T | undefined) => void,\n  options?: { deps?: React.DependencyList },\n): React.MutableRefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T | null | undefined) => void,\n  {\n    initialValue,\n    deps = [],\n  }: { initialValue?: T | null; deps?: React.DependencyList } = {},\n) {\n  const ref = useRef(initialValue);\n\n  return useMemo(\n    () => ({\n      get current() {\n        return ref.current;\n      },\n      set current(nextValue) {\n        ref.current = nextValue;\n        callback(nextValue);\n      },\n    }),\n    [\n      callback,\n      ref,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...deps,\n    ],\n  );\n}\n\ntype SettableRef<T> = React.RefCallback<T> | React.MutableRefObject<T>;\n\ntype ValueOrArray<T> = T | ReadonlyArray<T>;\n\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T> | null>,\n  initialValue: T,\n): React.MutableRefObject<T>;\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T | null> | null>,\n  initialValue: T | null,\n): React.RefObject<T>;\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T | null | undefined> | null>,\n  initialValue?: T | null,\n): React.MutableRefObject<T | null | undefined> {\n  const forwardValueToRefs = useCallback(\n    <T,>(\n      forwardedRefOrRefs: ValueOrArray<SettableRef<T> | null>,\n      nextValue: T,\n    ) => {\n      if (Array.isArray(forwardedRefOrRefs)) {\n        forwardedRefOrRefs.forEach(forwardValueToRefs);\n      } else if (typeof forwardedRefOrRefs === 'function') {\n        forwardedRefOrRefs(nextValue);\n      } else if (forwardedRefOrRefs) {\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/40527\n        forwardedRefOrRefs.current = nextValue;\n      }\n    },\n    [],\n  );\n\n  return useObservedRef(\n    useCallback(value => forwardValueToRefs(forwardedRefOrRefs, value), [\n      forwardedRefOrRefs,\n      forwardValueToRefs,\n    ]),\n    { initialValue },\n  );\n}\n\n/**\n * TODO: Explore obsoleting `useElementNode` in favor of this\n */\nexport const useStateRef: typeof useRef = <T,>(initialValue?: T) => {\n  const [value, setValue] = useState(initialValue);\n  return useObservedRef(setValue, { initialValue, deps: [value] });\n};\n","import React, { useCallback, useContext } from 'react';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport Popover, { Align, Justify, PopoverProps } from '@leafygreen-ui/popover';\nimport { breakpoints, fontFamilies } from '@leafygreen-ui/tokens';\nimport { useViewportSize } from '@leafygreen-ui/hooks';\nimport SelectContext from './SelectContext';\nimport { colorSets, mobileSizeSet, sizeSets } from './styleSets';\nimport { useForwardedRef } from './utils';\nimport { useMemo } from 'react';\n\nconst maxMenuHeight = 274;\nconst menuMargin = 8;\n\nconst menuStyle = css`\n  position: relative;\n  text-align: left;\n  width: 100%;\n  border-radius: 3px;\n  line-height: 16px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n`;\n\ntype ListMenuProps = {\n  children: React.ReactNode;\n  id: string;\n  referenceElement: React.MutableRefObject<HTMLElement | null>;\n  className?: string;\n  labelId?: string;\n} & Omit<PopoverProps, 'active' | 'refEl'>;\n\nconst ListMenu = React.forwardRef<HTMLUListElement, ListMenuProps>(\n  function ListMenu(\n    {\n      children,\n      id,\n      referenceElement,\n      className,\n      labelId,\n      usePortal = true,\n      portalContainer,\n      scrollContainer,\n      portalClassName,\n      popoverZIndex,\n    }: ListMenuProps,\n    forwardedRef,\n  ) {\n    const { mode, size, disabled, open } = useContext(SelectContext);\n    const colorSet = colorSets[mode];\n    const sizeSet = sizeSets[size];\n\n    const ref = useForwardedRef(forwardedRef, null);\n\n    const viewportSize = useViewportSize();\n\n    const maxHeight = useMemo(() => {\n      if (viewportSize && ref.current && referenceElement.current) {\n        const {\n          top: triggerTop,\n          bottom: triggerBottom,\n        } = referenceElement.current.getBoundingClientRect();\n\n        // Find out how much space is available above or below the trigger\n        const safeSpace = Math.max(\n          viewportSize.height - triggerBottom,\n          triggerTop,\n        );\n\n        // if there's more than enough space, set to maxMenuHeight\n        // otherwise fill the space available\n        return Math.min(maxMenuHeight, safeSpace - menuMargin);\n      }\n\n      return maxMenuHeight;\n    }, [ref, referenceElement, viewportSize]);\n\n    const onClick = useCallback(\n      (event: React.MouseEvent) => {\n        if (ref.current) {\n          ref.current.focus();\n        }\n        event.stopPropagation();\n      },\n      [ref],\n    );\n\n    const popoverProps = {\n      popoverZIndex,\n      ...(usePortal\n        ? { usePortal, portalClassName, portalContainer, scrollContainer }\n        : { usePortal }),\n    };\n\n    return (\n      <Popover\n        active={open && !disabled}\n        spacing={4}\n        align={Align.Bottom}\n        justify={Justify.Middle}\n        adjustOnMutation\n        className={className}\n        refEl={referenceElement}\n        {...popoverProps}\n      >\n        {/* Keyboard events handled in Select component through event listener hook */}\n        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events */}\n        <ul\n          aria-labelledby={labelId}\n          role=\"listbox\"\n          ref={ref}\n          tabIndex={-1}\n          onClick={onClick}\n          className={cx(\n            menuStyle,\n            css`\n              font-family: ${fontFamilies.default};\n              font-size: ${sizeSet.option.text}px;\n              min-height: ${sizeSet.height}px;\n              max-height: ${maxHeight}px;\n              background-color: ${colorSet.option.background.base};\n              box-shadow: 0 3px 7px 0 ${colorSet.menu.shadow};\n\n              @media only screen and (max-width: ${breakpoints.Desktop}px) {\n                font-size: ${mobileSizeSet.option.text}px;\n              }\n            `,\n          )}\n          id={id}\n        >\n          {children}\n        </ul>\n      </Popover>\n    );\n  },\n);\n\nListMenu.displayName = 'ListMenu';\n\nexport default ListMenu;\n","import React, { useCallback, useContext } from 'react';\nimport Button, { Variant } from '@leafygreen-ui/button';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport CaretDownIcon from '@leafygreen-ui/icon/dist/CaretDown';\nimport { breakpoints, spacing } from '@leafygreen-ui/tokens';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport WarningIcon from '@leafygreen-ui/icon/dist/Warning';\nimport { colorSets, mobileSizeSet, Mode, sizeSets } from './styleSets';\nimport SelectContext from './SelectContext';\nimport { useForwardedRef } from './utils';\nimport { State } from '.';\n\nconst menuButtonStyle = css`\n  margin-top: 2px;\n\n  // reset default Button padding\n  > span {\n    padding: 0;\n  }\n`;\n\nconst menuButtonTextStyle = css`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 100%;\n`;\n\ntype Props = {\n  children: React.ReactNode;\n  value: string;\n  text: React.ReactNode;\n  name?: string;\n  deselected: boolean;\n  readOnly?: boolean;\n  onClose: () => void;\n  onOpen: () => void;\n  errorMessage?: string;\n  state?: State;\n  __INTERNAL__menuButtonSlot__?: React.ForwardRefExoticComponent<\n    React.RefAttributes<unknown>\n  >;\n} & Required<\n  Pick<\n    JSX.IntrinsicElements['div'],\n    'aria-labelledby' | 'aria-controls' | 'aria-expanded' | 'aria-describedby'\n  >\n>;\n\nconst MenuButton = React.forwardRef<HTMLElement, Props>(function MenuButton(\n  {\n    children,\n    value,\n    text,\n    name,\n    deselected,\n    readOnly,\n    onClose,\n    onOpen,\n    errorMessage,\n    state,\n    __INTERNAL__menuButtonSlot__,\n    ...ariaProps\n  }: Props,\n  forwardedRef,\n) {\n  const { mode, open, size, disabled } = useContext(SelectContext);\n\n  const ref = useForwardedRef(forwardedRef, null);\n\n  const colorSet = colorSets[mode];\n  const sizeSet = sizeSets[size];\n\n  const errorColor = mode === Mode.Light ? uiColors.red.base : '#F97216';\n\n  const onClick = useCallback(() => {\n    if (open) {\n      onClose();\n    } else {\n      onOpen();\n    }\n    ref.current!.focus();\n  }, [onClose, onOpen, open, ref]);\n\n  const Component = __INTERNAL__menuButtonSlot__\n    ? __INTERNAL__menuButtonSlot__\n    : Button;\n\n  return (\n    <Component\n      {...ariaProps}\n      ref={ref}\n      name={name}\n      value={value}\n      disabled={disabled}\n      onClick={onClick}\n      variant={Variant.Default}\n      darkMode={mode === Mode.Dark}\n      rightGlyph={<CaretDownIcon />}\n      data-testid=\"leafygreen-ui-select-menubutton\"\n      className={cx(\n        menuButtonStyle,\n        css`\n          height: ${sizeSet.height}px;\n          font-size: ${sizeSet.text}px;\n          width: 100%;\n          color: ${deselected ? colorSet.text.deselected : colorSet.text.base};\n          border-color: ${open && !disabled\n            ? colorSet.border.open\n            : colorSet.border.base};\n\n          @media only screen and (max-width: ${breakpoints.Desktop}px) {\n            height: ${mobileSizeSet.height}px;\n            font-size: ${mobileSizeSet.text}px;\n          }\n        `,\n        {\n          [css`\n            border-color: ${errorColor};\n            box-shadow: 0px 1px 2px rgba(87, 11, 8, 0.3);\n\n            &:hover,\n            &:active {\n              border-color: ${errorColor};\n              box-shadow: ${mode === Mode.Light\n                ? `0px 4px 4px rgba(87, 11, 8, 0.3),\n              0px 0px 0px 3px ${uiColors.red.light3}`\n                : `0px 4px 4px rgba(87, 11, 8, 0.3), 0px 0px 0px 3px ${uiColors.red.dark2}`};\n            }\n          `]: state === State.Error && !!errorMessage,\n        },\n      )}\n    >\n      <div\n        className={css`\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          flex-grow: 1;\n          width: 90%;\n        `}\n      >\n        <div className={menuButtonTextStyle}>{text}</div>\n        {state === State.Error && errorMessage && (\n          <WarningIcon\n            role=\"presentation\"\n            className={css`\n              color: ${errorColor};\n              margin-left: ${spacing[1]}px;\n            `}\n            size={sizeSet.warningIcon}\n          />\n        )}\n      </div>\n      {children}\n    </Component>\n  );\n});\n\nMenuButton.displayName = 'MenuButton';\n\nexport default MenuButton;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport {\n  useViewportSize,\n  useIdAllocator,\n  useEventListener,\n} from '@leafygreen-ui/hooks';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport { OneOf, keyMap } from '@leafygreen-ui/lib';\nimport { PopoverProps } from '@leafygreen-ui/popover';\nimport { fontFamilies, breakpoints, spacing } from '@leafygreen-ui/tokens';\nimport {\n  colorSets,\n  mobileSizeSet,\n  Mode,\n  Size,\n  sizeSets,\n  State,\n} from './styleSets';\nimport ListMenu from './ListMenu';\nimport MenuButton from './MenuButton';\nimport SelectContext from './SelectContext';\nimport { InternalOption, OptionElement } from './Option';\nimport {\n  convertToInternalElements,\n  getOptionValue,\n  isOptionDisabled,\n  isOptionSelectable,\n  reconcileOption,\n  traverseSelectChildren,\n  useStateRef,\n} from './utils';\n\nconst sharedTextStyles = css`\n  font-family: ${fontFamilies.default};\n  display: block;\n`;\n\nconst labelStyle = css`\n  margin-bottom: 2px;\n  font-weight: bold;\n`;\n\nexport type Props = {\n  children: React.ReactNode;\n  className?: string;\n  id?: string;\n  darkMode?: boolean;\n  size?: Size;\n  disabled?: boolean;\n  description?: string;\n  placeholder?: string;\n  name?: string;\n  allowDeselect?: boolean;\n  errorMessage?: string;\n  state?: State;\n  __INTERNAL__menuButtonSlot__?: React.ForwardRefExoticComponent<\n    React.RefAttributes<unknown>\n  >;\n} & Omit<PopoverProps, 'active' | 'spacing'> &\n  (\n    | // Uncontrolled\n    ({\n        defaultValue?: string;\n        value?: undefined;\n      } & {\n        onChange?: (\n          value: string,\n          event: React.MouseEvent | KeyboardEvent | React.KeyboardEvent,\n        ) => void;\n        readOnly?: false;\n      })\n    // Controlled\n    | ({ value: string; defaultValue?: undefined } & (\n        | {\n            onChange: (\n              value: string,\n              event: React.MouseEvent | KeyboardEvent | React.KeyboardEvent,\n            ) => void;\n            readOnly?: false;\n          }\n        | { readOnly: true; onChange?: undefined }\n      ))\n  ) &\n  OneOf<{ label: string }, { 'aria-labelledby': string }>;\n\nexport default function Select({\n  children,\n  darkMode = false,\n  size = Size.Default,\n  disabled = false,\n  allowDeselect = true,\n  placeholder = 'Select',\n  className,\n  id: idProp,\n  label,\n  'aria-labelledby': ariaLabelledby,\n  description,\n  name,\n  defaultValue,\n  value,\n  onChange,\n  readOnly,\n  usePortal = true,\n  portalContainer,\n  scrollContainer,\n  portalClassName,\n  popoverZIndex,\n  errorMessage = 'error message right here',\n  state = State.None,\n  __INTERNAL__menuButtonSlot__,\n}: Props) {\n  const id = useIdAllocator({ prefix: 'select', id: idProp });\n  const labelId = useMemo(() => ariaLabelledby ?? `${id}-label`, [\n    ariaLabelledby,\n    id,\n  ]);\n\n  if (!label && !ariaLabelledby) {\n    console.error(\n      'For screen-reader accessibility, label or aria-labelledby must be provided to Select.',\n    );\n  }\n\n  const descriptionId = `${id}-description`;\n  const menuId = `${id}-menu`;\n\n  const [open, setOpen] = useState(false);\n\n  const menuButtonRef = useStateRef<HTMLDivElement | null>(null);\n  const listMenuRef = useStateRef<HTMLUListElement | null>(null);\n\n  const mode = darkMode ? Mode.Dark : Mode.Light;\n  const colorSet = colorSets[mode];\n  const sizeSet = sizeSets[size];\n\n  const providerData = useMemo(() => {\n    return { mode, size, open, disabled };\n  }, [mode, size, open, disabled]);\n\n  useEffect(() => {\n    if (value !== undefined && onChange === undefined && readOnly !== true) {\n      console.warn(\n        'You provided a `value` prop to a form field without an `onChange` handler. ' +\n          'This will render a read-only field. ' +\n          'If the field should be mutable use `defaultValue`. ' +\n          'Otherwise, set either `onChange` or `readOnly`.',\n      );\n    }\n  }, [onChange, readOnly, value]);\n\n  /**\n   * Open / close state\n   */\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n    menuButtonRef.current!.focus();\n  }, [menuButtonRef]);\n\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    const onClickOutside = (event: MouseEvent) => {\n      const stillFocused =\n        menuButtonRef.current!.contains(event.target as Node) ||\n        listMenuRef.current!.contains(event.target as Node);\n      setOpen(stillFocused);\n    };\n\n    document.addEventListener('mousedown', onClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', onClickOutside);\n    };\n  }, [listMenuRef, menuButtonRef, open]);\n\n  const initialUncontrolledSelectedOption = useMemo(() => {\n    let initialUncontrolledSelectedOption: OptionElement | null = null;\n\n    if (value === undefined && defaultValue !== undefined) {\n      traverseSelectChildren(children, (option, group) => {\n        if (isOptionSelectable(option, group, defaultValue)) {\n          initialUncontrolledSelectedOption = option;\n        }\n      });\n    }\n\n    return initialUncontrolledSelectedOption;\n  }, [children, defaultValue, value]);\n\n  /**\n   * Selection\n   */\n\n  // We store the option element instance rather than just the value in order\n  // to differentiate between multiple options that have the same value.\n  const [\n    uncontrolledSelectedOption,\n    setUncontrolledSelectedOption,\n  ] = useState<OptionElement | null>(initialUncontrolledSelectedOption);\n\n  // If the option instances have changed we'll do our best to preserve\n  // the state by checking if any of the new option instances sufficiently\n  // match the current state and use it instead.\n  useEffect(() => {\n    if (uncontrolledSelectedOption !== null) {\n      setUncontrolledSelectedOption(\n        reconcileOption(children, uncontrolledSelectedOption) ??\n          initialUncontrolledSelectedOption,\n      );\n    }\n  }, [children, initialUncontrolledSelectedOption, uncontrolledSelectedOption]);\n\n  const selectedOption = useMemo(() => {\n    if (value !== undefined) {\n      let selectedOption: OptionElement | null = null;\n\n      traverseSelectChildren(children, (option, group) => {\n        if (isOptionSelectable(option, group, value)) {\n          selectedOption = option;\n        }\n      });\n      return selectedOption;\n    } else {\n      return uncontrolledSelectedOption;\n    }\n  }, [children, uncontrolledSelectedOption, value]);\n\n  const onSelect = useCallback(\n    (option: OptionElement | null, event: React.MouseEvent | KeyboardEvent) => {\n      if (value === undefined) {\n        setUncontrolledSelectedOption(option);\n      }\n      onChange?.(getOptionValue(option), event);\n      setFocusedOption(undefined);\n      onClose();\n    },\n    [onChange, onClose, value],\n  );\n\n  const getOptionClickHandler = useCallback(\n    (option: OptionElement | null, optionDisabled: boolean) => {\n      return (event: React.MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!disabled && !optionDisabled) {\n          onSelect(option, event);\n          onClose();\n        }\n      };\n    },\n    [disabled, onClose, onSelect],\n  );\n\n  /**\n   * Focus\n   */\n\n  const [focusedOption, setFocusedOption] = useState<\n    OptionElement | null | undefined\n  >();\n\n  const enabledOptions = useMemo(() => {\n    const enabledOptions: Array<OptionElement | null> = [];\n\n    if (allowDeselect) {\n      enabledOptions.push(null);\n    }\n\n    traverseSelectChildren(children, (option, group) => {\n      if (!isOptionDisabled(option, group)) {\n        enabledOptions.push(option);\n      }\n    });\n\n    return enabledOptions;\n  }, [children, allowDeselect]);\n\n  const onSelectFocusedOption = useCallback(\n    (event: KeyboardEvent) => {\n      if (focusedOption !== undefined) {\n        onSelect(focusedOption, event);\n      }\n    },\n    [focusedOption, onSelect],\n  );\n\n  const onFocusFirstOption = useCallback(() => {\n    setFocusedOption(enabledOptions[0]);\n  }, [enabledOptions]);\n\n  const onFocusLastOption = useCallback(() => {\n    setFocusedOption(enabledOptions[enabledOptions.length - 1]);\n  }, [enabledOptions]);\n\n  const onFocusPreviousOption = useCallback(() => {\n    if (\n      focusedOption === undefined ||\n      enabledOptions.indexOf(focusedOption) === 0\n    ) {\n      onFocusLastOption();\n    } else {\n      const index = enabledOptions.indexOf(focusedOption) - 1;\n      setFocusedOption(enabledOptions[index]);\n    }\n  }, [enabledOptions, focusedOption, onFocusLastOption]);\n\n  const onFocusNextOption = useCallback(() => {\n    if (\n      focusedOption === undefined ||\n      enabledOptions.indexOf(focusedOption) === enabledOptions.length - 1\n    ) {\n      onFocusFirstOption();\n    } else {\n      const index = enabledOptions.indexOf(focusedOption) + 1;\n\n      setFocusedOption(enabledOptions[index]);\n    }\n  }, [enabledOptions, focusedOption, onFocusFirstOption]);\n\n  const getOptionFocusHandler = useCallback(\n    (option: OptionElement | null, optionDisabled: boolean) => {\n      return (event: React.FocusEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!disabled && !optionDisabled) {\n          setFocusedOption(option);\n        }\n      };\n    },\n    [disabled],\n  );\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      // No support for modifiers yet\n      if (event.ctrlKey || event.shiftKey || event.altKey) {\n        return;\n      }\n\n      const isFocusInMenu = listMenuRef.current?.contains(\n        document.activeElement,\n      );\n      const isFocusOnButton = menuButtonRef.current?.contains(\n        document.activeElement,\n      );\n      const isFocusInComponent = isFocusOnButton || isFocusInMenu;\n\n      // We only respond to keypresses if the focus is in the component\n      if (isFocusInComponent) {\n        switch (event.keyCode) {\n          case keyMap.Tab:\n          case keyMap.Escape:\n            onClose();\n            setFocusedOption(undefined);\n            break;\n          case keyMap.Enter:\n          case keyMap.Space:\n            if (open && !isFocusOnButton) {\n              // Default behavior is to use these keys to open the dropdown but we handle that manually\n              event.preventDefault();\n            }\n\n            onSelectFocusedOption(event);\n            break;\n          case keyMap.ArrowUp:\n            if (!open && isFocusOnButton) {\n              onOpen();\n            }\n            event.preventDefault(); // Prevents page scrolling\n            onFocusPreviousOption();\n            break;\n          case keyMap.ArrowDown:\n            if (!open && isFocusOnButton) {\n              onOpen();\n            }\n            event.preventDefault(); // Prevents page scrolling\n            onFocusNextOption();\n            break;\n        }\n      }\n    },\n    [\n      listMenuRef,\n      menuButtonRef,\n      onClose,\n      open,\n      onSelectFocusedOption,\n      onFocusPreviousOption,\n      onFocusNextOption,\n      onOpen,\n    ],\n  );\n\n  useEventListener('keydown', onKeyDown);\n\n  /**\n   * Rendering\n   */\n\n  const viewportSize = useViewportSize();\n\n  const hasGlyphs = useMemo(() => {\n    let hasGlyphs = false;\n\n    traverseSelectChildren(children, option => {\n      hasGlyphs ||= option.props.glyph !== undefined;\n    });\n\n    return hasGlyphs;\n  }, [children]);\n\n  const canTriggerScrollIntoView = useMemo(\n    () =>\n      viewportSize !== null &&\n      listMenuRef.current !== null &&\n      focusedOption === undefined &&\n      open,\n    [focusedOption, listMenuRef, open, viewportSize],\n  );\n\n  const deselectionOption = useMemo(() => {\n    const selected = selectedOption === null;\n\n    return (\n      <InternalOption\n        className={undefined}\n        glyph={undefined}\n        selected={selected}\n        focused={focusedOption === null}\n        disabled={false}\n        onClick={getOptionClickHandler(null, false)}\n        onFocus={getOptionFocusHandler(null, false)}\n        isDeselection\n        hasGlyphs\n        triggerScrollIntoView={selected && canTriggerScrollIntoView}\n      >\n        {placeholder}\n      </InternalOption>\n    );\n  }, [\n    canTriggerScrollIntoView,\n    focusedOption,\n    getOptionClickHandler,\n    getOptionFocusHandler,\n    placeholder,\n    selectedOption,\n  ]);\n\n  const renderedChildren = useMemo(\n    () =>\n      convertToInternalElements(\n        children,\n        (option, group) => {\n          const selected = option === selectedOption;\n          const disabled = isOptionDisabled(option, group);\n\n          return {\n            className: option.props.className,\n            glyph: option.props.glyph,\n            selected,\n            focused: option === focusedOption,\n            disabled,\n            children: option.props.children,\n            isDeselection: false,\n            hasGlyphs,\n            onClick: getOptionClickHandler(option, disabled),\n            onFocus: getOptionFocusHandler(option, disabled),\n            triggerScrollIntoView: selected && canTriggerScrollIntoView,\n          };\n        },\n        () => {\n          console.error(\n            '`Select` instance received child that is not `Option` or `OptionGroup`.',\n          );\n        },\n      ),\n    [\n      canTriggerScrollIntoView,\n      children,\n      focusedOption,\n      getOptionClickHandler,\n      getOptionFocusHandler,\n      hasGlyphs,\n      selectedOption,\n    ],\n  );\n\n  const popoverProps = {\n    popoverZIndex,\n    ...(usePortal\n      ? {\n          usePortal,\n          portalClassName,\n          portalContainer,\n          scrollContainer,\n        }\n      : { usePortal }),\n  };\n\n  return (\n    <div\n      className={cx(\n        {\n          [css`\n            cursor: not-allowed;\n          `]: disabled,\n        },\n        className,\n      )}\n    >\n      {label && (\n        <label\n          id={labelId}\n          className={cx(\n            sharedTextStyles,\n            labelStyle,\n            css`\n              color: ${disabled\n                ? colorSet.label.disabled\n                : colorSet.label.base};\n              font-size: ${sizeSet.label.text}px;\n              line-height: ${sizeSet.label.lineHeight}px;\n\n              @media only screen and (max-width: ${breakpoints.Desktop}px) {\n                font-size: ${mobileSizeSet.label.text}px;\n                line-height: ${mobileSizeSet.label.lineHeight}px;\n              }\n            `,\n            {\n              [css`\n                cursor: not-allowed;\n              `]: disabled,\n            },\n          )}\n        >\n          {label}\n        </label>\n      )}\n\n      {description && (\n        <div\n          id={descriptionId}\n          className={cx(\n            sharedTextStyles,\n            css`\n              color: ${colorSet.description};\n              font-size: ${sizeSet.description.text}px;\n              line-height: ${sizeSet.description.lineHeight}px;\n\n              @media only screen and (max-width: ${breakpoints.Desktop}px) {\n                font-size: ${mobileSizeSet.description.text}px;\n                line-height: ${mobileSizeSet.description.lineHeight}px;\n              }\n            `,\n          )}\n        >\n          {description}\n        </div>\n      )}\n\n      <SelectContext.Provider value={providerData}>\n        <MenuButton\n          ref={menuButtonRef}\n          name={name}\n          readOnly={readOnly}\n          value={getOptionValue(selectedOption)}\n          text={\n            selectedOption !== null\n              ? selectedOption.props.children\n              : placeholder\n          }\n          deselected={selectedOption === null}\n          onOpen={onOpen}\n          onClose={onClose}\n          aria-labelledby={labelId}\n          aria-controls={menuId}\n          aria-expanded={open}\n          aria-describedby={descriptionId}\n          aria-invalid={state === State.Error}\n          errorMessage={errorMessage}\n          state={state}\n          __INTERNAL__menuButtonSlot__={__INTERNAL__menuButtonSlot__}\n        >\n          <ListMenu\n            labelId={labelId}\n            id={menuId}\n            referenceElement={menuButtonRef}\n            ref={listMenuRef}\n            className={css`\n              width: ${menuButtonRef.current?.clientWidth}px;\n            `}\n            {...popoverProps}\n          >\n            {allowDeselect && deselectionOption}\n            {renderedChildren}\n          </ListMenu>\n        </MenuButton>\n      </SelectContext.Provider>\n      {state === State.Error && errorMessage && (\n        <span\n          className={cx(\n            sharedTextStyles,\n            css`\n              color: ${darkMode ? '#F97216' : uiColors.red.base};\n              font-size: ${sizeSet.description.text}px;\n              line-height: ${sizeSet.description.lineHeight}px;\n              margin-top: ${spacing[1]}px;\n              padding-left: 2px;\n\n              @media only screen and (max-width: ${breakpoints.Desktop}px) {\n                font-size: ${mobileSizeSet.description.text}px;\n                line-height: ${mobileSizeSet.description.lineHeight}px;\n              }\n            `,\n          )}\n        >\n          {errorMessage}\n        </span>\n      )}\n    </div>\n  );\n}\n\nSelect.displayName = 'Select';\n\nSelect.propTypes = {\n  label: PropTypes.string,\n  'aria-labelledby': PropTypes.string,\n  description: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  darkMode: PropTypes.bool,\n  size: PropTypes.oneOf(Object.values(Size)),\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  onChange: PropTypes.func,\n  readOnly: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  state: PropTypes.oneOf(Object.values(State)),\n};\n"],"names":["_colorSets","_sizeSets","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","Mode","colorSets","_defineProperty","label","base","uiColors","gray","dark3","disabled","dark1","description","border","light1","open","text","deselected","menu","shadow","transparentize","black","option","group","light2","background","white","hovered","focused","blue","light3","selected","dark2","icon","indicator","Size","XSmall","Small","Default","Large","sizeSets","height","lineHeight","warningIcon","mobileSizeSet","State","None","Error","SelectContext","createContext","mode","size","createDataProp","optionStyle","css","_taggedTemplateLiteral","optionTextStyle","iconStyle","glyphFocusStyle","selector","InternalOption","_ref","_cx3","_cx4","children","className","glyph","onClick","onFocus","isDeselection","triggerScrollIntoView","hasGlyphs","useContext","showFocus","useUsingKeyboardContext","usingKeyboard","colorSet","ref","useRef","scrollIntoView","useCallback","current","element","parent","offsetParent","scrollTop","offsetTop","clientHeight","alreadyScrolledIntoView","usePrevious","shouldScrollIntoView","useEffect","wasFocused","shouldFocus","focus","_cx2","styledChildren","___EmotionJSX","cx","iconPlaceholder","styledGlyph","type","isGlyph","React","cloneElement","key","props","console","error","renderedChildren","checkmark","CheckmarkIcon","Fragment","_extends","prop","role","aria-selected","tabIndex","onKeyDown","undefined","Option","_","displayName","textPropType","PropTypes","oneOfType","string","number","propTypes","arrayOf","oneOf","isRequired","value","bool","optionGroupStyle","optionGroupLabelStyle","InternalOptionGroup","groupId","useIdAllocator","prefix","id","aria-labelledby","OptionGroup","_excluded","isReactEmpty","traverseSelectChildren","optionFn","Children","forEach","child","isComponentType","isFragment","convertToInternalElements","fallbackFn","map","_child$props","_options","rest","_objectWithoutProperties","getOptionValue","Array","isArray","filter","join","toString","isOptionDisabled","_option$props$disable","_group$props$disabled","_group$props","isOptionSelectable","useObservedRef","callback","_ref4","arguments","length","initialValue","_ref4$deps","deps","useMemo","nextValue","concat","_toConsumableArray","useForwardedRef","forwardedRefOrRefs","forwardValueToRefs","useStateRef","_useState2","_slicedToArray","useState","menuStyle","ListMenu","forwardRef","forwardedRef","referenceElement","labelId","_ref$usePortal","usePortal","portalContainer","scrollContainer","portalClassName","popoverZIndex","_useContext","sizeSet","viewportSize","useViewportSize","maxHeight","_referenceElement$cur","getBoundingClientRect","triggerTop","top","triggerBottom","bottom","safeSpace","Math","max","min","event","stopPropagation","popoverProps","_objectSpread","Popover","active","spacing","align","Align","Bottom","justify","Justify","Middle","adjustOnMutation","refEl","fontFamilies","default","breakpoints","Desktop","menuButtonStyle","menuButtonTextStyle","MenuButton","name","onClose","readOnly","onOpen","errorMessage","state","__INTERNAL__menuButtonSlot__","ariaProps","errorColor","red","Button","variant","Variant","darkMode","rightGlyph","CaretDownIcon","data-testid","WarningIcon","sharedTextStyles","labelStyle","Select","_menuButtonRef$curren2","_ref$darkMode","_ref$size","_ref$disabled","_ref$allowDeselect","allowDeselect","_ref$placeholder","placeholder","idProp","ariaLabelledby","defaultValue","onChange","_ref$errorMessage","_ref$state","descriptionId","menuId","setOpen","menuButtonRef","listMenuRef","providerData","warn","onClickOutside","stillFocused","contains","target","document","addEventListener","removeEventListener","initialUncontrolledSelectedOption","_useState4","uncontrolledSelectedOption","setUncontrolledSelectedOption","_reconcileOption","previousOption","_ref2","_ref3","_sameInstance","sameInstance","sameChildrenAndValue","sameExplicitValue","sameValue","_sameChildrenAndValue","_sameExplicitValue","_sameValue","reconcileOption","selectedOption","_selectedOption","onSelect","setFocusedOption","getOptionClickHandler","optionDisabled","preventDefault","_useState6","focusedOption","enabledOptions","push","onSelectFocusedOption","onFocusFirstOption","onFocusLastOption","onFocusPreviousOption","indexOf","index","onFocusNextOption","getOptionFocusHandler","_listMenuRef$current","_menuButtonRef$curren","ctrlKey","shiftKey","altKey","isFocusInMenu","activeElement","isFocusOnButton","keyCode","keyMap","Tab","Escape","Enter","Space","ArrowUp","ArrowDown","useEventListener","canTriggerScrollIntoView","deselectionOption","Provider","aria-controls","aria-expanded","aria-describedby","aria-invalid","clientWidth","Object","values","func"],"mappings":"goHAEA,IAAIA,EAAYC,ECEZC,EAAiBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,GAAkBC,GAAmBC,GAAmBC,GAAmBC,GAAmBC,GAAmBC,GAAmBC,GDE5QC,GACH,OADGA,GAEF,QAEEC,IAA8BC,EAAjBpB,EAAa,GAAgCkB,GAAY,CAC/EG,MAAO,CACLC,KAAMC,EAASC,KAAKC,MACpBC,SAAUH,EAASC,KAAKG,OAE1BC,YAAaL,EAASC,KAAKG,MAC3BE,OAAQ,CACNP,KAAMC,EAASC,KAAKM,OACpBC,KAAMR,EAASC,KAAKG,OAEtBK,KAAM,CACJV,KAAMC,EAASC,KAAKC,MACpBQ,WAAYV,EAASC,KAAKG,MAC1BD,SAAUH,EAASC,KAAKF,MAE1BY,KAAM,CACJC,OAAQC,EAAe,IAAMb,EAASc,QAExCC,OAAQ,CACNC,MAAO,CACLlB,MAAOE,EAASC,KAAKG,MACrBE,OAAQN,EAASC,KAAKgB,QAExBC,WAAY,CACVnB,KAAMC,EAASmB,MACfC,QAASpB,EAASC,KAAKgB,OACvBI,QAASrB,EAASsB,KAAKC,QAEzBd,KAAM,CACJV,KAAMC,EAASC,KAAKC,MACpBsB,SAAUxB,EAASsB,KAAKvB,KACxBI,SAAUH,EAASC,KAAKF,KACxBsB,QAASrB,EAASsB,KAAKG,OAEzBC,KAAM,CACJ3B,KAAMC,EAASC,KAAKG,MACpBoB,SAAUxB,EAASsB,KAAKvB,KACxBI,SAAUH,EAASC,KAAKF,MAE1B4B,UAAW,CACTN,QAASrB,EAASsB,KAAKvB,SAGzBF,EAAgBpB,EAAYkB,GAAW,CACzCG,MAAO,CACLC,KAAMC,EAASmB,MACfhB,SAAUH,EAASC,KAAKM,QAE1BF,YAAaL,EAASC,KAAKM,OAC3BD,OAAQ,CACNP,KAAMC,EAASC,KAAKwB,MACpBjB,KAAMR,EAASC,KAAKwB,OAEtBhB,KAAM,CACJV,KAAMC,EAASmB,MACfT,WAAYV,EAASC,KAAKM,OAC1BJ,SAAUH,EAASC,KAAKG,OAE1BO,KAAM,CACJC,OAAQC,EAAe,GAAKb,EAASc,QAEvCC,OAAQ,CACNC,MAAO,CACLlB,MAAOE,EAASC,KAAKM,OACrBD,OAAQN,EAASC,KAAKG,OAExBc,WAAY,CACVnB,KAAMC,EAASC,KAAKwB,MACpBL,QAASpB,EAASC,KAAKG,MACvBiB,QAASrB,EAASsB,KAAKvB,MAEzBU,KAAM,CACJV,KAAMC,EAASmB,MACfK,SAAU,UACVrB,SAAUH,EAASC,KAAKF,KACxBsB,QAASrB,EAASmB,OAEpBO,KAAM,CACJ3B,KAAMC,EAASC,KAAKM,OACpBiB,SAAU,UACVrB,SAAUH,EAASC,KAAKF,MAE1B4B,UAAW,CACTN,QAASrB,EAASmB,UAGpB1C,GACOmD,GAAO,CAChBC,OAAQ,SACRC,MAAO,QACPC,QAAS,UACTC,MAAO,SAEEC,IAA4BpC,EAAhBnB,EAAY,GAA+BkD,GAAKC,OAAQ,CAC7EK,OAAQ,GACRzB,KAAM,GACNX,MAAO,CACLW,KAAM,GACN0B,WAAY,IAEd9B,YAAa,CACXI,KAAM,GACN0B,WAAY,IAEdpB,OAAQ,CACNN,KAAM,IAER2B,YAAa,KACXvC,EAAgBnB,EAAWkD,GAAKE,MAAO,CACzCI,OAAQ,GACRzB,KAAM,GACNX,MAAO,CACLW,KAAM,GACN0B,WAAY,IAEd9B,YAAa,CACXI,KAAM,GACN0B,WAAY,IAEdpB,OAAQ,CACNN,KAAM,IAER2B,YAAa,KACXvC,EAAgBnB,EAAWkD,GAAKG,QAAS,CAC3CG,OAAQ,GACRzB,KAAM,GACNX,MAAO,CACLW,KAAM,GACN0B,WAAY,IAEd9B,YAAa,CACXI,KAAM,GACN0B,WAAY,IAEdpB,OAAQ,CACNN,KAAM,IAER2B,YAAa,KACXvC,EAAgBnB,EAAWkD,GAAKI,MAAO,CACzCE,OAAQ,GACRzB,KAAM,GACNX,MAAO,CACLW,KAAM,GACN0B,WAAY,IAEd9B,YAAa,CACXI,KAAM,GACN0B,WAAY,IAEdpB,OAAQ,CACNN,KAAM,IAER2B,YAAa,OACX1D,GACO2D,GACD,GADCA,GAEH,GAFGA,GAGF,CACL5B,KAAM,GACN0B,WAAY,IALLE,GAOI,CACX5B,KAAM,GACN0B,WAAY,IATLE,GAWD,CACN5B,KAAM,IAIC6B,GAAQ,CACjBC,KAAM,OACNC,MAAO,SEpLEC,GAA6BC,EAAc,CACpDC,KAAMhD,GACNiD,KAAMhB,GAAKG,QACXvB,MAAM,EACNL,UAAU,IDURY,GAAS8B,EAAe,UACxBC,GAAcC,EAAIpE,IAAoBA,EAAkBqE,EAAuB,CAAC,ocAChFC,GAAkBF,EAAInE,IAAqBA,EAAmBoE,EAAuB,CAAC,mDACtFE,GAAYH,EAAIlE,IAAqBA,EAAmBmE,EAAuB,CAAC,mDAChFG,GAAkBJ,EAAIjE,IAAqBA,EAAmBkE,EAAuB,CAAC,OAAQ,iDAAkDjC,GAAOqC,UACpJ,SAASC,GAAeC,GAC7B,IAAIC,EAAMC,EAENC,EAAWH,EAAKG,SAChBC,EAAYJ,EAAKI,UACjBC,EAAQL,EAAKK,MACbnC,EAAW8B,EAAK9B,SAChBH,EAAUiC,EAAKjC,QACflB,EAAWmD,EAAKnD,SAChByD,EAAUN,EAAKM,QACfC,EAAUP,EAAKO,QACfC,EAAgBR,EAAKQ,cACrBC,EAAwBT,EAAKS,sBAC7BC,EAAYV,EAAKU,UAGjBrB,EADcsB,EAAWxB,IACNE,KAGnBuB,EADwBC,IACUC,cAElCC,EAAWzE,GAAU+C,GAAM5B,OAC3BuD,EAAMC,EAAO,MACbC,EAAiBC,GAAY,WAC/B,GAAmB,MAAfH,EAAII,QACN,OAAO,KAGT,IAAIC,EAAUL,EAAII,QACdE,EAASD,MAAAA,OAAyC,EAASA,EAAQE,aAEvE,IAAKD,EACH,OAAO,KAKTA,EAAOE,UAAYH,EAAQI,WAAaJ,EAAQK,aAAeJ,EAAOI,cAAgB,IACrF,CAACV,IACAW,EAA0BC,EAAYnB,GACtCoB,EAAuBpB,IAA0BkB,EACrDG,GAAU,WACJD,GACFX,MAED,CAACA,EAAgBW,IACpB,IAAIE,EAAaH,EAAY7D,GACzBiE,EAAcjE,IAAYgE,EAC9BD,GAAU,WACJE,GACFhB,EAAII,QAAQa,UAEb,CAACD,IAEJ,IAcQE,EAdJC,EAAiBC,EAAc,OAAQ,CACzChC,UAAWiC,EAAG1C,GAAiBpD,EAAgB,GAAIkD,EAAIhE,IAAqBA,EAAmBiE,EAAuB,CAAC,+CAAgDxB,IAAasC,KACnLL,GAECmC,EAAkBF,EAAc,OAAQ,CAC1ChC,UAAWiC,EAAGzC,GAAWH,EAAI/D,IAAqBA,EAAmBgE,EAAuB,CAAC,6CAG3F6C,EAAcD,EAEdjC,IACGA,EAAMmC,KAAKC,QAKdF,EAA2BG,EAAMC,aAAatC,EAAO,CACnDuC,IAAK,QACLxC,UAAWiC,EAAGzC,GAAWH,EAAI9D,IAAqBA,EAAmB+D,EAAuB,CAAC,wBAAyB,mBAAoBqB,EAAS3C,KAAK3B,OAAQyF,EAAO,GAAI3F,EAAgB2F,EAAMrC,GAAiBe,GAAYrE,EAAgB2F,EAAMzC,EAAI7D,IAAqBA,EAAmB8D,EAAuB,CAAC,0BAA2B,qBAAsBqB,EAAS3C,KAAKvB,UAAWA,GAAWqF,GAAO7B,EAAMwC,MAAMzC,aANla0C,QAAQC,MAAM,mFAWlB,IAIIC,EAJAC,EAAY/E,IAAasC,EAAgB4B,EAAcc,EAAe,CACxEN,IAAK,YACLxC,UAAWiC,EAAGzC,GAAWH,EAAI5D,KAAqBA,GAAmB6D,EAAuB,CAAC,wBAAyB,mBAAoBqB,EAAS3C,KAAKF,WAAY+B,EAAO,GAAI1D,EAAgB0D,EAAMJ,GAAiBe,GAAYrE,EAAgB0D,EAAMR,EAAI3D,KAAsBA,GAAoB4D,EAAuB,CAAC,0BAA2B,qBAAsBqB,EAAS3C,KAAKvB,UAAWA,GAAWoD,MAChZqC,EAaL,OATEU,EADEtC,EACiB0B,EAAc,OAAQ,CACvChC,UAAWX,EAAI1D,KAAsBA,GAAoB2D,EAAuB,CAAC,+GAChF0C,EAAc,OAAQ,CACvBhC,UAAWX,EAAIzD,KAAsBA,GAAoB0D,EAAuB,CAAC,gDAChF6C,EAAaJ,GAAiBc,GAEdb,EAAcM,EAAMS,SAAU,KAAMF,EAAWd,GAG7DC,EAAc,KAAMgB,EAAS,GAAI3F,GAAO4F,KAAM,CACnDC,KAAM,SACNC,gBAAiBrF,EACjBsF,UAAW,EACXxC,IAAKA,EACLZ,UAAWiC,EAAG7C,GAAaC,EAAIxD,KAAsBA,GAAoByD,EAAuB,CAAC,kDAAmD,iBAAkBqB,EAAS5D,KAAKV,OAAQyD,EAAO,GAAI3D,EAAgB2D,EAAMT,EAAIvD,KAAsBA,GAAoBwD,EAAuB,CAAC,4DAA6D,kCAAmCqB,EAASnD,WAAWE,UAAWjB,GAAWN,EAAgB2D,EAAMT,EAAItD,KAAsBA,GAAoBuD,EAAuB,CAAC,iDAAkD,sCAAuC,wIAAyI,mDAAoDqB,EAAS5D,KAAKY,QAASgD,EAASnD,WAAWG,QAASgD,EAAS1C,UAAUN,SAAU6C,IAAc/D,GAAWN,EAAgB2D,EAAMT,EAAIrD,KAAsBA,GAAoBsD,EAAuB,CAAC,0DAA2D,mBAAoBqB,EAAS5D,KAAKN,UAAWA,GAAWqD,GAAOE,GAC/lCE,QAASA,EACTC,QAASA,EACTkD,eAAWC,IACTV,GAGS,SAASW,GAAOC,GAC7B,MAAM1E,MAAM,mDAFda,GAAe8D,YAAc,SAI7BF,GAAOE,YAAc,SACrB,IEhIIxI,GAAiBC,GAAkBC,GAAkBC,GFgIrDsI,GAAeC,EAAUC,UAAU,CAACD,EAAUE,OAAQF,EAAUG,SACpEP,GAAOQ,UAAY,CACjBhE,SAAU4D,EAAUC,UAAU,CAACF,GAAcC,EAAUK,QAAQL,EAAUC,UAAU,CAACF,GAAcC,EAAUM,MAAM,EAAC,EAAO,UAAMX,EAAW,UAAUY,WACrJlE,UAAW2D,EAAUE,OACrB5D,MAAO0D,EAAU1C,QACjBkD,MAAOR,EAAUE,OACjBpH,SAAUkH,EAAUS,ME7HtB,IAAIC,GAAmBhF,EAAIpE,KAAoBA,GAAkBqE,EAAuB,CAAC,8BACrFgF,GAAwBjF,EAAInE,KAAqBA,GAAmBoE,EAAuB,CAAC,2OACzF,SAASiF,GAAoB3E,GAClC,IAAII,EAAYJ,EAAKI,UACjB5D,EAAQwD,EAAKxD,MACb2D,EAAWH,EAAKG,SAGhBd,EADcsB,EAAWxB,IACNE,KAEnB0B,EAAWzE,GAAU+C,GAAM5B,OAC3BmH,EAAUC,EAAe,CAC3BC,OAAQ,wBAEV,OAAO1C,EAAc,MAAO,CAC1BhC,UAAWiC,EAAGoC,GAAkBhF,EAAIlE,KAAqBA,GAAmBmE,EAAuB,CAAC,wCAAyC,iBAAkBqB,EAASrD,MAAMV,QAASoD,IACtLgC,EAAc,MAAO,CACtB2C,GAAIH,EACJxE,UAAWiC,EAAGqC,GAAuBjF,EAAIjE,KAAqBA,GAAmBkE,EAAuB,CAAC,wBAAyB,mBAAoBqB,EAASrD,MAAMlB,SACpKA,GAAQ4F,EAAc,MAAO,CAC9BkB,KAAM,QACN0B,kBAAmBJ,GAClBzE,IAGU,SAAS8E,GAAYrB,GAClC,MAAM1E,MAAM,wDAFdyF,GAAoBd,YAAc,cAIlCoB,GAAYpB,YAAc,cAC1BoB,GAAYd,UAAY,CACtBhE,SAAU4D,EAAUC,UAAU,CAACD,EAAU1C,QAAS0C,EAAUK,QAAQL,EAAUC,UAAU,CAACD,EAAUM,MAAM,EAAC,EAAO,UAAMX,EAAW,KAAMK,EAAU1C,aAAaiD,WAC/JlE,UAAW2D,EAAUE,OACrBzH,MAAOuH,EAAUE,OAAOK,WACxBzH,SAAUkH,EAAUS,MCxCtB,IAAIU,GAAY,CAAC,YAQjB,SAASC,GAAaZ,GACpB,OAAOA,MAAAA,IAAmD,IAAVA,GAA6B,KAAVA,EAG9D,SAASa,GAAuBjF,EAAUkF,GAC/C3C,EAAM4C,SAASC,QAAQpF,GAAU,SAAUqF,GACrCC,EAAgBD,EAAO,UACzBH,EAASG,GACAC,EAAgBD,EAAO,eAChCJ,GAAuBI,EAAM3C,MAAM1C,UAAU,SAAU1C,GACrD,OAAO4H,EAAS5H,EAAQ+H,MAEjBE,EAAWF,IACpBJ,GAAuBI,EAAM3C,MAAM1C,SAAUkF,MAI5C,SAASM,GAA0BxF,EAAUkF,EAAUO,GAC5D,OAAOlD,EAAM4C,SAASO,IAAI1F,GAAU,SAAUqF,GAC5C,GAAIC,EAAgBD,EAAO,UACzB,OAAOpD,EAAcrC,GAAgBsF,EAASG,IACzC,GAAIC,EAAgBD,EAAO,eAAgB,CAChD,IAAIM,EAAeN,EAAM3C,MACrBkD,EAAWD,EAAa3F,SACxB6F,EAAOC,EAAyBH,EAAcZ,IAElD,OAAO9C,EAAcuC,GAAqBvB,EAAS,CACjDhD,eAAWsD,GACVsC,GAAOL,GAA0BI,GAAU,SAAUtI,GACtD,OAAO4H,EAAS5H,EAAQ+H,KACvBI,IACE,OAAIF,EAAWF,GACbG,GAA0BH,EAAM3C,MAAM1C,SAAUkF,EAAUO,IACvDT,GAAaK,IACvBI,MAAAA,GAAwDA,EAAWJ,GAG9D,SAGJ,SAASU,GAAezI,GAC7B,OAAe,OAAXA,EACK,QAGkBiG,IAAvBjG,EAAOoF,MAAM0B,MACR9G,EAAOoF,MAAM0B,MAGlB4B,MAAMC,QAAQ3I,EAAOoF,MAAM1C,UACtB1C,EAAOoF,MAAM1C,SAASkG,QAAO,SAAUb,GAC5C,OAAQL,GAAaK,MACpBc,KAAK,IAGH7I,EAAOoF,MAAM1C,SAASoG,WAExB,SAASC,GAAiB/I,EAAQC,GACvC,IAAI+I,EAAuBC,EAAuBC,EAElD,OAA4D,QAAnDF,EAAwBhJ,EAAOoF,MAAMhG,gBAAgD,IAA1B4J,GAAmCA,GAAiN,QAA7KC,EAAwBhJ,MAAAA,GAA+E,QAAhCiJ,EAAejJ,EAAMmF,aAAoC,IAAjB8D,OAAlD,EAAqFA,EAAa9J,gBAAgD,IAA1B6J,GAAmCA,EAE9V,SAASE,GAAmBnJ,EAAQC,EAAO6G,GAChD,OAAO2B,GAAezI,KAAY8G,IAAUiC,GAAiB/I,EAAQC,GAsChE,SAASmJ,GAAeC,GAC7B,IAAIC,EAAQC,UAAUC,OAAS,QAAsBvD,IAAjBsD,UAAU,GAAmBA,UAAU,GAAK,GAC5EE,EAAeH,EAAMG,aACrBC,EAAaJ,EAAMK,KACnBA,OAAsB,IAAfD,EAAwB,GAAKA,EAEpCnG,EAAMC,EAAOiG,GACjB,OAAOG,GAAQ,WACb,MAAO,CACLjG,cACE,OAAOJ,EAAII,SAGbA,YAAYkG,GACVtG,EAAII,QAAUkG,EACdR,EAASQ,OAIZ,CAACR,EAAU9F,GAAKuG,OAAOC,EAAmBJ,KAExC,SAASK,GAAgBC,EAAoBR,GAClD,IAAIS,EAAqBxG,GAAY,SAAUuG,EAAoBJ,GAC7DnB,MAAMC,QAAQsB,GAChBA,EAAmBnC,QAAQoC,GACY,mBAAvBD,EAChBA,EAAmBJ,GACVI,IAETA,EAAmBtG,QAAUkG,KAE9B,IACH,OAAOT,GAAe1F,GAAY,SAAUoD,GAC1C,OAAOoD,EAAmBD,EAAoBnD,KAC7C,CAACmD,EAAoBC,IAAsB,CAC5CT,aAAcA,IAOX,ICvJH7L,GAAiBC,GDuJVsM,GAAc,SAAqBV,GAC5C,IACIW,EAAaC,EADDC,EAASb,GACkB,GACvC3C,EAAQsD,EAAW,GAGvB,OAAOhB,GAFQgB,EAAW,GAEM,CAC9BX,aAAcA,EACdE,KAAM,CAAC7C,MCjJPyD,GAAYvI,EAAIpE,KAAoBA,GAAkBqE,EAAuB,CAAC,uLAC9EuI,GAAwBvF,EAAMwF,YAAW,SAAkBlI,EAAMmI,GACnE,IAAIhI,EAAWH,EAAKG,SAChB4E,EAAK/E,EAAK+E,GACVqD,EAAmBpI,EAAKoI,iBACxBhI,EAAYJ,EAAKI,UACjBiI,EAAUrI,EAAKqI,QACfC,EAAiBtI,EAAKuI,UACtBA,OAA+B,IAAnBD,GAAmCA,EAC/CE,EAAkBxI,EAAKwI,gBACvBC,EAAkBzI,EAAKyI,gBACvBC,EAAkB1I,EAAK0I,gBACvBC,EAAgB3I,EAAK2I,cAErBC,EAAcjI,EAAWxB,IACzBE,EAAOuJ,EAAYvJ,KACnBC,EAAOsJ,EAAYtJ,KACnBzC,EAAW+L,EAAY/L,SACvBK,EAAO0L,EAAY1L,KAEnB6D,EAAWzE,GAAU+C,GACrBwJ,EAAUlK,GAASW,GACnB0B,EAAMyG,GAAgBU,EAAc,MACpCW,EAAeC,IACfC,EAAY3B,GAAQ,WACtB,GAAIyB,GAAgB9H,EAAII,SAAWgH,EAAiBhH,QAAS,CAC3D,IAAI6H,EAAwBb,EAAiBhH,QAAQ8H,wBACjDC,EAAaF,EAAsBG,IACnCC,EAAgBJ,EAAsBK,OAGtCC,EAAYC,KAAKC,IAAIX,EAAalK,OAASyK,EAAeF,GAG9D,OAAOK,KAAKE,IApCE,IAoCiBH,EAnCpB,GAsCb,OAvCgB,MAwCf,CAACvI,EAAKoH,EAAkBU,IACvBxI,EAAUa,GAAY,SAAUwI,GAC9B3I,EAAII,SACNJ,EAAII,QAAQa,QAGd0H,EAAMC,oBACL,CAAC5I,IAEA6I,EAAeC,EAAc,CAC/BnB,cAAeA,GACdJ,EAAY,CACbA,UAAWA,EACXG,gBAAiBA,EACjBF,gBAAiBA,EACjBC,gBAAiBA,GACf,CACFF,UAAWA,IAGb,OAAOnG,EAAc2H,EAAS3G,EAAS,CACrC4G,OAAQ9M,IAASL,EACjBoN,QAAS,EACTC,MAAOC,EAAMC,OACbC,QAASC,EAAQC,OACjBC,kBAAkB,EAClBpK,UAAWA,EACXqK,MAAOrC,GACNyB,GAAezH,EAAc,KAAM,CACpC4C,kBAAmBqD,EACnB/E,KAAM,UACNtC,IAAKA,EACLwC,UAAW,EACXlD,QAASA,EACTF,UAAWiC,EAAG2F,GAAWvI,EAAInE,KAAqBA,GAAmBoE,EAAuB,CAAC,gCAAiC,+BAAgC,kCAAmC,kCAAmC,wCAAyC,4CAA6C,yDAA0D,qCAAsC,wCAAyCgL,EAAaC,QAAS9B,EAAQpL,OAAON,KAAM0L,EAAQjK,OAAQoK,EAAWjI,EAAStD,OAAOG,WAAWnB,KAAMsE,EAAS1D,KAAKC,OAAQsN,EAAYC,QAAS9L,GAAqB5B,OAC1mB4H,GAAIA,GACH5E,OAEL8H,GAASpE,YAAc,WC1FvB,IAEIxI,GAAiBC,GAAkBC,GAAkBC,GAAkBC,GAAkBC,GCAzFL,GAAiBC,GAAkBC,GAAkBC,GAAkBC,GAAkBC,GAAkBC,GAAkBC,GDF7HsJ,GAAY,CAAC,WAAY,QAAS,OAAQ,OAAQ,aAAc,WAAY,UAAW,SAAU,eAAgB,QAAS,gCAgB1H4F,GAAkBrL,EAAIpE,KAAoBA,GAAkBqE,EAAuB,CAAC,oGACpFqL,GAAsBtL,EAAInE,KAAqBA,GAAmBoE,EAAuB,CAAC,sGAC1FsL,GAA0BtI,EAAMwF,YAAW,SAAoBlI,EAAMmI,GACvE,IAAIhI,EAAWH,EAAKG,SAChBoE,EAAQvE,EAAKuE,MACbpH,EAAO6C,EAAK7C,KACZ8N,EAAOjL,EAAKiL,KACZ7N,EAAa4C,EAAK5C,WAElB8N,GADWlL,EAAKmL,SACNnL,EAAKkL,SACfE,EAASpL,EAAKoL,OACdC,EAAerL,EAAKqL,aACpBC,EAAQtL,EAAKsL,MACbC,EAA+BvL,EAAKuL,6BACpCC,EAAYvF,EAAyBjG,EAAMkF,IAE3C0D,EAAcjI,EAAWxB,IACzBE,EAAOuJ,EAAYvJ,KACnBnC,EAAO0L,EAAY1L,KACnBoC,EAAOsJ,EAAYtJ,KACnBzC,EAAW+L,EAAY/L,SAEvBmE,EAAMyG,GAAgBU,EAAc,MACpCpH,EAAWzE,GAAU+C,GACrBwJ,EAAUlK,GAASW,GACnBmM,EAAapM,IAAShD,GAAaK,EAASgP,IAAIjP,KAAO,UACvD6D,EAAUa,GAAY,WACpBjE,EACFgO,IAEAE,IAGFpK,EAAII,QAAQa,UACX,CAACiJ,EAASE,EAAQlO,EAAM8D,IAE3B,OAAOoB,EADSmJ,GAA8DI,EAC9CvI,EAAS,GAAIoI,EAAW,CACtDxK,IAAKA,EACLiK,KAAMA,EACN1G,MAAOA,EACP1H,SAAUA,EACVyD,QAASA,EACTsL,QAASC,EAAQpN,QACjBqN,SAAUzM,IAAShD,GACnB0P,WAAY3J,EAAc4J,EAAe,MACzCC,cAAe,kCACf7L,UAAWiC,EAAGyI,GAAiBrL,EAAIlE,KAAqBA,GAAmBmE,EAAuB,CAAC,uBAAwB,6BAA8B,iDAAkD,8BAA+B,qDAAsD,8BAA+B,+BAAgC,gCAAiCmJ,EAAQjK,OAAQiK,EAAQ1L,KAAMC,EAAa2D,EAAS5D,KAAKC,WAAa2D,EAAS5D,KAAKV,KAAMS,IAASL,EAAWkE,EAAS/D,OAAOE,KAAO6D,EAAS/D,OAAOP,KAAMmO,EAAYC,QAAS9L,GAAsBA,IAAqBxC,EAAgB,GAAIkD,EAAIjE,KAAqBA,GAAmBkE,EAAuB,CAAC,+BAAgC,6IAA8I,gCAAiC,kCAAmC+L,EAAYA,EAAYpM,IAAShD,GAAa,oEAAoEkL,OAAO7K,EAASgP,IAAIzN,QAAU,qDAAqDsJ,OAAO7K,EAASgP,IAAIvN,QAASmN,IAAUtM,GAAME,SAAWmM,MAChqCjJ,EAAc,MAAO,CACvBhC,UAAWX,EAAIhE,KAAqBA,GAAmBiE,EAAuB,CAAC,uKAC9E0C,EAAc,MAAO,CACtBhC,UAAW2K,IACV5N,GAAOmO,IAAUtM,GAAME,OAASmM,GAAgBjJ,EAAc8J,EAAa,CAC5E5I,KAAM,eACNlD,UAAWX,EAAI/D,KAAqBA,GAAmBgE,EAAuB,CAAC,0BAA2B,iCAAkC,uBAAwB+L,EAAYxB,EAAQ,IACxL3K,KAAMuJ,EAAQ/J,eACXqB,MAEP6K,GAAWnH,YAAc,aCvDzB,IAAIsI,GAAmB1M,EAAIpE,KAAoBA,GAAkBqE,EAAuB,CAAC,oBAAqB,4BAA6BgL,EAAaC,SACpJyB,GAAa3M,EAAInE,KAAqBA,GAAmBoE,EAAuB,CAAC,sDACtE,SAAS2M,GAAOrM,GAC7B,IAAIsM,EAEAnM,EAAWH,EAAKG,SAChBoM,EAAgBvM,EAAK8L,SACrBA,OAA6B,IAAlBS,GAAmCA,EAC9CC,EAAYxM,EAAKV,KACjBA,OAAqB,IAAdkN,EAAuBlO,GAAKG,QAAU+N,EAC7CC,EAAgBzM,EAAKnD,SACrBA,OAA6B,IAAlB4P,GAAmCA,EAC9CC,EAAqB1M,EAAK2M,cAC1BA,OAAuC,IAAvBD,GAAuCA,EACvDE,EAAmB5M,EAAK6M,YACxBA,OAAmC,IAArBD,EAA8B,SAAWA,EACvDxM,EAAYJ,EAAKI,UACjB0M,EAAS9M,EAAK+E,GACdvI,EAAQwD,EAAKxD,MACbuQ,EAAiB/M,EAAK,mBACtBjD,EAAciD,EAAKjD,YACnBkO,EAAOjL,EAAKiL,KACZ+B,EAAehN,EAAKgN,aACpBzI,EAAQvE,EAAKuE,MACb0I,EAAWjN,EAAKiN,SAChB9B,EAAWnL,EAAKmL,SAChB7C,EAAiBtI,EAAKuI,UACtBA,OAA+B,IAAnBD,GAAmCA,EAC/CE,EAAkBxI,EAAKwI,gBACvBC,EAAkBzI,EAAKyI,gBACvBC,EAAkB1I,EAAK0I,gBACvBC,EAAgB3I,EAAK2I,cACrBuE,EAAoBlN,EAAKqL,aACzBA,OAAqC,IAAtB6B,EAA+B,2BAA6BA,EAC3EC,EAAanN,EAAKsL,MAClBA,OAAuB,IAAf6B,EAAwBnO,GAAMC,KAAOkO,EAC7C5B,EAA+BvL,EAAKuL,6BACpCxG,EAAKF,EAAe,CACtBC,OAAQ,SACRC,GAAI+H,IAEFzE,GAAUhB,GAAQ,WACpB,OAAO0F,MAAAA,EAAuDA,EAAiB,GAAGxF,OAAOxC,EAAI,YAC5F,CAACgI,EAAgBhI,IAEfvI,GAAUuQ,GACbjK,QAAQC,MAAM,yFAGhB,IAAIqK,GAAgB,GAAG7F,OAAOxC,EAAI,gBAC9BsI,GAAS,GAAG9F,OAAOxC,EAAI,SAGvB8C,GAAaC,EADDC,GAAS,GACkB,GACvC7K,GAAO2K,GAAW,GAClByF,GAAUzF,GAAW,GAErB0F,GAAgB3F,GAAY,MAC5B4F,GAAc5F,GAAY,MAC1BvI,GAAOyM,EAAWzP,GAAYA,GAC9B0E,GAAWzE,GAAU+C,IACrBwJ,GAAUlK,GAASW,GACnBmO,GAAepG,GAAQ,WACzB,MAAO,CACLhI,KAAMA,GACNC,KAAMA,EACNpC,KAAMA,GACNL,SAAUA,KAEX,CAACwC,GAAMC,EAAMpC,GAAML,IACtBiF,GAAU,gBACM4B,IAAVa,QAAoCb,IAAbuJ,IAAuC,IAAb9B,GACnDrI,QAAQ4K,KAAK,uNAEd,CAACT,EAAU9B,EAAU5G,IAKxB,IAAI6G,GAASjK,GAAY,WACvBmM,IAAQ,KACP,IACCpC,GAAU/J,GAAY,WACxBmM,IAAQ,GACRC,GAAcnM,QAAQa,UACrB,CAACsL,KACJzL,GAAU,WACR,GAAK5E,GAAL,CAIA,IAAIyQ,EAAiB,SAAwBhE,GAC3C,IAAIiE,EAAeL,GAAcnM,QAAQyM,SAASlE,EAAMmE,SAAWN,GAAYpM,QAAQyM,SAASlE,EAAMmE,QACtGR,GAAQM,IAIV,OADAG,SAASC,iBAAiB,YAAaL,GAChC,WACLI,SAASE,oBAAoB,YAAaN,OAE3C,CAACH,GAAaD,GAAerQ,KAChC,IAAIgR,GAAoC7G,GAAQ,WAC9C,IAAI6G,EAAoC,KAUxC,YARcxK,IAAVa,QAAwCb,IAAjBsJ,GACzB5H,GAAuBjF,GAAU,SAAU1C,EAAQC,GAC7CkJ,GAAmBnJ,EAAQC,EAAOsP,KACpCkB,EAAoCzQ,MAKnCyQ,IACN,CAAC/N,EAAU6M,EAAczI,IAQxB4J,GAAarG,EADAC,EAASmG,IACkB,GACxCE,GAA6BD,GAAW,GACxCE,GAAgCF,GAAW,GAK/CrM,GAAU,WAEN,IAAIwM,EAD6B,OAA/BF,IAGFC,GAA6G,QAA9EC,EHvE9B,SAAyBnO,EAAUoO,GACxC,IAAIvO,EAAMwO,EAAOC,EAAOC,EAMpBC,EACAC,EACAC,EACAC,EAkBJ,OAjBA1J,GAAuBjF,GAAU,SAAU1C,GACzC,GAAIA,IAAW8Q,EACbI,EAAeJ,OACV,GAAI9Q,EAAOoF,MAAM1C,WAAaoO,EAAe1L,MAAM1C,UAAY1C,EAAOoF,MAAM0B,QAAUgK,EAAe1L,MAAM0B,MAAO,CACvH,IAAIwK,EAE+C,QAAlDA,EAAwBH,SAA4D,IAA1BG,IAA2DH,EAAuBnR,QACxI,QAA2BiG,IAAvBjG,EAAOoF,MAAM0B,OAAuB9G,EAAOoF,MAAM0B,QAAUgK,EAAe1L,MAAM0B,MAAO,CAChG,IAAIyK,EAEyC,QAA5CA,EAAqBH,SAAsD,IAAvBG,IAAqDH,EAAoBpR,QACzH,GAAIyI,GAAezI,KAAYyI,GAAeqI,GAAiB,CACpE,IAAIU,EAEyB,QAA5BA,EAAaH,SAAsC,IAAfG,IAAqCH,EAAYrR,OAGmK,QAArPuC,EAAmM,QAA3LwO,EAAiI,QAAxHC,EAA2C,QAAlCC,EAAgBC,SAA4C,IAAlBD,EAA2BA,EAAgBE,SAA4C,IAAVH,EAAmBA,EAAQI,SAAyC,IAAVL,EAAmBA,EAAQM,SAAgC,IAAT9O,EAAkBA,EAAO,KG2CxOkP,CAAgB/O,EAAUiO,WAA8D,IAArBE,EAA8BA,EAAmBJ,MAEvK,CAAC/N,EAAU+N,GAAmCE,KACjD,IAAIe,GAAiB9H,GAAQ,WAC3B,QAAc3D,IAAVa,EAAqB,CACvB,IAAI6K,EAAkB,KAMtB,OALAhK,GAAuBjF,GAAU,SAAU1C,EAAQC,GAC7CkJ,GAAmBnJ,EAAQC,EAAO6G,KACpC6K,EAAkB3R,MAGf2R,EAEP,OAAOhB,KAER,CAACjO,EAAUiO,GAA4B7J,IACtC8K,GAAWlO,GAAY,SAAU1D,EAAQkM,QAC7BjG,IAAVa,GACF8J,GAA8B5Q,GAGhCwP,MAAAA,GAAoDA,EAAS/G,GAAezI,GAASkM,GACrF2F,QAAiB5L,GACjBwH,OACC,CAAC+B,EAAU/B,GAAS3G,IACnBgL,GAAwBpO,GAAY,SAAU1D,EAAQ+R,GACxD,OAAO,SAAU7F,GACfA,EAAM8F,iBACN9F,EAAMC,kBAED/M,GAAa2S,IAChBH,GAAS5R,EAAQkM,GACjBuB,SAGH,CAACrO,EAAUqO,GAASmE,KAMnBK,GAAa5H,EADAC,IAC2B,GACxC4H,GAAgBD,GAAW,GAC3BJ,GAAmBI,GAAW,GAE9BE,GAAiBvI,GAAQ,WAC3B,IAAIuI,EAAiB,GAWrB,OATIjD,GACFiD,EAAeC,KAAK,MAGtBzK,GAAuBjF,GAAU,SAAU1C,EAAQC,GAC5C8I,GAAiB/I,EAAQC,IAC5BkS,EAAeC,KAAKpS,MAGjBmS,IACN,CAACzP,EAAUwM,IACVmD,GAAwB3O,GAAY,SAAUwI,QAC1BjG,IAAlBiM,IACFN,GAASM,GAAehG,KAEzB,CAACgG,GAAeN,KACfU,GAAqB5O,GAAY,WACnCmO,GAAiBM,GAAe,MAC/B,CAACA,KACAI,GAAoB7O,GAAY,WAClCmO,GAAiBM,GAAeA,GAAe3I,OAAS,MACvD,CAAC2I,KACAK,GAAwB9O,GAAY,WACtC,QAAsBuC,IAAlBiM,IAAyE,IAA1CC,GAAeM,QAAQP,IACxDK,SACK,CACL,IAAIG,EAAQP,GAAeM,QAAQP,IAAiB,EACpDL,GAAiBM,GAAeO,OAEjC,CAACP,GAAgBD,GAAeK,KAC/BI,GAAoBjP,GAAY,WAClC,QAAsBuC,IAAlBiM,IAA+BC,GAAeM,QAAQP,MAAmBC,GAAe3I,OAAS,EACnG8I,SACK,CACL,IAAII,EAAQP,GAAeM,QAAQP,IAAiB,EACpDL,GAAiBM,GAAeO,OAEjC,CAACP,GAAgBD,GAAeI,KAC/BM,GAAwBlP,GAAY,SAAU1D,EAAQ+R,GACxD,OAAO,SAAU7F,GACfA,EAAM8F,iBACN9F,EAAMC,kBAED/M,GAAa2S,GAChBF,GAAiB7R,MAGpB,CAACZ,IACA4G,GAAYtC,GAAY,SAAUwI,GACpC,IAAI2G,EAAsBC,EAG1B,KAAI5G,EAAM6G,SAAW7G,EAAM8G,UAAY9G,EAAM+G,QAA7C,CAIA,IAAIC,EAAiE,QAAhDL,EAAuB9C,GAAYpM,eAA8C,IAAzBkP,OAAkC,EAASA,EAAqBzC,SAASE,SAAS6C,eAC3JC,EAAsE,QAAnDN,EAAwBhD,GAAcnM,eAA+C,IAA1BmP,OAAmC,EAASA,EAAsB1C,SAASE,SAAS6C,eAGtK,GAFyBC,GAAmBF,EAG1C,OAAQhH,EAAMmH,SACZ,KAAKC,EAAOC,IACZ,KAAKD,EAAOE,OACV/F,KACAoE,QAAiB5L,GACjB,MAEF,KAAKqN,EAAOG,MACZ,KAAKH,EAAOI,MACNjU,KAAS2T,GAEXlH,EAAM8F,iBAGRK,GAAsBnG,GACtB,MAEF,KAAKoH,EAAOK,SACLlU,IAAQ2T,GACXzF,KAGFzB,EAAM8F,iBAENQ,KACA,MAEF,KAAKc,EAAOM,WACLnU,IAAQ2T,GACXzF,KAGFzB,EAAM8F,iBAENW,SAIL,CAAC5C,GAAaD,GAAerC,GAAShO,GAAM4S,GAAuBG,GAAuBG,GAAmBhF,KAChHkG,EAAiB,UAAW7N,IAK5B,IAAIqF,GAAeC,IACfrI,GAAY2G,GAAQ,WACtB,IAAI3G,GAAY,EAIhB,OAHA0E,GAAuBjF,GAAU,SAAU1C,GACzCiD,IAAcA,OAAmCgD,IAAvBjG,EAAOoF,MAAMxC,UAElCK,IACN,CAACP,IACAoR,GAA2BlK,GAAQ,WACrC,OAAwB,OAAjByB,IAAiD,OAAxB0E,GAAYpM,cAAsCsC,IAAlBiM,IAA+BzS,KAC9F,CAACyS,GAAenC,GAAatQ,GAAM4L,KAClC0I,GAAoBnK,GAAQ,WAC9B,IAAInJ,EAA8B,OAAnBiR,GACf,OAAO/M,EAAcrC,GAAgB,CACnCK,eAAWsD,EACXrD,WAAOqD,EACPxF,SAAUA,EACVH,QAA2B,OAAlB4R,GACT9S,UAAU,EACVyD,QAASiP,GAAsB,MAAM,GACrChP,QAAS8P,GAAsB,MAAM,GACrC7P,eAAe,EACfE,WAAW,EACXD,sBAAuBvC,GAAYqT,IAClC1E,KACF,CAAC0E,GAA0B5B,GAAeJ,GAAuBc,GAAuBxD,EAAasC,KACpGnM,GAAmBqE,GAAQ,WAC7B,OAAO1B,GAA0BxF,GAAU,SAAU1C,EAAQC,GAC3D,IAAIQ,EAAWT,IAAW0R,GACtBtS,EAAW2J,GAAiB/I,EAAQC,GACxC,MAAO,CACL0C,UAAW3C,EAAOoF,MAAMzC,UACxBC,MAAO5C,EAAOoF,MAAMxC,MACpBnC,SAAUA,EACVH,QAASN,IAAWkS,GACpB9S,SAAUA,EACVsD,SAAU1C,EAAOoF,MAAM1C,SACvBK,eAAe,EACfE,UAAWA,GACXJ,QAASiP,GAAsB9R,EAAQZ,GACvC0D,QAAS8P,GAAsB5S,EAAQZ,GACvC4D,sBAAuBvC,GAAYqT,OAEpC,WACDzO,QAAQC,MAAM,gFAEf,CAACwO,GAA0BpR,EAAUwP,GAAeJ,GAAuBc,GAAuB3P,GAAWyO,KAE5GtF,GAAeC,EAAc,CAC/BnB,cAAeA,GACdJ,EAAY,CACbA,UAAWA,EACXG,gBAAiBA,EACjBF,gBAAiBA,EACjBC,gBAAiBA,GACf,CACFF,UAAWA,IAGb,OAAOnG,EAAc,MAAO,CAC1BhC,UAAWiC,EAAG9F,EAAgB,GAAIkD,EAAIlE,KAAqBA,GAAmBmE,EAAuB,CAAC,qDAAsD7C,GAAWuD,IACtK5D,GAAS4F,EAAc,QAAS,CACjC2C,GAAIsD,GACJjI,UAAWiC,EAAG8J,GAAkBC,GAAY3M,EAAIjE,KAAqBA,GAAmBkE,EAAuB,CAAC,0BAA2B,+BAAgC,mCAAoC,2DAA4D,qCAAsC,qCAAsC,wCAAyC7C,EAAWkE,GAASvE,MAAMK,SAAWkE,GAASvE,MAAMC,KAAMoM,GAAQrM,MAAMW,KAAM0L,GAAQrM,MAAMqC,WAAY+L,EAAYC,QAAS9L,GAAoB5B,KAAM4B,GAAoBF,YAAatC,EAAgB,GAAIkD,EAAIhE,KAAqBA,GAAmBiE,EAAuB,CAAC,6DAA8D7C,KAC7sBL,GAAQO,GAAeqF,EAAc,MAAO,CAC7C2C,GAAIqI,GACJhN,UAAWiC,EAAG8J,GAAkB1M,EAAI/D,KAAqBA,GAAmBgE,EAAuB,CAAC,0BAA2B,+BAAgC,mCAAoC,2DAA4D,qCAAsC,qCAAsC,wCAAyCqB,GAAShE,YAAa8L,GAAQ9L,YAAYI,KAAM0L,GAAQ9L,YAAY8B,WAAY+L,EAAYC,QAAS9L,GAA0B5B,KAAM4B,GAA0BF,cAClhB9B,GAAcqF,EAAcjD,GAAcsS,SAAU,CACrDlN,MAAOkJ,IACNrL,EAAc4I,GAAY,CAC3BhK,IAAKuM,GACLtC,KAAMA,EACNE,SAAUA,EACV5G,MAAO2B,GAAeiJ,IACtBhS,KAAyB,OAAnBgS,GAA0BA,GAAetM,MAAM1C,SAAW0M,EAChEzP,WAA+B,OAAnB+R,GACZ/D,OAAQA,GACRF,QAASA,GACTlG,kBAAmBqD,GACnBqJ,gBAAiBrE,GACjBsE,gBAAiBzU,GACjB0U,mBAAoBxE,GACpByE,eAAgBvG,IAAUtM,GAAME,MAChCmM,aAAcA,EACdC,MAAOA,EACPC,6BAA8BA,GAC7BnJ,EAAc6F,GAAU7E,EAAS,CAClCiF,QAASA,GACTtD,GAAIsI,GACJjF,iBAAkBmF,GAClBvM,IAAKwM,GACLpN,UAAWX,EAAI9D,KAAqBA,GAAmB+D,EAAuB,CAAC,0BAA2B,uBAA6E,QAApD4M,EAAyBiB,GAAcnM,eAAgD,IAA3BkL,OAAoC,EAASA,EAAuBwF,cAClQjI,IAAe8C,GAAiB6E,GAAmBxO,MAAqBsI,IAAUtM,GAAME,OAASmM,GAAgBjJ,EAAc,OAAQ,CACxIhC,UAAWiC,EAAG8J,GAAkB1M,EAAI7D,KAAqBA,GAAmB8D,EAAuB,CAAC,0BAA2B,+BAAgC,mCAAoC,kCAAmC,6FAA8F,qCAAsC,qCAAsC,wCAAyCoM,EAAW,UAAYpP,EAASgP,IAAIjP,KAAMoM,GAAQ9L,YAAYI,KAAM0L,GAAQ9L,YAAY8B,WAAYoL,EAAQ,GAAIW,EAAYC,QAAS9L,GAA0B5B,KAAM4B,GAA0BF,cACvnBwM,IAELgB,GAAOxI,YAAc,SACrBwI,GAAOlI,UAAY,CACjB3H,MAAOuH,EAAUE,OACjBe,kBAAmBjB,EAAUE,OAC7BlH,YAAagH,EAAUE,OACvB4I,YAAa9I,EAAUE,OACvB7D,UAAW2D,EAAUE,OACrB6H,SAAU/H,EAAUS,KACpBlF,KAAMyE,EAAUM,MAAM0N,OAAOC,OAAO1T,KACpCzB,SAAUkH,EAAUS,KACpBO,GAAIhB,EAAUE,OACdM,MAAOR,EAAUE,OACjB+I,aAAcjJ,EAAUE,OACxBgJ,SAAUlJ,EAAUkO,KACpB9G,SAAUpH,EAAUS,KACpB6G,aAActH,EAAUE,OACxBqH,MAAOvH,EAAUM,MAAM0N,OAAOC,OAAOhT"}