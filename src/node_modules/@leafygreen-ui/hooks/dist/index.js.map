{"version":3,"file":"index.js","sources":["../src/useEventListener.ts","../src/useViewportSize.ts","../src/usePoller.ts","../src/useIsomorphicLayoutEffect.ts","../src/useIdAllocator.ts","../src/useDynamicRefs.tsx","../src/useForwardedRef.tsx","../src/useEscapeKey.ts","../src/useMutationObserver.ts","../src/useObjectDependency.ts","../src/usePrevious.ts","../src/useValidation.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport interface UseEventOptions {\n  options?: Omit<AddEventListenerOptions, 'once'>;\n  dependencies?: Array<any>;\n  enabled?: boolean | 'once';\n  element?: Document | HTMLElement;\n}\n\n/**\n * Hook to subscribe to an event listener.\n * @param type Represents the event type to listen for.\n * @param eventCallback Event listener callback function.\n * @param optional Optional third argument passed to function with implementation specifications\n * @param optional.options Parameter to specify options passed to the eventListener.\n * @param optional.enabled Determines whether or not the useEffect hook should run.\n * @param optional.dependencies Array to be passed to useEffect hook, such that the hook will only run if the array's values have changed.\n * @param optional.element Value to be passed as target of event handler, will default to document.\n */\nexport default function useEventListener<Type extends keyof DocumentEventMap>(\n  type: Type,\n  eventCallback: (e: DocumentEventMap[Type]) => void,\n  {\n    options,\n    enabled = true,\n    dependencies = [enabled, type],\n    element,\n  }: UseEventOptions = {},\n) {\n  const memoizedEventCallback: React.MutableRefObject<\n    (e: DocumentEventMap[Type]) => void\n  > = useRef(() => {});\n\n  useEffect(() => {\n    memoizedEventCallback.current = eventCallback;\n  }, [eventCallback]);\n\n  useEffect(() => {\n    if (enabled === false) {\n      return;\n    }\n\n    // Handle this in case non-TypeScript users pass in the wrong value\n    if (enabled !== 'once' && enabled !== true) {\n      console.error(\n        `Received value of type ${typeof enabled} for property \\`enabled\\`. Expected a boolean.`,\n      );\n      return;\n    }\n\n    const callback = (e: DocumentEventMap[Type]) =>\n      memoizedEventCallback.current(e);\n\n    const eventListenerOptions = {\n      ...options,\n      once: enabled === 'once',\n    };\n    // NOTE(JeT): I'm pretty sure there should be a way to avoid this type assertion, but I couldn't figure it out.\n    (element ?? document).addEventListener(\n      type,\n      callback as EventListener,\n      eventListenerOptions,\n    );\n\n    return () => {\n      (element ?? document).removeEventListener(\n        type,\n        callback as EventListener,\n        eventListenerOptions,\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\n\ninterface ViewportSize {\n  width: number;\n  height: number;\n}\n\nfunction getViewportSize(): ViewportSize {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  };\n}\n\nexport default function useViewportSize(): ViewportSize | null {\n  const [viewportSize, setViewportUpdateVal] = useState<ViewportSize | null>(\n    null,\n  );\n\n  useEffect(() => {\n    setViewportUpdateVal(getViewportSize());\n\n    const calcResize = debounce(\n      () => setViewportUpdateVal(getViewportSize()),\n      100,\n    );\n\n    window.addEventListener('resize', calcResize);\n\n    return () => window.removeEventListener('resize', calcResize);\n  }, []);\n\n  return viewportSize;\n}\n","import { useState, useRef, useEffect } from 'react';\nimport useEventListener from './useEventListener';\n\nfunction useVisibilityChange() {\n  const isVisibilityStateVisible = () => document.visibilityState === 'visible';\n\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    setIsVisible(isVisibilityStateVisible);\n  }, []);\n\n  useEventListener('visibilitychange', () => {\n    setIsVisible(isVisibilityStateVisible);\n  });\n\n  return isVisible;\n}\n\ntype OnPoll = () => void;\n\ninterface PollerOptions {\n  /**\n   * How frequently should we call the onPoll handler. Defaults to 30 seconds.\n   * @default 30000\n   */\n  interval?: number;\n\n  /**\n   * Should we immediately trigger the onPoll handler.\n   * @default true\n   */\n  immediate?: boolean;\n\n  /**\n   * Should we be polling.\n   * @default true\n   */\n  enabled?: boolean;\n}\n\nexport default function usePoller(\n  onPoll: OnPoll,\n  { interval = 30e3, immediate = true, enabled = true }: PollerOptions = {},\n) {\n  const savedCallback = useRef<OnPoll>();\n  const isVisible = useVisibilityChange();\n\n  const isPolling = isVisible && enabled;\n\n  useEffect(() => {\n    savedCallback.current = onPoll;\n  });\n\n  useEffect(() => {\n    if (!isPolling) {\n      return;\n    }\n\n    // Using this reflection to get return type of setTimeout so we don't have to\n    // use window.setTimeout, makes this more cross-environment compatible\n    // Sourced from: https://stackoverflow.com/a/51040768\n    let id: ReturnType<typeof setTimeout>;\n\n    function scheduleNextPoll() {\n      unscheduleNextPoll();\n      id = setTimeout(poll, interval);\n    }\n\n    function unscheduleNextPoll() {\n      clearTimeout(id);\n    }\n\n    function poll() {\n      Promise.resolve(savedCallback.current?.()).finally(scheduleNextPoll);\n    }\n\n    if (immediate) {\n      poll();\n    } else {\n      scheduleNextPoll();\n    }\n\n    return unscheduleNextPoll;\n  }, [interval, immediate, isPolling]);\n}\n","import { useEffect, useLayoutEffect } from 'react';\n\nconst useIsomorphicLayoutEffect: typeof useLayoutEffect = (...args) => {\n  const effectHook =\n    typeof window === 'undefined' ? useEffect : useLayoutEffect;\n  return effectHook(...args);\n};\n\nexport default useIsomorphicLayoutEffect;\n","import { useEffect, useState } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\n\nlet serverHandoffComplete = false;\nconst registry: Map<string, number> = new Map();\n\nconst genId = (prefix: string) => {\n  if (registry.has(prefix)) {\n    const val = registry.get(prefix);\n    const update = val ? val + 1 : 1;\n    registry.set(prefix, update);\n    return update;\n  } else {\n    registry.set(prefix, 1);\n    return 1;\n  }\n};\n\n/**\n * Generates an SSR-compatible unique id based on a prefix string and an optional idProp parameter.\n * @param options {prefix: string; id: string;}\n * @param options.prefix string that prefixes the generated id\n * @param options.id string that represents an already-created id\n */\nfunction useIdAllocator({\n  prefix,\n  id: idProp,\n}: {\n  prefix?: string;\n  id?: string;\n}) {\n  const initialId = prefix && (serverHandoffComplete ? genId(prefix) : null);\n\n  const [id, setId] = useState(initialId);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prefix && id === null) {\n      setId(genId(prefix));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (serverHandoffComplete === false) {\n      serverHandoffComplete = true;\n    }\n  }, []);\n\n  return idProp ? idProp : `${prefix}-${id}`;\n}\n\nexport default useIdAllocator;\n","/**\n * From https://github.com/fitzmode/use-dynamic-refs/blob/master/src/index.tsx\n *\n * There's a bug in the original package\n *\n * Consider moving this to `/hooks`\n */\n\nimport * as React from 'react';\n\nconst map = new Map<string, React.RefObject<unknown>>();\n\nfunction getGetRef<T>(prefix = '') {\n  function getRef(): undefined;\n  function getRef(key: string): React.RefObject<T>;\n  function getRef(key?: string): React.RefObject<T> | undefined {\n    if (!key) {\n      console.error(`useDynamicRefs: Cannot get ref without key`);\n      return;\n    }\n\n    const fullKey = prefix + '-' + key;\n\n    if (map.get(fullKey)) {\n      return map.get(fullKey) as React.RefObject<T>;\n    }\n\n    const ref = React.createRef<T>();\n    map.set(fullKey, ref);\n    return ref;\n  }\n\n  return getRef;\n}\n\nfunction useDynamicRefs<T>({\n  prefix,\n}: {\n  prefix: string;\n}): (key?: string) => undefined | React.RefObject<T> {\n  return getGetRef<T>(prefix);\n}\n\nexport default useDynamicRefs;\n","import { useCallback, useMemo, useRef } from 'react';\n\n// Ported from Select/utils\n// TODO: - remove duplicated code from Select/utils\nexport function useObservedRef<T>(\n  callback: (value: T) => void,\n  initialValue: T,\n  options: { initialValue: T; deps?: React.DependencyList },\n): React.MutableRefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T) => void,\n  options?: { initialValue: T | null; deps?: React.DependencyList },\n): React.RefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T | undefined) => void,\n  options?: { deps?: React.DependencyList },\n): React.MutableRefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T | null | undefined) => void,\n  {\n    initialValue,\n    deps = [],\n  }: { initialValue?: T | null; deps?: React.DependencyList } = {},\n) {\n  const ref = useRef(initialValue);\n\n  return useMemo(\n    () => ({\n      get current() {\n        return ref.current;\n      },\n      set current(nextValue) {\n        ref.current = nextValue;\n        callback(nextValue);\n      },\n    }),\n    [\n      callback,\n      ref,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...deps,\n    ],\n  );\n}\n\ntype SettableRef<T> = React.RefCallback<T> | React.MutableRefObject<T>;\n\ntype ValueOrArray<T> = T | ReadonlyArray<T>;\n\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T> | null>,\n  initialValue: T,\n): React.MutableRefObject<T>;\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T | null> | null>,\n  initialValue: T | null,\n): React.RefObject<T>;\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T | null | undefined> | null>,\n  initialValue?: T | null,\n): React.MutableRefObject<T | null | undefined> {\n  const forwardValueToRefs = useCallback(\n    <T,>(\n      forwardedRefOrRefs: ValueOrArray<SettableRef<T> | null>,\n      nextValue: T,\n    ) => {\n      if (Array.isArray(forwardedRefOrRefs)) {\n        forwardedRefOrRefs.forEach(forwardValueToRefs);\n      } else if (typeof forwardedRefOrRefs === 'function') {\n        forwardedRefOrRefs(nextValue);\n      } else if (forwardedRefOrRefs) {\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/40527\n        forwardedRefOrRefs.current = nextValue;\n      }\n    },\n    [],\n  );\n\n  return useObservedRef(\n    useCallback(value => forwardValueToRefs(forwardedRefOrRefs, value), [\n      forwardedRefOrRefs,\n      forwardValueToRefs,\n    ]),\n    { initialValue },\n  );\n}\n","import useEventListener, { UseEventOptions } from './useEventListener';\n\nconst escapeKeyCode = 27;\n\nconst handleEscape = (e: KeyboardEvent, callback: () => void) => {\n  if (e.keyCode === escapeKeyCode) {\n    e.stopImmediatePropagation();\n    callback();\n  }\n};\n\n/**\n * Hook to subscribe to an escape-key-press.\n * @param callback Callback function to be executed when Escape key is pressed.\n * @param options Object to refine when callback is invoked.\n * @param options.options Parameter to specify options passed to the eventListener.\n * @param options.enabled Determines whether or not the useEffect hook should run.\n * @param options.dependencies Array to be passed to useEffect hook, such that the hook will only run if the array's values have changed.\n * @param options.element Value to be passed as target of event handler, will default to document.\n */\nconst useEscapeKey = (callback: () => void, options?: UseEventOptions) => {\n  return useEventListener('keydown', e => handleEscape(e, callback), options);\n};\n\nexport default useEscapeKey;\n","import { useEffect, useState } from 'react';\n\ntype MutationHandler<Value> = (\n  mutations: Array<MutationRecord>,\n  observer: MutationObserver,\n) => Value;\n\n/**\n * Hook to subscribe to changes on the DOM.\n * @param target HTML element that is subscribed to DOM changes.\n * @param options Object with information about what DOM changes to subscribe to.\n * @param callback Callback function to execute inside of MutationObserver instance.\n * @param enabled Determines whether or not the hook should run, defaults to true.\n */\nexport default function useMutationObserver<Value>(\n  target: HTMLElement | null,\n  options: MutationObserverInit,\n  callback: MutationHandler<Value>,\n  enabled = true,\n): Value | undefined {\n  const [value, setValue] = useState<Value>();\n\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const observer = new MutationObserver((...args) => {\n      setValue(callback(...args));\n    });\n\n    if (target) {\n      observer.observe(target, options);\n    }\n\n    return () => observer.disconnect();\n  }, [target, options, callback, enabled]);\n\n  return value;\n}\n","import { useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nexport default function useObjectDependency<T>(object: T): T {\n  const ref = useRef<T>();\n\n  // we need isEqual for deep object comparison\n  if (ref.current === undefined || !isEqual(ref.current, object)) {\n    ref.current = object;\n  }\n\n  return ref.current;\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * Hook to store previous props\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nexport default function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n","import isUndefined from 'lodash/isUndefined';\nimport { useState } from 'react';\n\nexport default function useValidation<\n  T extends HTMLInputElement | HTMLTextAreaElement\n>(handleValidation?: (value: string) => void) {\n  const [isDirty, setIsDirty] = useState(false);\n\n  if (isUndefined(handleValidation) || typeof handleValidation !== 'function') {\n    return {\n      onBlur: () => {},\n      onChange: () => {},\n    };\n  }\n\n  const onBlur = (e: React.FocusEvent<T>) => {\n    setIsDirty(true);\n    handleValidation?.(e.target.value);\n  };\n\n  const onChange = (e: React.ChangeEvent<T>) => {\n    if (isDirty) {\n      handleValidation?.(e.target.value);\n    }\n  };\n\n  return {\n    onBlur,\n    onChange,\n  };\n}\n"],"names":["useEventListener","type","eventCallback","_ref","arguments","length","undefined","options","_ref$enabled","enabled","_ref$dependencies","dependencies","element","memoizedEventCallback","useRef","useEffect","current","callback","e","eventListenerOptions","_objectSpread","once","document","addEventListener","removeEventListener","console","error","concat","_typeof","getViewportSize","width","window","innerWidth","height","innerHeight","useVisibilityChange","isVisibilityStateVisible","visibilityState","_useState2","_slicedToArray","useState","isVisible","setIsVisible","useIsomorphicLayoutEffect","effectHook","useLayoutEffect","apply","serverHandoffComplete","registry","Map","genId","prefix","has","val","get","update","set","map","useObservedRef","initialValue","_ref$deps","deps","ref","useMemo","nextValue","_toConsumableArray","getRef","key","fullKey","React.createRef","getGetRef","keyCode","stopImmediatePropagation","handleEscape","forwardedRefOrRefs","forwardValueToRefs","useCallback","Array","isArray","forEach","value","idProp","id","initialId","setId","target","_useState","setValue","observer","MutationObserver","observe","disconnect","object","isEqual","onPoll","_ref$interval","interval","_ref$immediate","immediate","savedCallback","isPolling","poll","scheduleNextPoll","unscheduleNextPoll","setTimeout","clearTimeout","_savedCallback$curren","Promise","resolve","call","finally","handleValidation","isDirty","setIsDirty","isUndefined","onBlur","onChange","viewportSize","setViewportUpdateVal","calcResize","debounce"],"mappings":"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"}