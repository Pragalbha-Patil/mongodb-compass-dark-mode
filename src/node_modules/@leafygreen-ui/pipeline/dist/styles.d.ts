export declare const Size: {
    readonly XSmall: "xsmall";
    readonly Small: "small";
    readonly Normal: "normal";
    readonly Large: "large";
};
export declare type Size = typeof Size[keyof typeof Size];
interface Layout {
    borderRadius: number;
    chevron: {
        size: number;
    };
    fontSize: number;
    fontWeight: number;
    gutter: {
        vertical: number;
        horizontal: number;
    };
    height: number;
    lineHeight: number;
    minWidth: number;
}
export declare const layout: {
    readonly [K in Size]: Layout;
};
interface Color {
    color: string;
    primary: {
        backgroundColor: string;
    };
    secondary: {
        backgroundColor: string;
    };
}
export declare const colors: Color;
interface StateForStyles {
    size: Size;
}
export declare const getRootStyle: ({ size }: StateForStyles) => string;
export declare const getChildStyle: ({ size }: StateForStyles) => string;
export declare const getChevronStyle: ({ size }: StateForStyles) => string;
export declare const pipelineAttr: {
    prop: {
        [x: string]: string;
    };
    selector: string;
};
export declare const pipelineStages: {
    prop: {
        [x: string]: string;
    };
    selector: string;
};
export declare const stageAttr: {
    prop: {
        [x: string]: string;
    };
    selector: string;
};
export declare const stageChevronAttr: {
    prop: {
        [x: string]: string;
    };
    selector: string;
};
export declare const counterAttr: {
    prop: {
        [x: string]: string;
    };
    selector: string;
};
export declare const counterChevronAttr: {
    prop: {
        [x: string]: string;
    };
    selector: string;
};
export {};
//# sourceMappingURL=styles.d.ts.map