{"version":3,"file":"index.js","sources":["../../../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../../../node_modules/react-intersection-observer/react-intersection-observer.esm.js","../src/styles.ts","../src/Stage.tsx","../../../node_modules/react-merge-refs/dist/react-merge-refs.esm.js","../src/Counter.tsx","../../../node_modules/react-children-utilities/lib/hasChildren.js","../../../node_modules/react-children-utilities/lib/onlyText.js","../src/Pipeline.tsx","../src/utils/isElementOverflowed.ts","../src/utils/isStageElement.ts","../src/utils/getPipelineCounterTooltip.ts"],"sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","import { createElement, Component, useRef, useState, useCallback, useDebugValue } from 'react';\nimport invariant from 'tiny-invariant';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar INSTANCE_MAP = new Map();\nvar OBSERVER_MAP = new Map();\nvar ROOT_IDS = new Map();\nvar consecutiveRootId = 0;\n/**\n * Generate a unique ID for the root element\n * @param root\n */\n\nfunction getRootId(root) {\n  if (!root) return '';\n  if (ROOT_IDS.has(root)) return ROOT_IDS.get(root);\n  consecutiveRootId += 1;\n  ROOT_IDS.set(root, consecutiveRootId.toString());\n  return ROOT_IDS.get(root) + '_';\n}\n/**\n * Monitor element, and trigger callback when element becomes inView\n * @param element {HTMLElement}\n * @param callback {Function} Called with inView\n * @param options {Object} InterSection observer options\n * @param options.threshold {Number} Number between 0 and 1, indicating how much of the element should be inView before triggering\n * @param options.root {HTMLElement}\n * @param options.rootMargin {String} The CSS margin to apply to the root element.\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // IntersectionObserver needs a threshold to trigger, so set it to 0 if it's not defined.\n  // Modify the options object, since it's used in the onChange handler.\n  if (!options.threshold) options.threshold = 0;\n  var _options = options,\n      root = _options.root,\n      rootMargin = _options.rootMargin,\n      threshold = _options.threshold; // Validate that the element is not being used in another <Observer />\n\n  !!INSTANCE_MAP.has(element) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: Trying to observe %s, but it's already being observed by another instance.\\nMake sure the `ref` is only used by a single <Observer /> instance.\\n\\n%s\") : invariant(false) : void 0;\n  /* istanbul ignore if */\n\n  if (!element) return; // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  // An observer with the same options can be reused, so lets use this fact\n\n  var observerId = getRootId(root) + (rootMargin ? threshold.toString() + \"_\" + rootMargin : threshold.toString());\n  var observerInstance = OBSERVER_MAP.get(observerId);\n\n  if (!observerInstance) {\n    observerInstance = new IntersectionObserver(onChange, options);\n    /* istanbul ignore else  */\n\n    if (observerId) OBSERVER_MAP.set(observerId, observerInstance);\n  }\n\n  var instance = {\n    callback: callback,\n    element: element,\n    inView: false,\n    observerId: observerId,\n    observer: observerInstance,\n    // Make sure we have the thresholds value. It's undefined on a browser like Chrome 51.\n    thresholds: observerInstance.thresholds || (Array.isArray(threshold) ? threshold : [threshold])\n  };\n  INSTANCE_MAP.set(element, instance);\n  observerInstance.observe(element);\n  return instance;\n}\n/**\n * Stop observing an element. If an element is removed from the DOM or otherwise destroyed,\n * make sure to call this method.\n * @param element {Element}\n */\n\nfunction unobserve(element) {\n  if (!element) return;\n  var instance = INSTANCE_MAP.get(element);\n\n  if (instance) {\n    var observerId = instance.observerId,\n        observer = instance.observer;\n    var root = observer.root;\n    observer.unobserve(element); // Check if we are still observing any elements with the same threshold.\n\n    var itemsLeft = false; // Check if we still have observers configured with the same root.\n\n    var rootObserved = false;\n    /* istanbul ignore else  */\n\n    if (observerId) {\n      INSTANCE_MAP.forEach(function (item, key) {\n        if (key !== element) {\n          if (item.observerId === observerId) {\n            itemsLeft = true;\n            rootObserved = true;\n          }\n\n          if (item.observer.root === root) {\n            rootObserved = true;\n          }\n        }\n      });\n    }\n\n    if (!rootObserved && root) ROOT_IDS[\"delete\"](root);\n\n    if (observer && !itemsLeft) {\n      // No more elements to observe for threshold, disconnect observer\n      observer.disconnect();\n    } // Remove reference to element\n\n\n    INSTANCE_MAP[\"delete\"](element);\n  }\n}\n\nfunction onChange(changes) {\n  changes.forEach(function (intersection) {\n    var isIntersecting = intersection.isIntersecting,\n        intersectionRatio = intersection.intersectionRatio,\n        target = intersection.target;\n    var instance = INSTANCE_MAP.get(target); // Firefox can report a negative intersectionRatio when scrolling.\n\n    /* istanbul ignore else */\n\n    if (instance && intersectionRatio >= 0) {\n      // If threshold is an array, check if any of them intersects. This just triggers the onChange event multiple times.\n      var inView = instance.thresholds.some(function (threshold) {\n        return instance.inView ? intersectionRatio > threshold : intersectionRatio >= threshold;\n      });\n\n      if (isIntersecting !== undefined) {\n        // If isIntersecting is defined, ensure that the element is actually intersecting.\n        // Otherwise it reports a threshold of 0\n        inView = inView && isIntersecting;\n      }\n\n      instance.inView = inView;\n      instance.callback(inView, intersection);\n    }\n  });\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\n * Monitors scroll, and triggers the children function with updated props\n *\n <InView>\n {({inView, ref}) => (\n   <h1 ref={ref}>{`${inView}`}</h1>\n )}\n </InView>\n */\n\n\nvar InView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      inView: false,\n      entry: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"node\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNode\", function (node) {\n      if (_this.node) unobserve(_this.node);\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (inView, entry) {\n      // Only trigger a state update if inView has changed.\n      // This prevents an unnecessary extra state update during mount, when the element stats outside the viewport\n      if (inView !== _this.state.inView || inView) {\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !this.node ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: No DOM node found. Make sure you forward \\\"ref\\\" to the root DOM element you want to observe.\") : invariant(false) : void 0;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold) {\n      unobserve(this.node);\n      this.observeNode();\n    }\n\n    if (prevState.inView !== this.state.inView) {\n      if (this.state.inView && this.props.triggerOnce) {\n        unobserve(this.node);\n        this.node = null;\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.node) {\n      unobserve(this.node);\n      this.node = null;\n    }\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin;\n    observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$state = this.state,\n        inView = _this$state.inView,\n        entry = _this$state.entry;\n\n    if (!isPlainChildren(this.props)) {\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        triggerOnce = _this$props2.triggerOnce,\n        threshold = _this$props2.threshold,\n        root = _this$props2.root,\n        rootMargin = _this$props2.rootMargin,\n        onChange = _this$props2.onChange,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\"]);\n\n    return createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\n_defineProperty(InView, \"displayName\", 'InView');\n\n_defineProperty(InView, \"defaultProps\", {\n  threshold: 0,\n  triggerOnce: false\n});\n\n/* eslint-disable react-hooks/exhaustive-deps */\nfunction useInView(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ref = useRef();\n\n  var _React$useState = useState({\n    inView: false,\n    entry: undefined\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (ref.current) {\n      unobserve(ref.current);\n    }\n\n    if (node) {\n      observe(node, function (inView, intersection) {\n        setState({\n          inView: inView,\n          entry: intersection\n        });\n\n        if (inView && options.triggerOnce) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve(node);\n        }\n      }, options);\n    } // Store a reference to the node\n\n\n    ref.current = node;\n  }, [options.threshold, options.root, options.rootMargin, options.triggerOnce]);\n  useDebugValue(state.inView);\n  return [setRef, state.inView, state.entry];\n}\n\nexport default InView;\nexport { InView, useInView };\n","import { uiColors } from '@leafygreen-ui/palette';\nimport { css } from '@leafygreen-ui/emotion';\nimport { createDataProp } from '@leafygreen-ui/lib';\n\nexport const Size = {\n  XSmall: 'xsmall',\n  Small: 'small',\n  Normal: 'normal',\n  Large: 'large',\n} as const;\n\nexport type Size = typeof Size[keyof typeof Size];\n\ninterface Layout {\n  borderRadius: number;\n  chevron: {\n    size: number;\n  };\n  fontSize: number;\n  fontWeight: number;\n  gutter: {\n    vertical: number;\n    horizontal: number;\n  };\n  height: number;\n  lineHeight: number;\n  minWidth: number;\n}\n\nexport const layout: { readonly [K in Size]: Layout } = {\n  [Size.XSmall]: {\n    borderRadius: 4,\n    chevron: {\n      size: 2,\n    },\n    fontSize: 12,\n    fontWeight: 600,\n    gutter: {\n      vertical: 2,\n      horizontal: 4,\n    },\n    height: 22,\n    lineHeight: 1,\n    minWidth: 74,\n  },\n\n  [Size.Small]: {\n    borderRadius: 4,\n    chevron: {\n      size: 2,\n    },\n    fontSize: 14,\n    fontWeight: 600,\n    gutter: {\n      vertical: 2,\n      horizontal: 6,\n    },\n    height: 25,\n    lineHeight: 1,\n    minWidth: 74,\n  },\n\n  [Size.Normal]: {\n    borderRadius: 4,\n    chevron: {\n      size: 3,\n    },\n    fontSize: 14,\n    fontWeight: 600,\n    gutter: {\n      vertical: 2,\n      horizontal: 8,\n    },\n    height: 32,\n    lineHeight: 1,\n    minWidth: 74,\n  },\n\n  [Size.Large]: {\n    borderRadius: 4,\n    chevron: {\n      size: 4,\n    },\n    fontSize: 16,\n    fontWeight: 600,\n    gutter: {\n      vertical: 2,\n      horizontal: 10,\n    },\n    height: 45,\n    lineHeight: 1,\n    minWidth: 74,\n  },\n} as const;\n\ninterface Color {\n  color: string;\n  primary: {\n    backgroundColor: string;\n  };\n  secondary: {\n    backgroundColor: string;\n  };\n}\n\nexport const colors: Color = {\n  color: uiColors.blue.base,\n  primary: {\n    backgroundColor: uiColors.blue.light2,\n  },\n  secondary: {\n    backgroundColor: uiColors.blue.light3,\n  },\n};\n\ninterface StateForStyles {\n  size: Size;\n}\n\nexport const getRootStyle = ({ size }: StateForStyles): string => {\n  const { height, lineHeight } = layout[size];\n\n  return css`\n    display: flex;\n    height: ${height}px;\n    line-height: ${lineHeight};\n  `;\n};\n\nexport const getChildStyle = ({ size }: StateForStyles): string => {\n  const { lineHeight } = layout[size];\n\n  return css`\n    position: relative;\n    flex-direction: row;\n    line-height: ${lineHeight};\n    align-items: center;\n    justify-content: center;\n  `;\n};\n\nexport const getChevronStyle = ({ size }: StateForStyles): string => {\n  const { gutter, height, chevron } = layout[size];\n  const width = height / 2 + chevron.size * 2;\n  const offset = width;\n\n  return css`\n    margin-left: ${gutter.horizontal * 2}px;\n    width: ${width}px;\n    height: 100%;\n    position: absolute;\n    right: -${offset}px;\n    top: 0;\n    overflow: hidden;\n    align-self: center;\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      transform-origin: 0 0;\n      transform: rotate(45deg);\n    }\n  `;\n};\n\n/* LeafyGreen Data attributes */\n\n// Pipeline\nexport const pipelineAttr = createDataProp('pipeline');\nexport const pipelineStages = createDataProp('pipeline-stages');\n\n// Stage\nexport const stageAttr = createDataProp('pipeline-stage');\nexport const stageChevronAttr = createDataProp('pipeline-stage-chevron');\n\n// Counter\nexport const counterAttr = createDataProp('pipeline-counter');\nexport const counterChevronAttr = createDataProp('pipeline-counter-chevron');\n","import React, { forwardRef, ReactNode, Ref, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport mergeRefs from 'react-merge-refs';\nimport { useInView } from 'react-intersection-observer';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport {\n  getRootStyle,\n  getChildStyle,\n  getChevronStyle,\n  Size,\n  layout,\n  colors,\n  stageAttr,\n  stageChevronAttr,\n} from './styles';\n\ninterface StateForStyles {\n  size?: Size;\n}\n\nexport interface StageProps {\n  /**\n   * Content that will appear inside of the Stage component.\n   **/\n  children: ReactNode;\n\n  /**\n   * Classname applied to Stage content container.\n   **/\n  className?: string;\n\n  /**\n   * The DOM node to use as the root node for the intersectionObserver. Defaults to window when null or undefined.\n   **/\n  intersectionNode?: HTMLElement | null;\n\n  /**\n   * Alter the rendered size of the component. Inherited from the parent Pipeline component.\n   */\n  size?: Size;\n\n  /**\n   * Either a single number or an array of numbers which indicate at what percentage of the target's visibility\n   * the observer's callback should be executed.\n   */\n  threshold?: number | Array<number>;\n}\n\nconst getBaseStyle = ({ size = Size.XSmall }: StateForStyles): string => {\n  const {\n    borderRadius,\n    chevron,\n    fontSize,\n    fontWeight,\n    gutter,\n    height,\n    lineHeight,\n  } = layout[size];\n\n  const { color, primary } = colors;\n  const outerSize = height / 2;\n  const offset = outerSize + chevron.size * 2;\n\n  return cx(\n    getRootStyle({ size }),\n    getChildStyle({ size }),\n    css`\n      background-color: ${primary.backgroundColor};\n      color: ${color};\n      padding: ${gutter.vertical}px ${gutter.horizontal}px;\n      margin-right: ${offset}px;\n      font-size: ${fontSize}px;\n      font-weight: ${fontWeight};\n      line-height: ${lineHeight};\n      flex: 1 1 auto;\n      white-space: nowrap;\n      z-index: 1;\n\n      &:first-of-type {\n        border-top-left-radius: ${borderRadius}px;\n        border-bottom-left-radius: ${borderRadius}px;\n      }\n\n      &[data-stage-visible='false'] {\n        counter-increment: hiddenCount;\n      }\n    `,\n  );\n};\n\nconst getStageChevronStyle = ({\n  size = Size.XSmall,\n}: StateForStyles): string => {\n  const { chevron, height } = layout[size];\n  const { primary } = colors;\n  const outerSize = height / 2;\n\n  return cx(\n    getChevronStyle({ size }),\n    css`\n      &::before {\n        background-color: ${primary.backgroundColor};\n        box-shadow: 0 0 0 ${chevron.size}px ${uiColors.white},\n          0 0 0 ${outerSize}px ${primary.backgroundColor};\n      }\n    `,\n  );\n};\n\nconst getStatefulStyles = (state: StateForStyles) => ({\n  base: getBaseStyle(state),\n  chevron: getStageChevronStyle(state),\n});\n\n/**\n * # Stage\n *\n * React Component to render an individual MongoDB Aggregation stage.\n * To be used in conjunction with Pipeline component as a child.\n *\n * ```\n * <Pipeline>\n *   <Stage>$match</Stage>\n *   <Stage>$addFields</Stage>\n *   <Stage>$limit</Stage>\n * </Pipeline>\n * ```\n * @param props.children Content that will appear inside of the Stage component.\n * @param props.className Classname applied to Stage content container.\n * @param props.intersectionNode The DOM node to use as the root node for the intersectionObserver. Defaults to window when null or undefined.\n * @param props.size Alters the rendered size of the component.\n * @param props.threshold Either a single number or an array of numbers which indicate at what percentage of the target's visibility the observer's callback should be executed.\n * @param props.variant Alters the visual appearance of the component.\n */\nconst Stage = forwardRef(\n  (\n    {\n      children,\n      className = '',\n      intersectionNode,\n      size,\n      threshold = 0.8,\n      ...rest\n    }: StageProps,\n    ref: Ref<HTMLLIElement>,\n  ): ReactElement => {\n    // Effects\n    const [setRef, isVisible] = useInView({\n      threshold,\n      root: intersectionNode,\n    });\n\n    const { base: baseStyle, chevron: chevronStyle } = getStatefulStyles({\n      size,\n    });\n\n    return (\n      <li\n        {...rest}\n        {...stageAttr.prop}\n        ref={mergeRefs([setRef, ref])}\n        data-testid=\"pipeline-stage\"\n        data-stage-visible={isVisible}\n        className={cx(baseStyle, className)}\n      >\n        {children}\n\n        <div\n          data-testid=\"pipeline-stage-chevron\"\n          {...stageChevronAttr.prop}\n          className={chevronStyle}\n        />\n      </li>\n    );\n  },\n);\n\nStage.displayName = 'Stage';\n\nStage.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  intersectionNode: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  size: PropTypes.oneOf(Object.values(Size)),\n  threshold: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.number.isRequired),\n  ]),\n};\n\nexport default Stage;\n","function mergeRefs(refs) {\n  return function (value) {\n    refs.forEach(function (ref) {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport default mergeRefs;\n//# sourceMappingURL=react-merge-refs.esm.js.map\n","import React, { forwardRef, ReactElement, ReactNode, Ref } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\n\nimport {\n  getRootStyle,\n  getChildStyle,\n  getChevronStyle,\n  Size,\n  layout,\n  colors,\n  counterAttr,\n  counterChevronAttr,\n} from './styles';\n\ninterface StateForStyles {\n  size?: Size;\n}\n\ninterface CounterProps {\n  /**\n   * Content that will appear inside of the Counter component.\n   */\n  children?: ReactNode;\n\n  /**\n   * Classname applied to Counter content container.\n   **/\n  className?: string;\n\n  /**\n   * Alter the rendered size of the component. Inherited from the parent Pipeline component.\n   */\n  size: Size;\n}\n\nconst getBaseStyle = ({ size = Size.XSmall }: StateForStyles): string => {\n  const { chevron, fontSize, fontWeight, gutter, height, lineHeight } = layout[\n    size\n  ];\n\n  const { color, secondary } = colors;\n  const outerSize = height / 2;\n  const offset = outerSize + chevron.size * 2;\n\n  return cx(\n    getRootStyle({ size }),\n    getChildStyle({ size }),\n    css`\n      background-color: ${secondary.backgroundColor};\n      color: ${color};\n      padding: ${gutter.vertical}px ${gutter.horizontal}px;\n      margin-right: ${offset}px;\n      font-size: ${fontSize}px;\n      font-weight: ${fontWeight};\n      line-height: ${lineHeight};\n      flex: 1 1 auto;\n      white-space: nowrap;\n      z-index: 2;\n\n      &::before {\n        white-space: nowrap;\n        content: '+' counter(hiddenCount);\n      }\n    `,\n  );\n};\n\nconst getCounterChevronStyle = ({\n  size = Size.XSmall,\n}: StateForStyles): string => {\n  const { chevron, height } = layout[size];\n  const { secondary } = colors;\n  const outerSize = height / 2;\n\n  return cx(\n    getChevronStyle({ size }),\n    css`\n      &::before {\n        background-color: ${secondary.backgroundColor};\n        box-shadow: 0 0 0 ${chevron.size}px transparent,\n          0 0 0 ${outerSize}px transparent;\n      }\n    `,\n  );\n};\n\nconst getStatefulStyles = (state: StateForStyles) => ({\n  base: getBaseStyle(state),\n  chevron: getCounterChevronStyle(state),\n});\n\n/**\n * # Counter\n *\n * React Component to render the counter for the number of hidden stages in the Pipeline component.\n *\n * ```\n * <Counter />\n * ```\n * @param props.className Classname applied to Counter content container.\n */\nconst Counter = forwardRef(\n  (\n    { className = '', children, size, ...rest }: CounterProps,\n    ref: Ref<HTMLDivElement>,\n  ): ReactElement => {\n    const { base: baseStyle, chevron: chevronStyle } = getStatefulStyles({\n      size,\n    });\n\n    return (\n      <div\n        {...rest}\n        {...counterAttr.prop}\n        data-testid=\"pipeline-counter\"\n        className={cx(baseStyle, className)}\n        ref={ref}\n      >\n        {/* Children will be the tooltip provided by the Pipeline component */}\n        {children}\n\n        <div\n          {...counterChevronAttr.prop}\n          data-testid=\"pipeline-counter-chevron\"\n          className={chevronStyle}\n        />\n      </div>\n    );\n  },\n);\n\nCounter.displayName = 'Counter';\n\nCounter.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(Object.values(Size)).isRequired,\n};\n\nexport default Counter;\n","import { isValidElement } from 'react';\nconst hasChildren = (element) => isValidElement(element) && Boolean(element.props.children);\nexport default hasChildren;\n//# sourceMappingURL=hasChildren.js.map","import { Children, isValidElement } from 'react';\nimport hasChildren from './hasChildren';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const childToString = (child) => {\n    if (typeof child === 'undefined' || child === null || typeof child === 'boolean') {\n        return '';\n    }\n    if (JSON.stringify(child) === '{}') {\n        return '';\n    }\n    return child.toString();\n};\nconst onlyText = (children) => {\n    if (!(children instanceof Array) && !isValidElement(children)) {\n        return childToString(children);\n    }\n    return Children.toArray(children).reduce((text, child) => {\n        let newText = '';\n        if (isValidElement(child) && hasChildren(child)) {\n            newText = onlyText(child.props.children);\n        }\n        else if (isValidElement(child) && !hasChildren(child)) {\n            newText = '';\n        }\n        else {\n            newText = childToString(child);\n        }\n        return text.concat(newText);\n    }, '');\n};\nexport default onlyText;\n//# sourceMappingURL=onlyText.js.map","import React, {\n  forwardRef,\n  createRef,\n  useState,\n  Ref,\n  ReactElement,\n  ReactNode,\n} from 'react';\n\nimport PropTypes from 'prop-types';\nimport findLast from 'lodash/findLast';\n\nimport { uiColors } from '@leafygreen-ui/palette';\nimport Tooltip from '@leafygreen-ui/tooltip';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { useMutationObserver } from '@leafygreen-ui/hooks';\n\nimport Stage from './Stage';\nimport Counter from './Counter';\n\nimport {\n  getPipelineCounterTooltip,\n  isStageElement,\n  isElementOverflowed,\n} from './utils';\n\nimport {\n  getRootStyle,\n  Size,\n  layout,\n  colors,\n  pipelineAttr,\n  pipelineStages,\n  stageChevronAttr,\n} from './styles';\n\ninterface StateForStyles {\n  hasHiddenStages: boolean;\n  size: Size;\n}\n\ninterface PipelineProps {\n  /**\n   * Content that will appear inside of the Pipeline component.\n   */\n  children: ReactNode;\n\n  /**\n   * Optional className prop to apply to Pipeline content container.\n   */\n  className?: string;\n\n  /**\n   * Alter the rendered size of the component\n   */\n  size: Size;\n}\n\nconst getBaseStyle = ({ size }: StateForStyles): string =>\n  cx(\n    getRootStyle({ size }),\n    css`\n      counter-reset: hiddenCount;\n      flex-direction: row;\n    `,\n  );\n\nconst getPipelineStyle = ({ size }: StateForStyles): string => {\n  const { minWidth } = layout[size];\n\n  return cx(\n    getRootStyle({ size }),\n    css`\n      flex-grow: 1;\n      flex-shrink: 1;\n      flex-basis: 100%;\n      flex-wrap: wrap;\n      overflow: hidden;\n      list-style: none;\n      padding: 0;\n      margin: 0;\n      min-width: ${minWidth}px;\n    `,\n  );\n};\n\nexport const lastVisibleClassName =\n  'leafygreen-ui-pipeline-stage--last-visible';\n\nconst getLastVisibleStageChevronStyles = ({\n  hasHiddenStages,\n  size,\n}: StateForStyles): string => {\n  const { height, chevron } = layout[size];\n  const { primary, secondary } = colors;\n  const outerSize = height / 2;\n\n  const boxShadow = hasHiddenStages\n    ? // With counter\n      { innerColor: uiColors.white, outerColor: secondary.backgroundColor }\n    : // No counter\n      { innerColor: 'transparent', outerColor: 'transparent' };\n\n  return css`\n    .${lastVisibleClassName} > ${stageChevronAttr.selector}::before {\n      background-color: ${primary.backgroundColor};\n      box-shadow: 0 0 0 ${chevron.size}px ${boxShadow.innerColor},\n        0 0 0 ${outerSize}px ${boxShadow.outerColor};\n    }\n  `;\n};\n\nconst getStatefulStyles = (state: StateForStyles) => ({\n  base: getBaseStyle(state),\n  pipeline: getPipelineStyle(state),\n  lastVisibleStageChevron: getLastVisibleStageChevronStyles(state),\n});\n\n/**\n * # Pipeline\n *\n * React Component to render top-level MongoDB Aggregations in a visual format.\n * Handles overflowed content gracefully by indicating how many other stages are hidden.\n *\n * ```\n * <Pipeline>\n *   <Stage>$match</Stage>\n *   <Stage>$addFields</Stage>\n *   <Stage>$limit</Stage>\n * </Pipeline>\n * ```\n * @param props.children Content that will appear inside of the Pipeline component.\n * @param props.className Classname applied to Pipeline content container.\n * @param props.size Alters the rendered size of the component.\n * @param props.variant Alters the visual appearance of the component.\n */\nconst Pipeline = forwardRef(\n  (\n    { children, className = '', size = Size.XSmall, ...rest }: PipelineProps,\n    ref: Ref<HTMLDivElement>,\n  ): ReactElement => {\n    // State\n    const [pipelineNode, setPipelineNode] = useState<HTMLElement | null>(null);\n    const [hasHiddenStages, setHasHiddenStages] = useState(false);\n\n    // Handlers\n\n    /**\n     * Determines whether the Pipeline element is overflowed.\n     * If the Pipeline is overflowed, this means that we have stages which aren't visible and\n     * so we should display the counter.\n     */\n    const handleCounterDisplay = () => {\n      const result = isElementOverflowed(pipelineNode!);\n      setHasHiddenStages(result);\n    };\n\n    /**\n     * Decorates the last visible stage with a className necessary for applying\n     * the correct visual appearance. The mutation of the DOM is required otherwise the\n     * Stage components will re-render, triggering an infinite loop on the\n     * mutation observer.\n     */\n    const setLastVisibleStage = () => {\n      const allStages = Array.from(\n        pipelineNode!.children as HTMLCollectionOf<HTMLElement>,\n      );\n\n      // Remove previously added last visible stage classNames\n      allStages.forEach(element => {\n        element.classList.remove(lastVisibleClassName);\n      });\n\n      // Get the last visible stage\n      const lastVisibleStage = findLast(\n        allStages,\n        element => element.dataset.stageVisible !== 'false',\n      );\n\n      // Decorate the last visible stage so that we can appropriately style the chevron\n      if (lastVisibleStage) {\n        lastVisibleStage.classList.add(lastVisibleClassName);\n      }\n    };\n\n    /**\n     * Callback for the Mutation Observer.\n     * @param records The records for the observed mutation\n     */\n    const observeChanges = (records: Array<MutationRecord>) => {\n      const types = records.map(r => r.type);\n      const attrs = records.map(r => r.attributeName);\n\n      if (attrs.includes('data-stage-visible') || types.includes('childList')) {\n        handleCounterDisplay();\n        setLastVisibleStage();\n      }\n    };\n\n    // Effects\n    useMutationObserver(\n      pipelineNode,\n      {\n        childList: true,\n        subtree: true,\n        attributes: true,\n      },\n      observeChanges,\n    );\n\n    const childrenAsPipelineStages = React.Children.map(children, child => {\n      const props = {\n        size,\n        intersectionNode: pipelineNode,\n        ref: createRef<HTMLLIElement>(),\n      };\n\n      return isStageElement(child)\n        ? React.cloneElement(child, props)\n        : React.createElement(Stage, { ...props, children: child }); // eslint-disable-line react/no-children-prop\n    });\n\n    const tooltipText = getPipelineCounterTooltip(childrenAsPipelineStages);\n    const {\n      base: baseStyle,\n      pipeline: pipelineStyle,\n      lastVisibleStageChevron: lastVisibleStageChevronStyle,\n    } = getStatefulStyles({ hasHiddenStages, size });\n\n    return (\n      <div\n        {...rest}\n        {...pipelineAttr.prop}\n        data-testid=\"pipeline\"\n        ref={ref}\n        className={cx(baseStyle, className)}\n      >\n        <ol\n          {...pipelineStages.prop}\n          ref={setPipelineNode}\n          data-testid=\"pipeline-stages\"\n          className={cx(pipelineStyle, lastVisibleStageChevronStyle)}\n        >\n          {childrenAsPipelineStages}\n        </ol>\n\n        {hasHiddenStages && React.Children.count(childrenAsPipelineStages) > 0 && (\n          <Tooltip\n            align=\"top\"\n            justify=\"middle\"\n            trigger={<Counter size={size} />}\n            triggerEvent=\"hover\"\n            darkMode={true}\n          >\n            {tooltipText}\n          </Tooltip>\n        )}\n      </div>\n    );\n  },\n);\n\nPipeline.displayName = 'Pipeline';\n\nPipeline.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(Object.values(Size)).isRequired,\n};\n\nexport default Pipeline;\n","/**\n * Helper function to check whether a DOM element's content is clipped, ie:\n * The element's content is too big to fit in its block formatting context,\n * or the position of the content is positioned in such a way that it intersects\n * with the element's block formatting context, thus causing it to overflow.\n *\n * @param element the element to check\n * @returns boolean true if the element is overflowing, false if not.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\n */\nexport default function isElementOverflowed(element: HTMLElement): boolean {\n  return (\n    (element && element.scrollHeight > element.clientHeight) ||\n    (element && element.scrollWidth > element.clientWidth)\n  );\n}\n","import { ReactNode, ReactElement } from 'react';\nimport Stage, { StageProps } from '../Stage';\n\n/**\n * Helper function to check whether an element is a type of Stage element.\n * @param element the element to check\n * @returns boolean true if the element is a Stage element, false if not.\n */\nexport default function isStageElement(\n  element: ReactNode,\n): element is ReactElement<StageProps, typeof Stage> {\n  return (\n    element !== null &&\n    typeof element === 'object' &&\n    'type' in element &&\n    (element.type as any).displayName === 'Stage'\n  );\n}\n","import React, { ReactNode } from 'react';\nimport { onlyText } from 'react-children-utilities';\nimport flatMap from 'lodash/flatMap';\n\n/**\n * A utility function which takes the React.children rendered by the Pipeline component\n * and returns the string which represents the full pipeline, for usage with the tooltip.\n *\n * @param children - the children rendered by the pipeline component\n * @returns string - the tooltip text\n */\nexport default function getPipelineCounterTooltip(children: ReactNode): string {\n  const stages = (React.Children.map(children, onlyText) || []).filter(Boolean);\n\n  return flatMap(stages, (value, index, array) =>\n    array.length - 1 !== index ? [value, '>'] : value,\n  ).join(' ');\n}\n"],"names":["isProduction","process","env","NODE_ENV","prefix","invariant","condition","message","Error","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","INSTANCE_MAP","Map","OBSERVER_MAP","ROOT_IDS","consecutiveRootId","observe","element","callback","options","threshold","_options","root","rootMargin","has","observerId","get","set","toString","getRootId","observerInstance","IntersectionObserver","onChange","instance","inView","observer","thresholds","Array","isArray","unobserve","itemsLeft","rootObserved","forEach","item","disconnect","changes","intersection","isIntersecting","intersectionRatio","some","undefined","_layout","InView","_React$Component","subClass","superClass","_this","_len","args","_key","concat","entry","node","observeNode","state","setState","props","create","constructor","__proto__","_proto","componentDidMount","componentDidUpdate","prevProps","prevState","triggerOnce","componentWillUnmount","_this$props","handleChange","render","_this$state","children","isPlainChildren","ref","handleNode","_this$props2","as","tag","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","createElement","Component","_templateObject3","data","_taggedTemplateLiteral","_templateObject2","_templateObject","Size","XSmall","Small","Normal","Large","layout","borderRadius","chevron","size","fontSize","fontWeight","gutter","vertical","horizontal","height","lineHeight","minWidth","colors","color","uiColors","blue","base","primary","backgroundColor","light2","secondary","light3","getRootStyle","_ref","_layout$size","css","getChildStyle","_ref2","getChevronStyle","_ref3","_layout$size2","width","offset","pipelineAttr","createDataProp","pipelineStages","stageAttr","stageChevronAttr","counterAttr","counterChevronAttr","getStageChevronStyle","_ref2$size","outerSize","cx","white","Stage","forwardRef","refs","_ref3$className","className","intersectionNode","_ref3$threshold","rest","_objectWithoutProperties","_useInView2","_slicedToArray","useRef","_React$useState","useState","setRef","useCallback","current","useDebugValue","useInView","isVisible","_getStatefulStyles","_ref$size","getStatefulStyles","baseStyle","chevronStyle","___EmotionJSX","prop","data-testid","data-stage-visible","displayName","propTypes","PropTypes","isRequired","string","any","oneOf","values","oneOfType","number","arrayOf","getCounterChevronStyle","Counter","hasChildren","isValidElement","Boolean","childToString","child","JSON","stringify","onlyText","Children","toArray","reduce","text","newText","getPipelineStyle","lastVisibleClassName","getLastVisibleStageChevronStyles","hasHiddenStages","boxShadow","innerColor","outerColor","selector","Pipeline","_ref4","_ref4$className","_ref4$size","_useState2","pipelineNode","setPipelineNode","_useState4","setHasHiddenStages","useMutationObserver","childList","subtree","attributes","records","result","types","map","r","type","attributeName","includes","scrollHeight","clientHeight","scrollWidth","clientWidth","allStages","from","classList","remove","lastVisibleStage","findLast","dataset","stageVisible","add","setLastVisibleStage","childrenAsPipelineStages","React","createRef","_typeof","cloneElement","_objectSpread","tooltipText","stages","filter","flatMap","index","array","join","getPipelineCounterTooltip","pipeline","lastVisibleStageChevron","pipelineStyle","lastVisibleStageChevronStyle","count","Tooltip","align","justify","trigger","triggerEvent","darkMode"],"mappings":"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"}