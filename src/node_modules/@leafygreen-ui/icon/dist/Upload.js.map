{"version":3,"file":"Upload.js","sources":["../src/glyphCommon.ts","../src/generated/Upload.tsx"],"sourcesContent":["export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = typeof Size[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n","/**\n * This is a generated file. Do not modify it manually.\n *\n * @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts\n * @checksum 5c0f81911215a4ba265f009d2a05de05\n */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { generateAccessibleProps, sizeMap } from '../glyphCommon';\nimport { LGGlyph } from '../types';\nexport interface UploadProps extends LGGlyph.ComponentProps {}\n\nconst Upload = ({\n  className,\n  size = 16,\n  title,\n  ['aria-label']: ariaLabel,\n  ['aria-labelledby']: ariaLabelledby,\n  fill,\n  role = 'img',\n  ...props\n}: UploadProps) => {\n  const fillStyle = css`\n    color: ${fill};\n  `;\n  const noFlexShrink = css`\n    flex-shrink: 0;\n  `;\n  const accessibleProps = generateAccessibleProps(role, 'Upload', {\n    title,\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n  });\n  return (\n    <svg\n      className={cx(\n        {\n          [fillStyle]: fill != null,\n        },\n        noFlexShrink,\n        className,\n      )}\n      height={typeof size === 'number' ? size : sizeMap[size]}\n      width={typeof size === 'number' ? size : sizeMap[size]}\n      role={role}\n      {...accessibleProps}\n      {...props}\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.2967 11V11.9384C11.525 11.9789 11.7601 12 12 12C14.2091 12 16 10.2091 16 8C16 5.79086 14.2091 4 12 4C11.482 4 10.9869 4.09848 10.5326 4.27774C9.67881 2.34714 7.74673 1 5.5 1C2.46243 1 0 3.46243 0 6.5C0 9.53757 2.46243 12 5.5 12C5.59955 12 5.69847 11.9974 5.79672 11.9921V11H5.39404C3.99871 11 3.31387 9.30059 4.31931 8.33311L7.47199 5.29944C8.07212 4.72196 9.02132 4.72196 9.62145 5.29944L12.7741 8.33311C13.7796 9.30059 13.0947 11 11.6994 11H11.2967ZM8.33871 6.20016C8.45486 6.08839 8.63858 6.08839 8.75473 6.20016L11.9074 9.23383C12.102 9.42108 11.9695 9.75 11.6994 9.75H10.0467V13.5C10.0467 14.3284 9.37514 15 8.54672 15C7.71829 15 7.04672 14.3284 7.04672 13.5V9.75H5.39404C5.12398 9.75 4.99143 9.42108 5.18603 9.23383L8.33871 6.20016Z\"\n        fill={'currentColor'}\n      />\n    </svg>\n  );\n};\n\nUpload.displayName = 'Upload';\nUpload.isGlyph = true;\nUpload.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string,\n};\nexport default Upload;\n"],"names":["_templateObject","_templateObject2","sizeMap","small","default","large","xlarge","_excluded","Upload","_ref","_generateAccessiblePr","className","_ref$size","size","title","ariaLabel","ariaLabelledby","fill","_ref$role","role","props","_objectWithoutProperties","fillStyle","css","_taggedTemplateLiteral","noFlexShrink","accessibleProps","glyphName","_ref2","name","_defineProperty","aria-label","concat","replace","aria-hidden","alt","generateAccessibleProps","___EmotionJSX","_extends","cx","height","width","viewBox","fillRule","clipRule","d","displayName","isGlyph","propTypes","PropTypes","string","oneOfType","number"],"mappings":"m2CAOO,ICFHA,EAAiBC,EDEVC,EAAU,CACnBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,OAAQ,ICJV,IAAIC,EAAY,CAAC,YAAa,OAAQ,QAAS,aAAc,kBAAmB,OAAQ,QAcpFC,EAAS,SAAgBC,GAC3B,IAAIC,EAEAC,EAAYF,EAAKE,UACjBC,EAAYH,EAAKI,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAQL,EAAKK,MACbC,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBQ,EAAOR,EAAKQ,KACZC,EAAYT,EAAKU,KACjBA,OAAqB,IAAdD,EAAuB,MAAQA,EACtCE,EAAQC,EAAyBZ,EAAMF,GAEvCe,EAAYC,MAAIvB,IAAoBA,EAAkBwB,EAAuB,CAAC,gBAAiB,WAAYP,GAC3GQ,EAAeF,MAAItB,IAAqBA,EAAmBuB,EAAuB,CAAC,gCACnFE,EDxBC,SAAiCP,EAAMQ,EAAWlB,GACvD,IAAImB,EAuBwBC,EArBxBd,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBK,EAAQL,EAAKK,MAEjB,OAAQK,GACN,IAAK,MACH,OAAKJ,GAAcC,GAAmBF,GAMnBgB,EAAZF,EAAQ,GAA2B,kBAAmBZ,GAAiBc,EAAgBF,EAAO,aAAcb,GAAYe,EAAgBF,EAAO,QAASd,GAAQc,GAL9J,CACLG,cAaoBF,EAbQF,EAc7B,GAAGK,OAAOH,EAAKI,QAAQ,kBAAmB,SAAU,WARzD,IAAK,eACH,MAAO,CACLC,eAAe,EACfC,IAAK,KCIWC,CAAwBjB,EAAM,UAEjDW,EAF4DpB,EAAwB,CACrFI,MAAOA,GACiC,aAAcC,GAAYe,EAAgBpB,EAAuB,kBAAmBM,GAAiBN,IAC/I,OAAO2B,MAAc,MAAOC,EAAS,CACnC3B,UAAW4B,KAAGT,EAAgB,GAAIR,EAAmB,MAARL,GAAeQ,EAAcd,GAC1E6B,OAAwB,iBAAT3B,EAAoBA,EAAOX,EAAQW,GAClD4B,MAAuB,iBAAT5B,EAAoBA,EAAOX,EAAQW,GACjDM,KAAMA,GACLO,EAAiBN,EAAO,CACzBsB,QAAS,cACPL,MAAc,OAAQ,CACxBM,SAAU,UACVC,SAAU,UACVC,EAAG,yuBACH5B,KAAM,0BAIVT,EAAOsC,YAAc,SACrBtC,EAAOuC,SAAU,EACjBvC,EAAOwC,UAAY,CACjB/B,KAAMgC,UAAUC,OAChBrC,KAAMoC,UAAUE,UAAU,CAACF,UAAUG,OAAQH,UAAUC,SACvDvC,UAAWsC,UAAUC"}