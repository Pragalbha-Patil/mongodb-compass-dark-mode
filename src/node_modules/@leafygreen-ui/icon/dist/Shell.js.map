{"version":3,"file":"Shell.js","sources":["../src/glyphCommon.ts","../src/generated/Shell.tsx"],"sourcesContent":["export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = typeof Size[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n","/**\n * This is a generated file. Do not modify it manually.\n *\n * @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts\n * @checksum dcd77f71e4a19f26a4d2ba6d594cb516\n */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { generateAccessibleProps, sizeMap } from '../glyphCommon';\nimport { LGGlyph } from '../types';\nexport interface ShellProps extends LGGlyph.ComponentProps {}\n\nconst Shell = ({\n  className,\n  size = 16,\n  title,\n  ['aria-label']: ariaLabel,\n  ['aria-labelledby']: ariaLabelledby,\n  fill,\n  role = 'img',\n  ...props\n}: ShellProps) => {\n  const fillStyle = css`\n    color: ${fill};\n  `;\n  const noFlexShrink = css`\n    flex-shrink: 0;\n  `;\n  const accessibleProps = generateAccessibleProps(role, 'Shell', {\n    title,\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n  });\n  return (\n    <svg\n      className={cx(\n        {\n          [fillStyle]: fill != null,\n        },\n        noFlexShrink,\n        className,\n      )}\n      height={typeof size === 'number' ? size : sizeMap[size]}\n      width={typeof size === 'number' ? size : sizeMap[size]}\n      role={role}\n      {...accessibleProps}\n      {...props}\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        d=\"M1.8 5.2L5.2 7.4L1.41036 9.92642C1.18282 10.0781 1.11937 10.3845 1.26793 10.6141L1.82463 11.4744C1.9761 11.7085 2.28977 11.7735 2.52176 11.6188L7.5 8.3C7.8 8.1 8 7.8 8 7.5C8 7.2 7.8 6.9 7.6 6.7L2.52235 3.28412C2.29032 3.12804 1.97539 3.19258 1.82347 3.42736L1.27593 4.27357C1.12424 4.50799 1.19394 4.82121 1.43071 4.96919L1.8 5.2ZM6.7 13C6.7 13.2761 6.92386 13.5 7.2 13.5H14.9C15.1761 13.5 15.4 13.2761 15.4 13V12C15.4 11.7239 15.1761 11.5 14.9 11.5H7.2C6.92386 11.5 6.7 11.7239 6.7 12V13Z\"\n        fill={'currentColor'}\n      />\n    </svg>\n  );\n};\n\nShell.displayName = 'Shell';\nShell.isGlyph = true;\nShell.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string,\n};\nexport default Shell;\n"],"names":["_templateObject","_templateObject2","sizeMap","small","default","large","xlarge","_excluded","Shell","_ref","_generateAccessiblePr","className","_ref$size","size","title","ariaLabel","ariaLabelledby","fill","_ref$role","role","props","_objectWithoutProperties","fillStyle","css","_taggedTemplateLiteral","noFlexShrink","accessibleProps","glyphName","_ref2","name","_defineProperty","aria-label","concat","replace","aria-hidden","alt","generateAccessibleProps","___EmotionJSX","_extends","cx","height","width","viewBox","d","displayName","isGlyph","propTypes","PropTypes","string","oneOfType","number"],"mappings":"g2CAOO,ICFHA,EAAiBC,EDEVC,EAAU,CACnBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,OAAQ,ICJV,IAAIC,EAAY,CAAC,YAAa,OAAQ,QAAS,aAAc,kBAAmB,OAAQ,QAcpFC,EAAQ,SAAeC,GACzB,IAAIC,EAEAC,EAAYF,EAAKE,UACjBC,EAAYH,EAAKI,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAQL,EAAKK,MACbC,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBQ,EAAOR,EAAKQ,KACZC,EAAYT,EAAKU,KACjBA,OAAqB,IAAdD,EAAuB,MAAQA,EACtCE,EAAQC,EAAyBZ,EAAMF,GAEvCe,EAAYC,MAAIvB,IAAoBA,EAAkBwB,EAAuB,CAAC,gBAAiB,WAAYP,GAC3GQ,EAAeF,MAAItB,IAAqBA,EAAmBuB,EAAuB,CAAC,gCACnFE,EDxBC,SAAiCP,EAAMQ,EAAWlB,GACvD,IAAImB,EAuBwBC,EArBxBd,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBK,EAAQL,EAAKK,MAEjB,OAAQK,GACN,IAAK,MACH,OAAKJ,GAAcC,GAAmBF,GAMnBgB,EAAZF,EAAQ,GAA2B,kBAAmBZ,GAAiBc,EAAgBF,EAAO,aAAcb,GAAYe,EAAgBF,EAAO,QAASd,GAAQc,GAL9J,CACLG,cAaoBF,EAbQF,EAc7B,GAAGK,OAAOH,EAAKI,QAAQ,kBAAmB,SAAU,WARzD,IAAK,eACH,MAAO,CACLC,eAAe,EACfC,IAAK,KCIWC,CAAwBjB,EAAM,SAEjDW,EAF2DpB,EAAwB,CACpFI,MAAOA,GACiC,aAAcC,GAAYe,EAAgBpB,EAAuB,kBAAmBM,GAAiBN,IAC/I,OAAO2B,MAAc,MAAOC,EAAS,CACnC3B,UAAW4B,KAAGT,EAAgB,GAAIR,EAAmB,MAARL,GAAeQ,EAAcd,GAC1E6B,OAAwB,iBAAT3B,EAAoBA,EAAOX,EAAQW,GAClD4B,MAAuB,iBAAT5B,EAAoBA,EAAOX,EAAQW,GACjDM,KAAMA,GACLO,EAAiBN,EAAO,CACzBsB,QAAS,cACPL,MAAc,OAAQ,CACxBM,EAAG,4eACH1B,KAAM,0BAIVT,EAAMoC,YAAc,QACpBpC,EAAMqC,SAAU,EAChBrC,EAAMsC,UAAY,CAChB7B,KAAM8B,UAAUC,OAChBnC,KAAMkC,UAAUE,UAAU,CAACF,UAAUG,OAAQH,UAAUC,SACvDrC,UAAWoC,UAAUC"}