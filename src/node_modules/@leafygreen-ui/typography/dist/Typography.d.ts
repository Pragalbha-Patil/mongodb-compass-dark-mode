/// <reference types="react" />
import { ExtendableBox } from '@leafygreen-ui/box';
import { HTMLElementProps, OneOf } from '@leafygreen-ui/lib';
declare type H1Props = HTMLElementProps<'h1'>;
declare const H1: ExtendableBox<H1Props, 'h1'>;
declare type H2Props = HTMLElementProps<'h2'>;
declare const H2: ExtendableBox<H2Props, 'h2'>;
declare type H3Props = HTMLElementProps<'h3'>;
declare const H3: ExtendableBox<H3Props, 'h3'>;
declare type SubtitleProps = HTMLElementProps<'h6'>;
declare const Subtitle: ExtendableBox<SubtitleProps, 'h6'>;
declare type BodyProps = HTMLElementProps<'div'> & {
    /**
     * font-weight applied to typography element
     * default: `regular`
     */
    weight?: 'regular' | 'medium';
};
declare function Body({ children, className, weight, ...rest }: BodyProps): JSX.Element;
declare namespace Body {
    var displayName: string;
}
declare type InlineCodeProps = OneOf<HTMLElementProps<'code'>, HTMLElementProps<'a'>> & {
    darkMode?: boolean;
};
declare function InlineCode({ children, className, darkMode, ...rest }: InlineCodeProps): JSX.Element;
declare namespace InlineCode {
    var displayName: string;
}
declare function InlineKeyCode({ children, className, ...rest }: InlineCodeProps): JSX.Element;
declare namespace InlineKeyCode {
    var displayName: string;
}
declare type DisclaimerProps = HTMLElementProps<'small'>;
declare function Disclaimer({ children, className, ...rest }: DisclaimerProps): JSX.Element;
declare namespace Disclaimer {
    var displayName: string;
}
declare const Overline: ExtendableBox<{
    className?: string;
}>;
export { H1, H2, H3, Subtitle, Body, InlineCode, InlineKeyCode, Disclaimer, Overline, };
//# sourceMappingURL=Typography.d.ts.map