{"version":3,"file":"index.js","sources":["../../src/styles.tsx","../../src/Typography.tsx","../../src/Link.tsx","../../src/FormElements.tsx"],"sourcesContent":["import { css } from '@leafygreen-ui/emotion';\n\nexport const typeScale1 = css`\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n`;\n\nexport const typeScale2 = css`\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0px;\n`;\n","import React from 'react';\nimport Box, { ExtendableBox } from '@leafygreen-ui/box';\nimport { HTMLElementProps, createDataProp, OneOf } from '@leafygreen-ui/lib';\nimport {\n  useBaseFontSize,\n  useUsingKeyboardContext,\n} from '@leafygreen-ui/leafygreen-provider';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport { fontFamilies } from '@leafygreen-ui/tokens';\nimport { typeScale1, typeScale2 } from './styles';\n\nconst sharedStyles = css`\n  margin: unset;\n  font-family: ${fontFamilies.default};\n  color: ${uiColors.gray.dark3};\n`;\n\nconst h1 = css`\n  font-weight: 500;\n  font-size: 60px;\n  line-height: 68px;\n  letter-spacing: -0.3px;\n`;\n\ntype H1Props = HTMLElementProps<'h1'>;\n\nconst H1: ExtendableBox<H1Props, 'h1'> = ({\n  className,\n  ...rest\n}: {\n  className?: string;\n}) => {\n  return <Box as=\"h1\" className={cx(sharedStyles, h1, className)} {...rest} />;\n};\n\nH1.displayName = 'H1';\n\nconst h2 = css`\n  font-size: 32px;\n  line-height: 40px;\n  letter-spacing: 0px;\n`;\n\ntype H2Props = HTMLElementProps<'h2'>;\n\nconst H2: ExtendableBox<H2Props, 'h2'> = ({\n  className,\n  ...rest\n}: {\n  className?: string;\n}) => {\n  return <Box as=\"h2\" className={cx(sharedStyles, h2, className)} {...rest} />;\n};\n\nH2.displayName = 'H2';\n\nconst h3 = css`\n  font-size: 24px;\n  line-height: 32px;\n  letter-spacing: 0px;\n  font-weight: medium;\n`;\n\ntype H3Props = HTMLElementProps<'h3'>;\n\nconst H3: ExtendableBox<H3Props, 'h3'> = ({\n  className,\n  ...rest\n}: {\n  className?: string;\n}) => {\n  return <Box as=\"h3\" className={cx(sharedStyles, h3, className)} {...rest} />;\n};\n\nH3.displayName = 'H3';\n\nconst subtitle = css`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0px;\n`;\n\ntype SubtitleProps = HTMLElementProps<'h6'>;\n\nconst Subtitle: ExtendableBox<SubtitleProps, 'h6'> = ({\n  className,\n  ...rest\n}: {\n  className?: string;\n}) => {\n  return (\n    <Box as=\"h6\" className={cx(sharedStyles, subtitle, className)} {...rest} />\n  );\n};\n\nSubtitle.displayName = 'Subtitle';\n\ntype BodyProps = HTMLElementProps<'div'> & {\n  /**\n   * font-weight applied to typography element\n   * default: `regular`\n   */\n  weight?: 'regular' | 'medium';\n};\n\nfunction Body({ children, className, weight = 'regular', ...rest }: BodyProps) {\n  const size = useBaseFontSize();\n  const body = size === 16 ? typeScale2 : typeScale1;\n\n  const fontWeight = css`\n    font-weight: ${weight !== 'regular' ? 600 : 400};\n  `;\n\n  return (\n    <div {...rest} className={cx(sharedStyles, body, fontWeight, className)}>\n      {children}\n    </div>\n  );\n}\n\nBody.displayName = 'Body';\n\nconst anchorDataProp = createDataProp('anchor-inline-code');\n\nconst code = css`\n  transition: all 0.15s ease-in-out;\n  border-radius: 3px;\n  font-family: ${fontFamilies.code};\n\n  ${anchorDataProp.selector}:hover > & {\n    text-decoration: none;\n  }\n`;\n\nconst Mode = {\n  Light: 'light',\n  Dark: 'dark',\n} as const;\n\nconst codeModes = {\n  [Mode.Light]: css`\n    background-color: ${uiColors.gray.light3};\n    border: 1px solid ${uiColors.gray.light2};\n    color: ${uiColors.gray.dark3};\n\n    ${anchorDataProp.selector}:hover > & {\n      box-shadow: 0 0 0 3px ${uiColors.gray.light2};\n      border: 1px solid ${uiColors.gray.light1};\n    }\n  `,\n\n  [Mode.Dark]: css`\n    background-color: transparent;\n    border: 1px solid ${uiColors.gray.dark1};\n    color: ${uiColors.gray.light3};\n\n    ${anchorDataProp.selector}:hover > & {\n      box-shadow: 0 0 0 3px ${uiColors.gray.dark1};\n      border: 1px solid ${uiColors.gray.base};\n    }\n  `,\n};\n\nconst codeFocusModes = {\n  [Mode.Light]: css`\n    ${anchorDataProp.selector}:focus > & {\n      box-shadow: 0 0 0 3px ${uiColors.blue.light2};\n      border: 1px solid ${uiColors.focus};\n    }\n  `,\n\n  [Mode.Dark]: css`\n    ${anchorDataProp.selector}:focus > & {\n      box-shadow: 0 0 0 3px ${uiColors.blue.base};\n      border: 1px solid ${uiColors.focus};\n    }\n  `,\n};\n\nconst codeLinkStyleModes = {\n  [Mode.Light]: css`\n    color: ${uiColors.blue.base};\n  `,\n  [Mode.Dark]: css`\n    color: #28bfff;\n  `,\n};\n\nconst codeLinkWrapper = css`\n  text-decoration: none;\n  margin: 0;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst nowrap = css`\n  white-space: nowrap;\n`;\n\nconst normal = css`\n  white-space: normal;\n`;\n\ntype InlineCodeProps = OneOf<\n  HTMLElementProps<'code'>,\n  HTMLElementProps<'a'>\n> & {\n  darkMode?: boolean;\n};\n\nfunction InlineCode({\n  children,\n  className,\n  darkMode,\n  ...rest\n}: InlineCodeProps) {\n  const { usingKeyboard: showFocus } = useUsingKeyboardContext();\n  const size = useBaseFontSize();\n  const fontSize = size === 16 ? typeScale2 : typeScale1;\n  const mode = darkMode ? Mode.Dark : Mode.Light;\n  const whiteSpace =\n    ((typeof children === 'string' && children.match(/./gu)?.length) ?? 0) <= 30\n      ? nowrap\n      : normal;\n  const isAnchor = rest?.href !== undefined || rest.onClick !== undefined;\n\n  const renderedInlineCode = (\n    <code\n      className={cx(\n        code,\n        codeModes[mode],\n        fontSize,\n        whiteSpace,\n        { [codeLinkStyleModes[mode]]: isAnchor },\n        { [codeFocusModes[mode]]: showFocus },\n        className,\n      )}\n    >\n      {children}\n    </code>\n  );\n\n  if (isAnchor) {\n    return (\n      <a\n        {...anchorDataProp.prop}\n        className={cx(codeLinkWrapper, className)}\n        {...rest}\n      >\n        {renderedInlineCode}\n      </a>\n    );\n  }\n\n  return React.cloneElement(renderedInlineCode, rest);\n}\n\nInlineCode.displayName = 'InlineCode';\n\nconst inlineKeyCode = css`\n  font-family: ${fontFamilies.code};\n  color: ${uiColors.gray.dark3};\n  border: 1px solid ${uiColors.gray.dark3};\n  border-radius: 3px;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nfunction InlineKeyCode({ children, className, ...rest }: InlineCodeProps) {\n  const size = useBaseFontSize();\n  const body = size === 16 ? typeScale2 : typeScale1;\n\n  return (\n    <code className={cx(inlineKeyCode, body, className)} {...rest}>\n      {children}\n    </code>\n  );\n}\n\nInlineKeyCode.displayName = 'InlineKeyCode';\n\nconst disclaimer = css`\n  display: block;\n  font-size: 12px;\n  line-height: 20px;\n  letter-spacing: 0.2px;\n`;\n\ntype DisclaimerProps = HTMLElementProps<'small'>;\n\nfunction Disclaimer({ children, className, ...rest }: DisclaimerProps) {\n  return (\n    <small {...rest} className={cx(sharedStyles, disclaimer, className)}>\n      {children}\n    </small>\n  );\n}\n\nDisclaimer.displayName = 'Disclaimer';\n\nconst overline = css`\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  line-height: 16px;\n  letter-spacing: 0.4px;\n`;\n\nconst Overline: ExtendableBox<{\n  className?: string;\n}> = ({ className, ...rest }: { className?: string }) => {\n  return <Box className={cx(sharedStyles, overline, className)} {...rest} />;\n};\n\nOverline.displayName = 'Overline';\n\nexport {\n  H1,\n  H2,\n  H3,\n  Subtitle,\n  Body,\n  InlineCode,\n  InlineKeyCode,\n  Disclaimer,\n  Overline,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport ArrowRightIcon from '@leafygreen-ui/icon/dist/ArrowRight';\nimport OpenNewTabIcon from '@leafygreen-ui/icon/dist/OpenNewTab';\nimport Box, { ExtendableBox } from '@leafygreen-ui/box';\nimport { useBaseFontSize } from '@leafygreen-ui/leafygreen-provider';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport { HTMLElementProps, createDataProp } from '@leafygreen-ui/lib';\nimport { typeScale1, typeScale2 } from './styles';\n\nconst anchorDataProp = createDataProp('anchor-container');\n\nconst linkStyles = css`\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  color: ${uiColors.blue.base};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst underline = css`\n  background-repeat: repeat-x;\n  background-size: 2px 2px;\n  background-position: center bottom;\n\n  ${anchorDataProp.selector}:hover & {\n    background-image: linear-gradient(\n      ${uiColors.gray.light2} 100%,\n      ${uiColors.gray.light2} 0\n    );\n  }\n\n  ${anchorDataProp.selector}:focus & {\n    background-image: linear-gradient(\n      to right,\n      ${uiColors.blue.light1} 100%,\n      ${uiColors.blue.light1} 0\n    );\n  }\n`;\n\nconst arrowRightIconPersist = css`\n  transform: translate3d(3px, 0, 0);\n`;\n\nconst arrowRightIconHover = css`\n  opacity: 0;\n  transform: translate3d(-3px, 0, 0);\n  transition: all 100ms ease-in;\n\n  ${anchorDataProp.selector}:hover & {\n    opacity: 1;\n    transform: translate3d(3px, 0, 0);\n  }\n`;\n\nconst openInNewTabStyles = css`\n  position: relative;\n  bottom: 4px;\n  left: -1px;\n  height: 12px;\n`;\n\nconst ArrowAppearance = {\n  Hover: 'hover',\n  Persist: 'persist',\n  None: 'none',\n} as const;\n\ntype ArrowAppearance = typeof ArrowAppearance[keyof typeof ArrowAppearance];\n\nexport { ArrowAppearance };\n\nexport interface LinkProps extends HTMLElementProps<'a'> {\n  arrowAppearance?: ArrowAppearance;\n  hideExternalIcon?: boolean;\n}\n\nconst Link: ExtendableBox<LinkProps, 'a'> = ({\n  href,\n  children,\n  className,\n  target: targetProp,\n  arrowAppearance = ArrowAppearance.None,\n  hideExternalIcon = false,\n  ...rest\n}: LinkProps) => {\n  const [currentHostname, setCurrentHostname] = useState('');\n  useEffect(() => {\n    setCurrentHostname(window.location.hostname);\n  }, []);\n\n  const hrefHostname = useMemo(() => {\n    if (!href) return;\n    const httpRegex = /^http(s)?:\\/\\//;\n    return httpRegex.test(href) ? new URL(href).hostname : currentHostname;\n  }, [href, currentHostname]);\n\n  const size = useBaseFontSize();\n  const fontSize = size === 16 ? typeScale2 : typeScale1;\n\n  let target, icon, rel;\n\n  if (targetProp) {\n    target = targetProp;\n  } else {\n    if (hrefHostname === currentHostname) {\n      target = '_self';\n    } else {\n      target = '_blank';\n      rel = 'noopener noreferrer';\n    }\n  }\n\n  if (target === '_blank' && !hideExternalIcon) {\n    icon = (\n      <OpenNewTabIcon role=\"presentation\" className={openInNewTabStyles} />\n    );\n  } else if (arrowAppearance !== ArrowAppearance.None) {\n    icon = (\n      <ArrowRightIcon\n        role=\"presentation\"\n        size={12}\n        className={cx({\n          [arrowRightIconHover]: arrowAppearance === ArrowAppearance.Hover,\n          [arrowRightIconPersist]: arrowAppearance === ArrowAppearance.Persist,\n        })}\n      />\n    );\n  }\n\n  const elementProps = href\n    ? ({ as: 'a', href, target, rel } as const)\n    : ({ as: 'span' } as const);\n\n  return (\n    <Box\n      className={cx(linkStyles, fontSize, className)}\n      {...elementProps}\n      {...anchorDataProp.prop}\n      {...rest}\n    >\n      <span className={underline}>{children}</span>\n      {icon}\n    </Box>\n  );\n};\n\nexport { Link };\n","import React from 'react';\nimport { HTMLElementProps } from '@leafygreen-ui/lib';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { uiColors } from '@leafygreen-ui/palette';\n\nconst Mode = {\n  Light: 'light',\n  Dark: 'dark',\n} as const;\n\ntype Mode = typeof Mode[keyof typeof Mode];\n\ninterface ColorSets {\n  labelColor: string;\n  disabledLabelColor: string;\n  descriptionColor: string;\n}\n\nconst colorSets: Record<Mode, ColorSets> = {\n  [Mode.Light]: {\n    labelColor: css`\n      color: ${uiColors.gray.dark2};\n    `,\n    disabledLabelColor: css`\n      color: ${uiColors.gray.dark1};\n    `,\n    descriptionColor: css`\n      color: ${uiColors.gray.dark1};\n    `,\n  },\n  [Mode.Dark]: {\n    labelColor: css`\n      color: ${uiColors.white};\n    `,\n    disabledLabelColor: css`\n      color: ${uiColors.gray.light1};\n    `,\n    descriptionColor: css`\n      color: ${uiColors.gray.light1};\n    `,\n  },\n};\n\nconst labelStyle = css`\n  font-size: 14px;\n  font-weight: bold;\n  line-height: 16px;\n  padding-bottom: 4px;\n`;\n\ntype LabelProps = HTMLElementProps<'label', never> & {\n  darkMode?: boolean;\n  htmlFor: string;\n  disabled?: boolean;\n};\n\nconst Label = ({\n  darkMode = false,\n  className,\n  children,\n  disabled = false,\n  ...rest\n}: LabelProps) => {\n  const mode = darkMode ? Mode.Dark : Mode.Light;\n\n  return (\n    <label\n      className={cx(\n        labelStyle,\n        colorSets[mode].labelColor,\n        { [colorSets[mode].disabledLabelColor]: disabled },\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </label>\n  );\n};\n\nLabel.displayName = 'Label';\n\nconst descriptionStyle = css`\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: normal;\n  padding-bottom: 4px;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\ntype DescriptionProps = HTMLElementProps<'p', never> & {\n  darkMode?: boolean;\n};\n\nconst Description = ({\n  darkMode = false,\n  children,\n  className,\n  ...rest\n}: DescriptionProps) => {\n  const mode = darkMode ? Mode.Dark : Mode.Light;\n\n  return (\n    <p\n      className={cx(\n        descriptionStyle,\n        colorSets[mode].descriptionColor,\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </p>\n  );\n};\n\nDescription.displayName = 'Description';\n\nexport { Label, Description };\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_codeModes","_templateObject10","_templateObject11","_codeFocusModes","_templateObject12","_templateObject13","_codeLinkStyleModes","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","typeScale1","css","_taggedTemplateLiteral","typeScale2","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","_excluded8","_excluded9","sharedStyles","fontFamilies","default","uiColors","gray","dark3","h1","H1","_ref","className","rest","_objectWithoutProperties","___EmotionJSX","Box","_extends","as","cx","displayName","h2","H2","_ref2","h3","H3","_ref3","subtitle","Subtitle","_ref4","Body","_ref5","children","_ref5$weight","weight","body","useBaseFontSize","fontWeight","anchorDataProp","createDataProp","code","selector","Mode","codeModes","_defineProperty","light3","light2","light1","dark1","base","codeFocusModes","blue","focus","codeLinkStyleModes","codeLinkWrapper","nowrap","normal","InlineCode","_ref6","_ref7","_children$match","darkMode","showFocus","useUsingKeyboardContext","usingKeyboard","fontSize","mode","whiteSpace","match","length","isAnchor","undefined","href","onClick","renderedInlineCode","prop","React","cloneElement","inlineKeyCode","InlineKeyCode","_ref8","size","disclaimer","Disclaimer","_ref9","overline","Overline","_ref10","_colorSets","linkStyles","underline","arrowRightIconPersist","arrowRightIconHover","openInNewTabStyles","ArrowAppearance","Link","targetProp","target","_ref$arrowAppearance","arrowAppearance","_ref$hideExternalIcon","hideExternalIcon","_useState2","_slicedToArray","useState","currentHostname","setCurrentHostname","useEffect","window","location","hostname","icon","rel","hrefHostname","useMemo","test","URL","_cx","ArrowRightIcon","role","OpenNewTabIcon","elementProps","colorSets","labelColor","dark2","disabledLabelColor","descriptionColor","white","labelStyle","Label","_ref$darkMode","_ref$disabled","disabled","descriptionStyle","Description","_ref2$darkMode"],"mappings":"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"}