import { HTMLElementProps } from '@leafygreen-ui/lib';
declare const SupportedColors: {
    readonly White: "white";
    readonly Black: "black";
    readonly GreenDark2: "green-dark-2";
    readonly GreenBase: "green-base";
};
declare type SupportedColors = typeof SupportedColors[keyof typeof SupportedColors];
declare const SupportedColorsMap: Record<SupportedColors, string>;
declare type SupportedColorsMap = typeof SupportedColorsMap[keyof typeof SupportedColorsMap];
export { SupportedColors, SupportedColorsMap };
export interface LogoProps extends HTMLElementProps<'svg'> {
    /**
     * Determines Color of the Logo or LogoMark component.
     *
     * @default: 40
     */
    color?: SupportedColors;
    /**
     * Determines height of the Logo or LogoMark component.
     *
     * @default: 40
     */
    height?: number;
}
export declare type ProductLogoProps = HTMLElementProps<'svg', never> & {
    knockout?: boolean;
    size?: number;
    darkMode?: boolean;
    height?: number;
};
export declare const getAccessibleProps: ({ role, "aria-label": ariaLabel, }: {
    role: string;
    'aria-label': string;
}) => {
    role: string;
    'aria-label': string;
    alt?: undefined;
    'aria-hidden'?: undefined;
} | {
    role: string;
    alt: string;
    'aria-hidden': boolean;
    'aria-label'?: undefined;
};
export declare const getColor: ({ knockout, size, flat, gradient, darkMode, }: {
    knockout: boolean;
    darkMode: boolean;
    size: number;
    flat: string;
    gradient: string;
}) => string;
//# sourceMappingURL=utils.d.ts.map