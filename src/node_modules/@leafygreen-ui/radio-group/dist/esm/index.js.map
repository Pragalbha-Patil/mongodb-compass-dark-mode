{"version":3,"file":"index.js","sources":["../../src/types.ts","../../src/Radio.tsx","../../src/RadioGroup.tsx"],"sourcesContent":["const Size = {\n  XSmall: 'xsmall',\n  Small: 'small',\n  Default: 'default',\n} as const;\n\ntype Size = typeof Size[keyof typeof Size];\n\nexport { Size };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport InteractionRing from '@leafygreen-ui/interaction-ring';\nimport { createDataProp, HTMLElementProps } from '@leafygreen-ui/lib';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport { RadioGroupProps } from './RadioGroup';\nimport { Size } from './types';\n\nconst inputDisplay = createDataProp('radio-input-display');\nconst inputDisplayWrapper = createDataProp('radio-input-display-wrapper');\nconst inputDataProp = createDataProp('input-element');\n\nconst Mode = {\n  Dark: 'dark',\n  Light: 'light',\n} as const;\n\ntype Mode = typeof Mode[keyof typeof Mode];\n\nexport { Mode };\n\nconst containerMargin = css`\n  margin-top: 8px;\n`;\n\nconst offsets = {\n  [Size.XSmall]: css`\n    margin-top: -3px;\n  `,\n  [Size.Small]: css`\n    margin-top: -2px;\n  `,\n  [Size.Default]: css`\n    margin-top: 1px;\n  `,\n};\n\nconst labelColorSet = {\n  [Mode.Light]: {\n    base: css`\n      color: ${uiColors.gray.dark2};\n    `,\n\n    disabled: css`\n      cursor: not-allowed;\n      color: ${uiColors.gray.base};\n    `,\n  },\n\n  [Mode.Dark]: {\n    base: css`\n      color: ${uiColors.white};\n    `,\n\n    disabled: css`\n      cursor: not-allowed;\n      color: ${uiColors.gray.light1};\n    `,\n  },\n};\n\nconst labelStyle = css`\n  display: flex;\n  align-items: flex-start;\n  font-size: 14px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\n// Note colors are not in our palette\nconst inputColorSet = {\n  [Mode.Light]: css`\n    &:checked + ${inputDisplayWrapper.selector} ${inputDisplay.selector} {\n      background-color: #2798bd;\n      border-color: #2798bd;\n\n      &:after {\n        transform: scale(1);\n      }\n    }\n\n    &:focus + div:before {\n      transform: scale(1);\n      opacity: 1;\n      border-color: ${uiColors.blue.light1};\n    }\n\n    &:disabled + ${inputDisplayWrapper.selector} ${inputDisplay.selector} {\n      border-color: ${uiColors.gray.light1};\n      background-color: ${uiColors.gray.light2};\n    }\n  `,\n\n  [Mode.Dark]: css`\n    &:checked + ${inputDisplayWrapper.selector} ${inputDisplay.selector} {\n      background-color: #43b1e5;\n      border-color: #43b1e5;\n\n      &:after {\n        transform: scale(1);\n      }\n    }\n\n    &:focus + div:before {\n      transform: scale(1);\n      opacity: 1;\n      border-color: ${uiColors.blue.base};\n    }\n\n    &:disabled + ${inputDisplayWrapper.selector} ${inputDisplay.selector} {\n      background-color: ${uiColors.gray.dark2};\n      border-color: rgba(255, 255, 255, 0.15);\n    }\n  `,\n};\n\nconst disabledChecked = {\n  [Mode.Light]: css`\n    &:disabled + ${inputDisplayWrapper.selector} ${inputDisplay.selector} {\n      background-color: ${uiColors.gray.light1};\n      border-color: ${uiColors.gray.light1};\n\n      &:after {\n        background-color: ${uiColors.gray.light2};\n        transform: scale(1);\n      }\n    }\n  `,\n\n  [Mode.Dark]: css`\n    &:disabled + ${inputDisplayWrapper.selector} ${inputDisplay.selector} {\n      border-color: ${uiColors.gray.dark2};\n\n      &:after {\n        background-color: rgba(255, 255, 255, 0.3);\n        transform: scale(1);\n      }\n    }\n  `,\n};\n\nconst inputStyle = css`\n  height: 0;\n  width: 0;\n  opacity: 0;\n`;\n\nconst divColorSet = {\n  [Mode.Light]: css`\n    border: 2px solid ${uiColors.gray.dark1};\n    background-color: rgba(255, 255, 255, 0.31);\n  `,\n\n  [Mode.Dark]: css`\n    border: 2px solid ${uiColors.white};\n    background-color: rgba(255, 255, 255, 0.2);\n  `,\n};\n\nconst divStyle = css`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  transition: background-color 0.15s ease-in-out;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  border-radius: 100%;\n\n  &:before {\n    content: '';\n    position: absolute;\n    border-radius: 100%;\n    top: -5px;\n    bottom: -5px;\n    left: -5px;\n    right: -5px;\n  }\n\n  &:after {\n    content: '';\n    box-shadow: inset 0 -1px 0 0 #f1f1f1, 0 1px 0 0 rgba(0, 0, 0, 0.08),\n      0 1px 1px 0 rgba(6, 22, 33, 0.22);\n    background-color: white;\n    border-radius: 100%;\n    transform: scale(0);\n  }\n\n  ${inputDataProp.selector}:disabled + ${inputDisplayWrapper.selector} & {\n    &:after {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst divSize = {\n  [Size.Small]: css`\n    &:after {\n      width: 4px;\n      height: 4px;\n      transition: transform 0.2s cubic-bezier(0.16, 1.54, 0, 1.31),\n        border-color 0.15s ease-in-out;\n    }\n  `,\n  [Size.Default]: css`\n    &:after {\n      width: 8px;\n      height: 8px;\n      transition: transform 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275),\n        border-color 0.15s ease-in-out;\n    }\n  `,\n};\n\nconst radioBoxSize = {\n  [Size.Small]: css`\n    height: 14px;\n    width: 14px;\n  `,\n  [Size.Default]: css`\n    height: 20px;\n    width: 20px;\n  `,\n};\n\nconst radioBoxStyle = css`\n  position: relative;\n  flex-shrink: 0;\n`;\n\nexport type RadioProps = Omit<HTMLElementProps<'input', never>, 'size'> &\n  Pick<RadioGroupProps, 'darkMode' | 'size'> & {\n    default?: boolean;\n    id?: string | number;\n  };\n\n/**\n * # Radio\n *\n * Radio component\n *\n * ```\n  <Radio value='radio-1'>Radio 1</Radio>\n```\n * @param props.disabled Boolean that determines if the Radio is disabled.\n * @param props.children Content that will appear inside of Radio.\n * @param props.value Used to determine what Radio is active.\n * @param props.id Id for Radio and respective label.\n * @param props.default If RadioGroup is uncontrolled, the default property makes this Radio checked on the initial render.\n * @param props.className className supplied to Radio container.\n * @param props.size Size of Radio buttons.\n */\nfunction Radio({\n  children,\n  className,\n  onChange = () => {},\n  value,\n  disabled = false,\n  id,\n  name,\n  darkMode = false,\n  checked,\n  size = Size.Default,\n  ...rest\n}: RadioProps) {\n  const normalizedSize =\n    size === Size.Small || size === Size.XSmall ? Size.Small : Size.Default;\n\n  const mode = darkMode ? Mode.Dark : Mode.Light;\n\n  const [inputElement, setInputElement] = useState<HTMLElement | null>(null);\n\n  return (\n    <div className={containerMargin}>\n      <label\n        htmlFor={id}\n        className={cx(\n          labelStyle,\n          labelColorSet[mode].base,\n          {\n            [labelColorSet[mode].disabled]: disabled,\n            [css`\n              font-size: 12px;\n            `]: size === Size.XSmall,\n          },\n          className,\n        )}\n      >\n        <input\n          {...rest}\n          {...inputDataProp.prop}\n          ref={setInputElement}\n          checked={!!checked}\n          id={id}\n          name={name}\n          type=\"radio\"\n          onChange={onChange}\n          value={value}\n          aria-checked={checked}\n          disabled={disabled}\n          aria-disabled={disabled}\n          className={cx(inputStyle, inputColorSet[mode], {\n            [disabledChecked[mode]]: disabled && checked,\n          })}\n        />\n\n        <InteractionRing\n          darkMode={darkMode}\n          disabled={disabled}\n          focusTargetElement={inputElement}\n          className={cx(radioBoxStyle, radioBoxSize[normalizedSize])}\n          borderRadius=\"100%\"\n          {...inputDisplayWrapper.prop}\n        >\n          <div\n            {...inputDisplay.prop}\n            className={cx(divStyle, divColorSet[mode], divSize[normalizedSize])}\n          />\n        </InteractionRing>\n\n        <div\n          className={cx(\n            css`\n              margin-left: ${size === Size.XSmall ? 4 : 8}px;\n            `,\n            offsets[size],\n          )}\n        >\n          {children}\n        </div>\n      </label>\n    </div>\n  );\n}\n\nRadio.displayName = 'Radio';\n\nRadio.propTypes = {\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onChange: PropTypes.func,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.oneOf(['xsmall', 'small', 'default']),\n  default: PropTypes.bool,\n  darkMode: PropTypes.bool,\n};\n\nexport default Radio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isComponentType } from '@leafygreen-ui/lib';\nimport { useIdAllocator } from '@leafygreen-ui/hooks';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { Size } from './types';\n\nexport interface RadioGroupProps {\n  /**\n   * Determines whether or not the RadioGroup will appear in dark mode.\n   *\n   * @default false\n   */\n  darkMode?: boolean;\n\n  /**\n   * className supplied to RadioGroup container.\n   */\n  className?: string;\n\n  /**\n   * Callback to be executed when a Radio is selected.\n   */\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n\n  /**\n   * Content that will appear inside of RadioGroup component.\n   */\n  children: React.ReactNode;\n\n  /**\n   * Name passed to each Radio belonging to the RadioGroup.\n   */\n  name?: string;\n\n  /**\n   * Determines what radio will be checked on default. Component will be controlled if this prop is used.\n   */\n  value?: string | number | null;\n\n  /**\n   * Determines the size of the Radio components Can be 'small' or 'default.\n   *\n   * @default default\n   */\n  size?: Size;\n}\n\n/**\n * # RadioGroup\n *\n * RadioGroup component\n *\n * ```\n<RadioGroup onChange={() => execute callback onChange}>\n  <Radio value='Radio-1'>Radio 1</Radio>\n  <Radio value='Radio-2'>Radio 2</Radio>\n</RadioGroup>\n```\n * @param props.children Content to appear inside of RadioGroup component.\n * @param props.onChange Callback to be executed when a Radio is selected.\n * @param props.value Radio that should appear checked. If value passed, component will be controlled by consumer.\n * @param props.className classname applied to RadioGroup container.\n * @param props.name Name passed to each Radio belonging to the RadioGroup.\n * @param props.darkMode Determines whether or not the RadioGroup will appear in dark mode.\n * @param props.size Determines the size of the Radio components Can be 'small' or 'default.\n */\nfunction RadioGroup({\n  darkMode = false,\n  size = Size.Default,\n  className,\n  onChange,\n  children,\n  value: controlledValue,\n  name: nameProp,\n}: RadioGroupProps) {\n  let isControlled = controlledValue != null ? true : false,\n    defaultChecked = '';\n\n  React.Children.forEach(children, child => {\n    if (isComponentType(child, 'Radio')) {\n      if (child.props.checked != null) {\n        isControlled = true;\n      }\n\n      if (child.props.default) {\n        defaultChecked = child.props.value;\n      }\n    }\n  });\n\n  const [uncontrolledValue, setUncontrolledValue] = React.useState<string>(\n    defaultChecked,\n  );\n\n  const name = useIdAllocator({ prefix: 'radio-group', id: nameProp });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (!isControlled) {\n      setUncontrolledValue(e.target.value);\n    }\n  };\n\n  const renderedChildren = React.Children.map(children, (child, index) => {\n    if (!isComponentType(child, 'Radio')) {\n      return child;\n    }\n\n    const checked = isControlled\n      ? child.props.value === controlledValue || child.props.checked\n      : child.props.value === uncontrolledValue;\n\n    return React.cloneElement(child, {\n      onChange: handleChange,\n      id: child.props.id || `${name}-${index}`,\n      checked,\n      darkMode,\n      name,\n      size,\n    });\n  });\n\n  return (\n    <div\n      className={cx(\n        css`\n          width: 700px;\n        `,\n        className,\n      )}\n      role=\"group\"\n      aria-label={name}\n    >\n      {renderedChildren}\n    </div>\n  );\n}\n\nRadioGroup.propTypes = {\n  darkMode: PropTypes.bool,\n  size: PropTypes.oneOf(['xsmall', 'small', 'default']),\n  className: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  children: PropTypes.node,\n  name: PropTypes.string,\n};\n\nRadioGroup.displayName = 'RadioGroup';\n\nexport default RadioGroup;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_offsets","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_labelColorSet","_templateObject9","_templateObject10","_templateObject11","_inputColorSet","_templateObject12","_templateObject13","_disabledChecked","_templateObject14","_templateObject15","_templateObject16","_divColorSet","_templateObject17","_templateObject18","_templateObject19","_divSize","_templateObject20","_templateObject21","_radioBoxSize","_templateObject22","_templateObject23","_templateObject24","Size","XSmall","Small","Default","_excluded","inputDisplay","createDataProp","inputDisplayWrapper","inputDataProp","Mode","containerMargin","css","_taggedTemplateLiteral","offsets","_defineProperty","labelColorSet","base","uiColors","gray","dark2","disabled","white","light1","labelStyle","inputColorSet","selector","blue","light2","disabledChecked","inputStyle","divColorSet","dark1","divStyle","divSize","radioBoxSize","radioBoxStyle","Radio","_ref","_cx","children","className","_ref$onChange","onChange","value","_ref$disabled","id","name","_ref$darkMode","darkMode","checked","_ref$size","size","rest","_objectWithoutProperties","normalizedSize","mode","_useState2","_slicedToArray","useState","inputElement","setInputElement","___EmotionJSX","htmlFor","cx","_extends","prop","ref","type","aria-checked","aria-disabled","InteractionRing","focusTargetElement","borderRadius","RadioGroup","controlledValue","nameProp","isControlled","defaultChecked","React","Children","forEach","child","isComponentType","props","default","_React$useState2","uncontrolledValue","setUncontrolledValue","useIdAllocator","prefix","handleChange","e","target","renderedChildren","map","index","cloneElement","concat","role","aria-label","displayName","propTypes","PropTypes","bool","string","node","func","oneOfType","number","isRequired","oneOf"],"mappings":"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"}