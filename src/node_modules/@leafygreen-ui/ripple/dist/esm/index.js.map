{"version":3,"file":"index.js","sources":["../../src/registerRipple.ts","../../src/getRippleGlobalNamespace.ts"],"sourcesContent":["import { getRippleGlobalNamespace } from './getRippleGlobalNamespace';\nimport { Options } from './utils';\n\nconst TRANSITION_TIME = 300;\nconst RIPPLE_NAMESPACE = getRippleGlobalNamespace();\n\nfunction rippleEvent(event: MouseEvent) {\n  if (\n    RIPPLE_NAMESPACE?.registeredRippleElements.has(event.target as HTMLElement)\n  ) {\n    createRippleEffect(event);\n  }\n}\n\nexport function registerRipple(node: HTMLElement, options: Options) {\n  if (!RIPPLE_NAMESPACE) {\n    return;\n  }\n\n  RIPPLE_NAMESPACE.registeredRippleElements.set(node, options);\n\n  if (!RIPPLE_NAMESPACE.setRippleListener) {\n    document.addEventListener('click', rippleEvent, { passive: true });\n\n    const styles = document.createElement('style');\n    styles.innerHTML = staticRippleStyles;\n    document.head.append(styles);\n\n    RIPPLE_NAMESPACE.setRippleListener = true;\n  }\n\n  return () => {\n    RIPPLE_NAMESPACE.registeredRippleElements.delete(node);\n  };\n}\n\nfunction createRippleEffect(event: MouseEvent) {\n  const target = event.target as HTMLElement | null;\n  const foundNode = RIPPLE_NAMESPACE?.registeredRippleElements.get(\n    target as HTMLElement,\n  );\n\n  if (!target || !foundNode) {\n    return;\n  }\n\n  const { backgroundColor } = foundNode;\n\n  const rect = target.getBoundingClientRect();\n  const ripple = document.createElement('span');\n\n  ripple.className = 'lg-ui-ripple';\n  ripple.style.height = ripple.style.width =\n    Math.max(rect.width, rect.height) + 'px';\n  target.appendChild(ripple);\n\n  const top =\n    event.pageY - rect.top - ripple.offsetHeight / 2 - document.body.scrollTop;\n  const left =\n    event.pageX - rect.left - ripple.offsetWidth / 2 - document.body.scrollLeft;\n\n  ripple.style.top = top + 'px';\n  ripple.style.left = left + 'px';\n\n  ripple.style.background = backgroundColor;\n\n  setTimeout(() => {\n    ripple.remove();\n  }, 750);\n}\n\nconst staticRippleStyles = `\n  @-webkit-keyframes lg-ui-ripple {\n    from {\n      opacity:1;\n    }\n    to {\n      transform: scale(2);\n      transition: opacity ${TRANSITION_TIME}ms;\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes lg-ui-ripple {\n    from {\n      opacity:1;\n    }\n    to {\n      transform: scale(2);\n      transition: opacity ${TRANSITION_TIME}ms;\n      opacity: 0;\n    }\n  }\n\n  @keyframes lg-ui-ripple {\n    from {\n      opacity:1;\n    }\n    to {\n      transform: scale(2);\n      transition: opacity ${TRANSITION_TIME}ms;\n      opacity: 0;\n    }\n  }\n\n  .lg-ui-ripple {\n    position: absolute;\n    border-radius: 100%;\n    transform: scale(0.2);\n    opacity: 0;\n    pointer-events: none;\n    // Ensures that text is shown above ripple effect\n    z-index: -1;\n    -webkit-animation: lg-ui-ripple .75s ease-out;\n    -moz-animation: lg-ui-ripple .75s ease-out;\n    animation: lg-ui-ripple .75s ease-out;\n  }\n\n  @media (prefers-reduced-motion: reduce) {\n    .lg-ui-ripple {\n      animation: none;\n      transform: none;\n    }\n  }\n`;\n","import { Options } from './utils';\n\nexport interface ModuleType {\n  '@leafygreen-ui/ripple': {\n    registeredRippleElements: WeakMap<HTMLElement, Options>;\n    setRippleListener: boolean;\n  };\n}\n\ntype SetWindow = Window &\n  typeof globalThis & {\n    __LEAFYGREEN_UTILS__: {\n      modules: {};\n    };\n  };\n\nexport type LGWindow = Window &\n  typeof globalThis & {\n    __LEAFYGREEN_UTILS__: {\n      modules: ModuleType;\n    };\n  };\n\nexport function getRippleGlobalNamespace() {\n  // Handles SSR\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const defaultRippleParams = {\n    setRippleListener: false,\n    registeredRippleElements: new WeakMap(),\n  };\n\n  (window as SetWindow).__LEAFYGREEN_UTILS__ ??= { modules: {} };\n\n  (window as LGWindow).__LEAFYGREEN_UTILS__.modules[\n    '@leafygreen-ui/ripple'\n  ] = defaultRippleParams;\n\n  return (window as LGWindow).__LEAFYGREEN_UTILS__.modules[\n    '@leafygreen-ui/ripple'\n  ];\n}\n"],"names":["RIPPLE_NAMESPACE","_ref","_ref$__LEAFYGREEN_UTI","window","defaultRippleParams","setRippleListener","registeredRippleElements","WeakMap","__LEAFYGREEN_UTILS__","modules","getRippleGlobalNamespace","rippleEvent","event","has","target","foundNode","get","backgroundColor","rect","getBoundingClientRect","ripple","document","createElement","className","style","height","width","Math","max","appendChild","top","pageY","offsetHeight","body","scrollTop","left","pageX","offsetWidth","scrollLeft","background","setTimeout","remove","createRippleEffect","registerRipple","node","options","set","addEventListener","passive","styles","innerHTML","staticRippleStyles","head","append","delete","concat"],"mappings":"AACA,IACIA,ECFG,WACL,IAAIC,EAAMC,EAGV,GAAsB,oBAAXC,OAAX,CAIA,IAAIC,EAAsB,CACxBC,mBAAmB,EACnBC,yBAA0B,IAAIC,SAMhC,OAJmE,QAAlEL,GAAyBD,EAAOE,QAAQK,4BAA4D,IAA1BN,IAA2DD,EAAKO,qBAAuB,CAChKC,QAAS,KAEXN,OAAOK,qBAAqBC,QAAQ,yBAA2BL,EACxDD,OAAOK,qBAAqBC,QAAQ,0BDdtBC,GAEvB,SAASC,EAAYC,GACfZ,MAAAA,GAA4DA,EAAiBM,yBAAyBO,IAAID,EAAME,SA2BtH,SAA4BF,GAC1B,IAAIE,EAASF,EAAME,OACfC,EAAYf,MAAAA,OAA2D,EAASA,EAAiBM,yBAAyBU,IAAIF,GAElI,IAAKA,IAAWC,EACd,OAGF,IAAIE,EAAkBF,EAAUE,gBAC5BC,EAAOJ,EAAOK,wBACdC,EAASC,SAASC,cAAc,QACpCF,EAAOG,UAAY,eACnBH,EAAOI,MAAMC,OAASL,EAAOI,MAAME,MAAQC,KAAKC,IAAIV,EAAKQ,MAAOR,EAAKO,QAAU,KAC/EX,EAAOe,YAAYT,GACnB,IAAIU,EAAMlB,EAAMmB,MAAQb,EAAKY,IAAMV,EAAOY,aAAe,EAAIX,SAASY,KAAKC,UACvEC,EAAOvB,EAAMwB,MAAQlB,EAAKiB,KAAOf,EAAOiB,YAAc,EAAIhB,SAASY,KAAKK,WAC5ElB,EAAOI,MAAMM,IAAMA,EAAM,KACzBV,EAAOI,MAAMW,KAAOA,EAAO,KAC3Bf,EAAOI,MAAMe,WAAatB,EAC1BuB,YAAW,WACTpB,EAAOqB,WACN,KA/CDC,CAAmB9B,GAIhB,SAAS+B,EAAeC,EAAMC,GACnC,GAAK7C,EAAL,CAMA,GAFAA,EAAiBM,yBAAyBwC,IAAIF,EAAMC,IAE/C7C,EAAiBK,kBAAmB,CACvCgB,SAAS0B,iBAAiB,QAASpC,EAAa,CAC9CqC,SAAS,IAEX,IAAIC,EAAS5B,SAASC,cAAc,SACpC2B,EAAOC,UAAYC,EACnB9B,SAAS+B,KAAKC,OAAOJ,GACrBjD,EAAiBK,mBAAoB,EAGvC,OAAO,WACLL,EAAiBM,yBAAyBgD,OAAOV,KA4BrD,IAAIO,EAAqB,+IAA+II,OAvDlJ,IAuD0K,iLAAiLA,OAvD3V,IAuDmX,4KAA4KA,OAvD/hB,IAuDujB"}