import React from 'react';
import PropTypes from 'prop-types';
export declare const Variant: {
    readonly Default: "primary";
    readonly Danger: "danger";
};
export declare type Variant = typeof Variant[keyof typeof Variant];
interface ConfirmationModalProps {
    title: string;
    children: React.ReactNode;
    open?: boolean;
    onConfirm?: () => void;
    onCancel?: () => void;
    className?: string;
    buttonText: string;
    variant?: Variant;
    requiredInputText?: string;
    submitDisabled?: boolean;
    darkMode?: boolean;
}
declare const ConfirmationModal: {
    ({ children, title, requiredInputText, buttonText, submitDisabled, variant, onConfirm, onCancel, darkMode, ...modalProps }: ConfirmationModalProps): JSX.Element;
    displayName: string;
    propTypes: {
        title: PropTypes.Validator<string>;
        open: PropTypes.Requireable<boolean>;
        onConfirm: PropTypes.Requireable<(...args: any[]) => any>;
        onCancel: PropTypes.Requireable<(...args: any[]) => any>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        className: PropTypes.Requireable<string>;
        buttonText: PropTypes.Requireable<string>;
        variant: PropTypes.Requireable<Variant>;
        requiredInputText: PropTypes.Requireable<string>;
    };
};
export default ConfirmationModal;
//# sourceMappingURL=ConfirmationModal.d.ts.map