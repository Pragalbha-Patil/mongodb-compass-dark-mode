{"version":3,"file":"index.js","sources":["../src/UsingKeyboardContext.tsx","../src/PortalContext.tsx","../src/TypographyContext.tsx","../src/LeafyGreenContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useEventListener } from '@leafygreen-ui/hooks';\n\ninterface UsingKeyboardState {\n  usingKeyboard: boolean;\n  setUsingKeyboard: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const UsingKeyboardContext = createContext<UsingKeyboardState>({\n  usingKeyboard: true,\n  setUsingKeyboard: () => {},\n});\n\n// All keys here are used to manage focus through keyboard interaction.\nexport const NavigationKeyCodes: { readonly [k: string]: number } = {\n  tab: 9,\n  leftArrow: 37,\n  upArrow: 38,\n  rightArrow: 39,\n  downArrow: 40,\n} as const;\n\nexport function useUsingKeyboardContext(): UsingKeyboardState {\n  return useContext(UsingKeyboardContext);\n}\n\ninterface UsingKeyboardProviderProps {\n  children?: React.ReactNode;\n}\n\nfunction UsingKeyboardProvider({ children }: UsingKeyboardProviderProps) {\n  const [usingKeyboard, setUsingKeyboard] = useState(false);\n\n  useEventListener('mousedown', () => setUsingKeyboard(false), {\n    enabled: usingKeyboard,\n  });\n\n  useEventListener(\n    'keydown',\n    ({ keyCode }) => {\n      if (Object.values(NavigationKeyCodes).includes(keyCode)) {\n        setUsingKeyboard(true);\n      }\n    },\n    { enabled: !usingKeyboard },\n  );\n\n  const providerValue = useMemo(\n    () => ({\n      usingKeyboard,\n      setUsingKeyboard,\n    }),\n    [usingKeyboard],\n  );\n\n  return (\n    <UsingKeyboardContext.Provider value={providerValue}>\n      {children}\n    </UsingKeyboardContext.Provider>\n  );\n}\n\nUsingKeyboardProvider.displayName = 'UsingKeyboardProvider';\n\nUsingKeyboardProvider.propTypes = { children: PropTypes.node };\n\nexport default UsingKeyboardProvider;\n","import React, { createContext, useContext } from 'react';\n\nexport interface PortalContextValues {\n  popover: {\n    portalContainer?: HTMLElement | null;\n    scrollContainer?: HTMLElement | null;\n  };\n}\n\nconst defaultPortalContextValues: PortalContextValues = {\n  popover: {\n    portalContainer: undefined,\n    scrollContainer: undefined,\n  },\n};\n\nconst PortalContext = createContext<PortalContextValues>(\n  defaultPortalContextValues,\n);\n\nexport function usePopoverPortalContainer() {\n  const { popover } = useContext(PortalContext);\n\n  return popover;\n}\n\ninterface PortalContext {\n  popover?: PortalContextValues['popover'];\n  children: React.ReactNode;\n}\n\nexport default function PortalContextProvider({\n  popover = defaultPortalContextValues.popover,\n  children,\n}: PortalContext) {\n  return (\n    <PortalContext.Provider value={{ popover }}>\n      {children}\n    </PortalContext.Provider>\n  );\n}\n","import React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport interface TypographyProviderProps {\n  children: React.ReactNode;\n  baseFontSize?: 14 | 16;\n}\n\nconst BaseFontSizeContext = createContext<14 | 16>(14);\n\nexport function useBaseFontSize() {\n  return useContext(BaseFontSizeContext);\n}\n\nfunction TypographyProvider({\n  children,\n  baseFontSize = 14,\n}: TypographyProviderProps) {\n  return (\n    <BaseFontSizeContext.Provider value={baseFontSize}>\n      {children}\n    </BaseFontSizeContext.Provider>\n  );\n}\n\nTypographyProvider.displayName = 'TypographyProvider';\n\nTypographyProvider.propTypes = {\n  children: PropTypes.node,\n  baseFontSize: PropTypes.number,\n};\n\nexport default TypographyProvider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UsingKeyboardProvider from './UsingKeyboardContext';\nimport TypographyProvider, {\n  TypographyProviderProps,\n} from './TypographyContext';\nimport PortalContextProvider, { PortalContextValues } from './PortalContext';\n\ntype LeafyGreenProviderProps = {\n  children: React.ReactNode;\n  popoverPortalContainer?: PortalContextValues['popover'];\n} & TypographyProviderProps;\n\nfunction LeafyGreenProvider({\n  children,\n  baseFontSize,\n  popoverPortalContainer,\n}: LeafyGreenProviderProps) {\n  return (\n    <UsingKeyboardProvider>\n      <PortalContextProvider popover={popoverPortalContainer}>\n        <TypographyProvider baseFontSize={baseFontSize}>\n          {children}\n        </TypographyProvider>\n      </PortalContextProvider>\n    </UsingKeyboardProvider>\n  );\n}\n\nLeafyGreenProvider.displayName = 'LeafyGreenProvider';\n\nLeafyGreenProvider.propTypes = { children: PropTypes.node };\n\nexport default LeafyGreenProvider;\n"],"names":["UsingKeyboardContext","createContext","usingKeyboard","setUsingKeyboard","NavigationKeyCodes","tab","leftArrow","upArrow","rightArrow","downArrow","UsingKeyboardProvider","_ref","children","_useState2","_slicedToArray","useState","useEventListener","enabled","_ref2","keyCode","Object","values","includes","providerValue","useMemo","___EmotionJSX","Provider","value","displayName","propTypes","PropTypes","node","defaultPortalContextValues","popover","portalContainer","undefined","scrollContainer","PortalContext","PortalContextProvider","_ref$popover","BaseFontSizeContext","TypographyProvider","_ref$baseFontSize","baseFontSize","LeafyGreenProvider","popoverPortalContainer","number","useContext"],"mappings":"qgDAKO,IAAIA,EAAuBC,gBAAc,CAC9CC,eAAe,EACfC,iBAAkB,eAGTC,EAAqB,CAC9BC,IAAK,EACLC,UAAW,GACXC,QAAS,GACTC,WAAY,GACZC,UAAW,IAMb,SAASC,EAAsBC,GAC7B,IAAIC,EAAWD,EAAKC,SAGhBC,EAAaC,EADDC,YAAS,GACkB,GACvCb,EAAgBW,EAAW,GAC3BV,EAAmBU,EAAW,GAElCG,mBAAiB,aAAa,WAC5B,OAAOb,GAAiB,KACvB,CACDc,QAASf,IAEXc,mBAAiB,WAAW,SAAUE,GACpC,IAAIC,EAAUD,EAAMC,QAEhBC,OAAOC,OAAOjB,GAAoBkB,SAASH,IAC7ChB,GAAiB,KAElB,CACDc,SAAUf,IAEZ,IAAIqB,EAAgBC,WAAQ,WAC1B,MAAO,CACLtB,cAAeA,EACfC,iBAAkBA,KAEnB,CAACD,IACJ,OAAOuB,MAAczB,EAAqB0B,SAAU,CAClDC,MAAOJ,GACNX,GAGLF,EAAsBkB,YAAc,wBACpClB,EAAsBmB,UAAY,CAChCjB,SAAUkB,UAAUC,MCtDtB,IAAIC,EAA6B,CAC/BC,QAAS,CACPC,qBAAiBC,EACjBC,qBAAiBD,IAGjBE,EAAgBpC,gBAAc+B,GAOnB,SAASM,EAAsB3B,GAC5C,IAAI4B,EAAe5B,EAAKsB,QACpBA,OAA2B,IAAjBM,EAA0BP,EAA2BC,QAAUM,EACzE3B,EAAWD,EAAKC,SACpB,OAAOa,MAAcY,EAAcX,SAAU,CAC3CC,MAAO,CACLM,QAASA,IAEVrB,GCpBL,IAAI4B,EAAsBvC,gBAAc,IAKxC,SAASwC,EAAmB9B,GAC1B,IAAIC,EAAWD,EAAKC,SAChB8B,EAAoB/B,EAAKgC,aACzBA,OAAqC,IAAtBD,EAA+B,GAAKA,EACvD,OAAOjB,MAAce,EAAoBd,SAAU,CACjDC,MAAOgB,GACN/B,GCPL,SAASgC,EAAmBjC,GAC1B,IAAIC,EAAWD,EAAKC,SAChB+B,EAAehC,EAAKgC,aACpBE,EAAyBlC,EAAKkC,uBAClC,OAAOpB,MAAcf,EAAuB,KAAMe,MAAca,EAAuB,CACrFL,QAASY,GACRpB,MAAcgB,EAAoB,CACnCE,aAAcA,GACb/B,KDEL6B,EAAmBb,YAAc,qBACjCa,EAAmBZ,UAAY,CAC7BjB,SAAUkB,UAAUC,KACpBY,aAAcb,UAAUgB,QCF1BF,EAAmBhB,YAAc,qBACjCgB,EAAmBf,UAAY,CAC7BjB,SAAUkB,UAAUC,oCDhBf,WACL,OAAOgB,aAAWP,gCDIb,WAIL,OAHkBO,aAAWV,GACHJ,mCDMrB,WACL,OAAOc,aAAW/C"}