import React from 'react';
import PropTypes from 'prop-types';
import { HTMLElementProps } from '@leafygreen-ui/lib';
export declare const Variant: {
    readonly DarkGray: "darkgray";
    readonly LightGray: "lightgray";
    readonly Red: "red";
    readonly Yellow: "yellow";
    readonly Blue: "blue";
    readonly Green: "green";
};
export declare type Variant = typeof Variant[keyof typeof Variant];
export declare const baseStyle: string;
export declare const badgeVariants: {
    [K in Variant]: string;
};
interface BadgeProps {
    /**
     * An additional className to add to the component's classList
     */
    className?: string;
    /**
     * The content to render within the badge
     */
    children?: React.ReactNode;
    /**
     * The Badge's style variant
     *
     * Default: `'lightgray'`
     */
    variant?: Variant;
}
declare function Badge({ children, variant, className, ...rest }: BadgeProps & HTMLElementProps<'div', never>): JSX.Element;
declare namespace Badge {
    var displayName: string;
    var propTypes: {
        className: PropTypes.Requireable<string>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        variant: PropTypes.Requireable<Variant>;
    };
}
export default Badge;
//# sourceMappingURL=Badge.d.ts.map