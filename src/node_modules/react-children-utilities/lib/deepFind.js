import { Children, isValidElement } from 'react';
import hasComplexChildren from './hasComplexChildren.js';
const deepFind = (children, deepFindFn) => {
    // eslint-disable-next-line @typescript-eslint/init-declarations
    let found;
    Children.toArray(children).find((child, index, findChildren) => {
        if (deepFindFn(child, index, findChildren)) {
            found = child;
            return true;
        }
        if (isValidElement(child) && hasComplexChildren(child)) {
            // Find inside the child that has children
            found = deepFind(child.props.children, deepFindFn);
            return typeof found !== 'undefined';
        }
        return false;
    });
    return found;
};
export default deepFind;
//# sourceMappingURL=deepFind.js.map