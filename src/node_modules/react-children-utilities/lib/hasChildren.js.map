{"version":3,"file":"hasChildren.js","sourceRoot":"","sources":["../src/lib/hasChildren.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,OAAO,CAAC;AAGvC,MAAM,WAAW,GAAG,CAClB,OAAgC,EAC8C,EAAE,CAChF,cAAc,CAA2C,OAAO,CAAC;IACjE,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAElC,eAAe,WAAW,CAAC","sourcesContent":["import type { ReactElement, ReactNode } from 'react';\nimport { isValidElement } from 'react';\nimport type { ReadonlyDeep } from 'type-fest';\n\nconst hasChildren = (\n  element: ReadonlyDeep<ReactNode>,\n): element is ReactElement<{ children: ReadonlyDeep<ReactNode | ReactNode[]> }> =>\n  isValidElement<{ children?: ReadonlyDeep<ReactNode[]> }>(element) &&\n  Boolean(element.props.children);\n\nexport default hasChildren;\n"]}