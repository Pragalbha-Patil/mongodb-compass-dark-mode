import { Children } from 'react';
import getElementName from './getElementName.js';
// eslint-disable-next-line max-lines-per-function
const groupByType = (children, 
// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/prefer-readonly-parameter-types
types = [], rest = 'rest') => {
    // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types
    const typeNames = types.map((type) => (typeof type === 'string' ? type : type.name));
    return Children.toArray(children).reduce(
    // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types
    (acc, child) => {
        const elementName = getElementName(child);
        const key = elementName !== null && typeNames.includes(elementName) ? elementName : rest;
        if (typeof acc[key] === 'undefined') {
            acc[key] = [];
        }
        acc[key] = [...acc[key], child];
        return acc;
    }, {});
};
export default groupByType;
//# sourceMappingURL=groupByType.js.map