import{isValidElement as e,Children as r,cloneElement as t}from"react";const n=r=>e(r)&&Boolean(r.t.children),l=t=>e(t)&&n(t)&&r.toArray(t.t.children).reduce(((r,t)=>r||e(t)),!1),o=(n,a)=>r.toArray(n).filter(a).map((r=>e(r)&&l(r)?t(r,{...r.t,children:o(r.t.children,a)}):r)),a=(t,n)=>{let o;return r.toArray(t).find(((r,t,i)=>n(r,t,i)?(o=r,!0):!(!e(r)||!l(r))&&(o=a(r.t.children,n),void 0!==o))),o},i=(t,n)=>{r.forEach(t,((r,t)=>{e(r)&&l(r)&&i(r.t.children,n),n(r,t)}))},d=(n,o)=>r.toArray(n).map(((r,n,a)=>e(r)&&l(r)?o(t(r,{...r.t,children:d(r.t.children,o)})):o(r,n,a))),p=(e,t)=>r.toArray(e).filter(t),s=r=>e(r)?"string"==typeof r.type?r.type:r.type.name:null,u=(e,t=[],n="rest")=>{const l=t.map((e=>"string"==typeof e?e:e.name));return r.toArray(e).reduce(((e,r)=>{const t=s(r),o=null!==t&&l.includes(t)?t:n;return void 0===e[o]&&(e[o]=[]),e[o]=[...e[o],r],e}),{})},c=e=>null==e||"boolean"==typeof e||"{}"===JSON.stringify(e)?"":e.toString(),y=t=>t instanceof Array||e(t)?r.toArray(t).reduce(((r,t)=>{let l="";return l=e(t)&&n(t)?y(t.t.children):e(t)&&!n(t)?"":c(t),r.concat(l)}),""):c(t),f=r=>o(r,(r=>e(r)));var h={...r,l:o,o:a,i:i,p:d,filter:p,u:s,h:u,m:n,g:l,v:y,C:f};export{o as deepFilter,a as deepFind,i as deepForEach,d as deepMap,h as default,p as filter,s as getElementName,u as groupByType,n as hasChildren,l as hasComplexChildren,y as onlyText,f as onlyValid};
//# sourceMappingURL=react-children-utilities.min.js.map
